webpackHotUpdate_N_E("pages/client/test",{

/***/ "./node_modules/css-loader/dist/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/index.js?!./node_modules/resolve-url-loader/index.js?!./node_modules/sass-loader/dist/cjs.js?!./pages/styles/test.module.scss":
/*!*******************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??ref--5-oneOf-3-1!./node_modules/next/dist/compiled/postcss-loader??__nextjs_postcss!./node_modules/resolve-url-loader??ref--5-oneOf-3-3!./node_modules/sass-loader/dist/cjs.js??ref--5-oneOf-3-4!./pages/styles/test.module.scss ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.i, \".test_pageContainer__2tcWd {\\n  background-color: #010713;\\n  height: 100vh;\\n  width: 100vw;\\n  -moz-box-sizing: border-box;\\n       box-sizing: border-box;\\n  display: -webkit-flex;\\n  display: -moz-box;\\n  display: flex;\\n  -webkit-justify-content: center;\\n     -moz-box-pack: center;\\n          justify-content: center;\\n  -webkit-align-items: center;\\n     -moz-box-align: center;\\n          align-items: center;\\n  color: #cba992;\\n  -webkit-transition: box-shadow cubic-bezier(0.6, -0.28, 0.74, 0.05) 0.8s;\\n  transition: box-shadow cubic-bezier(0.6, -0.28, 0.74, 0.05) 0.8s;\\n}\\n.test_pageContainer__2tcWd #test_MMlogo__4Wob- {\\n  width: 167px;\\n  opacity: 0.52;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  margin: 2rem 0 0 2rem;\\n}\\n.test_pageContainer__2tcWd .test_testContainer__29Oeo {\\n  display: -webkit-flex;\\n  display: -moz-box;\\n  display: flex;\\n  -webkit-flex-direction: column;\\n     -moz-box-orient: vertical;\\n     -moz-box-direction: normal;\\n          flex-direction: column;\\n  -webkit-justify-content: center;\\n     -moz-box-pack: center;\\n          justify-content: center;\\n  -webkit-align-items: center;\\n     -moz-box-align: center;\\n          align-items: center;\\n  margin-top: 3rem;\\n  height: 90%;\\n  width: 100%;\\n}\\n.test_pageContainer__2tcWd .test_testContainer__29Oeo .test_qnaContainer__3gErQ {\\n  display: -webkit-flex;\\n  display: -moz-box;\\n  display: flex;\\n  -webkit-flex-direction: column;\\n     -moz-box-orient: vertical;\\n     -moz-box-direction: normal;\\n          flex-direction: column;\\n  width: 30%;\\n  height: 100%;\\n  -webkit-justify-content: space-between;\\n     -moz-box-pack: justify;\\n          justify-content: space-between;\\n  -webkit-align-items: center;\\n     -moz-box-align: center;\\n          align-items: center;\\n}\\n.test_pageContainer__2tcWd .test_testContainer__29Oeo .test_qnaContainer__3gErQ .test_TCard__39SjR {\\n  border-radius: 15px;\\n  width: 210px;\\n  height: 225.56px;\\n  word-break: normal;\\n  background-color: #010713;\\n}\\n.test_pageContainer__2tcWd .test_testContainer__29Oeo .test_qnaContainer__3gErQ .test_TCard__39SjR p {\\n  word-break: break-word;\\n}\\n.test_pageContainer__2tcWd .test_testContainer__29Oeo .test_qnaContainer__3gErQ .test_react-draggable__1Af73 {\\n  position: absolute;\\n}\\n\\n.test_pageContainer__2tcWd::after {\\n  content: \\\"\\\";\\n  width: 100vw;\\n  height: 100vh;\\n  box-shadow: inset 0px 0px 30px 30px red;\\n  opacity: 0;\\n  position: absolute;\\n}\\n\\n.test_disabled__2kYM4 {\\n  pointer-events: none;\\n}\", \"\",{\"version\":3,\"sources\":[\"webpack://pages/styles/test.module.scss\"],\"names\":[],\"mappings\":\"AAAA;EACE,yBAAA;EAGA,aAAA;EACA,YAAA;EACA,2BAAA;OAAA,sBAAA;EACA,qBAAA;EAAA,iBAAA;EAAA,aAAA;EACA,+BAAA;KAAA,qBAAA;UAAA,uBAAA;EACA,2BAAA;KAAA,sBAAA;UAAA,mBAAA;EACA,cAAA;EACA,wEAAA;EAAA,gEAAA;AADF;AAIE;EACE,YAAA;EACA,aAAA;EACA,kBAAA;EACA,MAAA;EACA,OAAA;EACA,qBAAA;AAFJ;AAKE;EACE,qBAAA;EAAA,iBAAA;EAAA,aAAA;EACA,8BAAA;KAAA,yBAAA;KAAA,0BAAA;UAAA,sBAAA;EACA,+BAAA;KAAA,qBAAA;UAAA,uBAAA;EACA,2BAAA;KAAA,sBAAA;UAAA,mBAAA;EACA,gBAAA;EACA,WAAA;EACA,WAAA;AAHJ;AAKI;EACE,qBAAA;EAAA,iBAAA;EAAA,aAAA;EACA,8BAAA;KAAA,yBAAA;KAAA,0BAAA;UAAA,sBAAA;EACA,UAAA;EACA,YAAA;EACA,sCAAA;KAAA,sBAAA;UAAA,8BAAA;EACA,2BAAA;KAAA,sBAAA;UAAA,mBAAA;AAHN;AAWM;EAEE,mBAAA;EAEA,YAAA;EACA,gBAAA;EACA,kBAAA;EAKA,yBAAA;AAfR;AAoBQ;EACE,sBAAA;AAlBV;AAqBM;EACE,kBAAA;AAnBR;;AAyBA;EACE,WAAA;EACA,YAAA;EACA,aAAA;EACA,uCAAA;EACA,UAAA;EACA,kBAAA;AAtBF;;AAyBA;EACE,oBAAA;AAtBF\",\"sourcesContent\":[\".pageContainer {\\n  background-color: #010713;\\n  // min-height: 100vh;\\n  // max-height: min-content;\\n  height: 100vh;\\n  width: 100vw;\\n  box-sizing: border-box;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  color: #cba992; //text color\\n  transition: box-shadow cubic-bezier(0.6, -0.28, 0.74, 0.05) 0.8s,\\n    -webkit-box-shadow cubic-bezier(0.27, -0.68, 0.65, 1.8) 0.8s;\\n\\n  #MMlogo {\\n    width: 167px;\\n    opacity: 0.52;\\n    position: absolute;\\n    top: 0;\\n    left: 0;\\n    margin: 2rem 0 0 2rem;\\n  }\\n\\n  .testContainer {\\n    display: flex;\\n    flex-direction: column;\\n    justify-content: center;\\n    align-items: center;\\n    margin-top: 3rem;\\n    height: 90%;\\n    width: 100%;\\n\\n    .qnaContainer {\\n      display: flex;\\n      flex-direction: column;\\n      width: 30%;\\n      height: 100%;\\n      justify-content: space-between;\\n      align-items: center;\\n      //   .dropzoneDiv {\\n      //     width: 7rem;\\n      //     height: 4rem;\\n      //     margin-top: -4rem;\\n      //     justify-self: center;\\n      //     align-self: center;\\n      //   }\\n      .TCard {\\n        // position: relative;\\n        border-radius: 15px;\\n        // width: 50%;\\n        width: 210px;\\n        height: 225.56px;\\n        word-break: normal;\\n        // padding: 1rem;\\n        // height: 50%;\\n        // height: calc(50% * 1.1);\\n        // border: #cba992 solid 3px;\\n        background-color: #010713;\\n        // z-index: 10;\\n        // padding: 10rem;\\n        // position: absolute;\\n\\n        & p {\\n          word-break: break-word;\\n        }\\n      }\\n      .react-draggable {\\n        position: absolute;\\n      }\\n    }\\n  }\\n}\\n\\n.pageContainer::after {\\n  content: '';\\n  width: 100vw;\\n  height: 100vh;\\n  box-shadow: inset 0px 0px 30px 30px red;\\n  opacity: 0;\\n  position: absolute;\\n}\\n\\n.disabled {\\n  pointer-events: none;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"pageContainer\": \"test_pageContainer__2tcWd\",\n\t\"MMlogo\": \"test_MMlogo__4Wob-\",\n\t\"testContainer\": \"test_testContainer__29Oeo\",\n\t\"qnaContainer\": \"test_qnaContainer__3gErQ\",\n\t\"TCard\": \"test_TCard__39SjR\",\n\t\"react-draggable\": \"test_react-draggable__1Af73\",\n\t\"disabled\": \"test_disabled__2kYM4\"\n};\nmodule.exports = ___CSS_LOADER_EXPORT___;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/cjs.js?!./node_modules/next/dist/compiled/postcss-loader/index.js?!./node_modules/resolve-url-loader/index.js?!./node_modules/sass-loader/dist/cjs.js?!./pages/styles/test.module.scss\n");

/***/ }),

/***/ "./pages/client/test.tsx":
/*!*******************************!*\
  !*** ./pages/client/test.tsx ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/esm/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @babel/runtime/helpers/esm/asyncToGenerator */ \"./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! next/router */ \"./node_modules/next/dist/client/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _styles_test_module_scss__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../styles/test.module.scss */ \"./pages/styles/test.module.scss\");\n/* harmony import */ var _styles_test_module_scss__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_styles_test_module_scss__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var react_dnd__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! react-dnd */ \"./node_modules/react-dnd/dist/esm/index.js\");\n/* harmony import */ var react_dnd_touch_backend__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! react-dnd-touch-backend */ \"./node_modules/react-dnd-touch-backend/dist/esm/index.js\");\n/* harmony import */ var react_draggable__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! react-draggable */ \"./node_modules/react-draggable/build/cjs/cjs.js\");\n/* harmony import */ var react_draggable__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(react_draggable__WEBPACK_IMPORTED_MODULE_8__);\n/* harmony import */ var store__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! store */ \"./node_modules/store/dist/store.legacy.js\");\n/* harmony import */ var store__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(store__WEBPACK_IMPORTED_MODULE_9__);\n/* harmony import */ var _components_constants__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../components/constants */ \"./components/constants.ts\");\n/* harmony import */ var framer_motion__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! framer-motion */ \"./node_modules/framer-motion/dist/framer-motion.es.js\");\n/* harmony import */ var _components_TestProgressBar__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../components/TestProgressBar */ \"./components/TestProgressBar.tsx\");\n/* harmony import */ var _components_PagesController__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../components/PagesController */ \"./components/PagesController.tsx\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_14__);\n\n\n\n\nvar _jsxFileName = \"/Users/yberfox/Documents/personal-projects/modes-muzejs-client/pages/client/test.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = react__WEBPACK_IMPORTED_MODULE_3___default.a.createElement;\n\n // import interact from \"interactjs\";\n\n\n\n\n\n\n\n\n\n\n\n\nfunction Test(props) {\n  _s();\n\n  var _this = this;\n\n  var router = Object(next_router__WEBPACK_IMPORTED_MODULE_4__[\"useRouter\"])();\n\n  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(),\n      pages = _useState[0],\n      setPages = _useState[1];\n\n  var _useState2 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])([]),\n      pagesContent = _useState2[0],\n      setPagesContent = _useState2[1]; // const [qnaOverlaps, setQnaOverlaps] = useState(0);\n\n\n  var qnaOverlaps = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useRef\"])({\n    counter: 0\n  }); // const [currentPage, setCurrentPage] = useState<number>(0);\n\n  var initialPage = {\n    count: 0\n  };\n\n  function reducer(page, action) {\n    switch (action.type) {\n      case \"increment\":\n        if (page.count + 1 !== (pages === null || pages === void 0 ? void 0 : pages.length)) {\n          return {\n            count: page.count + 1\n          };\n        } else {\n          return {\n            count: page.count\n          };\n        }\n\n      case \"decrement\":\n        if (page.count !== 0) {\n          return {\n            count: page.count - 1\n          };\n        } else {\n          return {\n            count: page.count\n          };\n        }\n\n      default:\n        throw new Error();\n    }\n  }\n\n  var _useReducer = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useReducer\"])(reducer, initialPage),\n      page = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useEffect\"])(function () {\n    if (page.count + 1 === pagesContent.length && page.count !== 0 && pagesContent.length !== 0 // !props.test\n    ) {// console.log(page.count);\n        // console.log(pagesContent.length);\n      }\n  });\n\n  var _useState3 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])({\n    q: {},\n    a: {}\n  }),\n      qaRectPositions = _useState3[0],\n      setqaRectPositions = _useState3[1]; // useEffect(() => {\n  //   console.log(qaRectPositions.a?.x, qaRectPositions.q?.x, \"x, x\");\n  // }, [qaRectPositions]);\n\n\n  var refsToQuestions = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useRef\"])([]);\n  var refsToAnswersHandles = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useRef\"])([]);\n  var refsToAnswersPositions = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useRef\"])([]);\n\n  var _useState4 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(),\n      test = _useState4[0],\n      setTest = _useState4[1];\n\n  Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useEffect\"])(function () {\n    if (props.test) {\n      setPagesContent(props.test.ru.pages);\n    } else {\n      console.log(router.query); //TODO: direct to /client/success?testid=${testid}&lang=${lang} once test is finished\n\n      var chosenLang = router.query.lang;\n\n      var _test = store__WEBPACK_IMPORTED_MODULE_9___default.a.get(\"theTest\");\n\n      setTest(_test);\n      console.log(chosenLang);\n      setPagesContent(_test[store__WEBPACK_IMPORTED_MODULE_9___default.a.get(\"activeLang\")].pages);\n    } // createQnAPairs(activeLang.pages);\n\n  }, []);\n  Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useEffect\"])(function () {\n    var pagesPrep = prepareJSXOfPages(refsToQuestions); // console.log(pagesPrep);\n  }, [pagesContent]); // console.log(qnaOverlaps.current.counter);\n\n  function isImgOrText(data) {\n    return data.match(_components_constants__WEBPACK_IMPORTED_MODULE_10__[\"URLCheckForLocalHost\"]) ? true : false;\n  }\n  /**\n   * Returns either an <img> or <p> containig the `data`\n   * @param data string containing eihter the text of a question/answer or a link to the image\n   */\n\n\n  function imgOrText(data) {\n    // console.log(data);\n    // console.log(data.match(URLCheckFor192.168.8.100));\n    if (data.match(_components_constants__WEBPACK_IMPORTED_MODULE_10__[\"URLCheckForLocalHost\"]) !== null) {\n      return __jsx(\"img\", {\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          objectFit: \"cover\",\n          borderRadius: \"16px\",\n          border: \"#cba992 solid 3px\"\n        },\n        src: data,\n        alt: \":(\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return (// <div>\n        __jsx(\"p\", {\n          style: {\n            width: \"100%\",\n            margin: \"0\",\n            padding: \"1rem\",\n            boxSizing: \"border-box\",\n            textAlign: \"center\",\n            lineHeight: \"110%\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }\n        }, data) // </div>\n\n      );\n    }\n  }\n\n  function handleDrag(event, data) {\n    // console.log(data);\n    // alert(\"Dragging\");\n    var tmp = event.target.parentElement.parentElement.id; // console.log(tmp);\n\n    var id = tmp.slice(tmp.indexOf(\"_\") + 1, tmp.lastIndexOf(\"_\")); // console.log(id);\n\n    refsToAnswersPositions.current[id] = {\n      position: data\n    };\n  }\n\n  function handleStopOfADrag(event, data) {\n    if (event.target.parentElement.parentElement.classList[0].includes(\"test_TCard\")) {\n      var tmp = event.target.parentElement.parentElement.id;\n      \"\";\n      var id = tmp.slice(tmp.indexOf(\"_\") + 1, tmp.lastIndexOf(\"_\"));\n\n      var _getRectanglesFromEve = getRectanglesFromEvent(event),\n          questionRect = _getRectanglesFromEve.questionRect,\n          answerRect = _getRectanglesFromEve.answerRect;\n\n      var intersections = refsToQuestions.current.map(function (q) {\n        return CheckIfAnswerIntersectedTheQuestion(q.getBoundingClientRect(), answerRect);\n      });\n      console.log(intersections);\n\n      if (CheckIfAnswerIntersectedTheQuestion(questionRect, answerRect)) {\n        // event.target.parentNode.parentNode.style.pointerEvents = \"none\";\n        applyCSSToMatchedCards(event, refsToQuestions.current[id]);\n        qnaOverlaps.current.counter += 1;\n        console.log(refsToQuestions.current[id]);\n        var questionContainer = refsToQuestions.current[id].parentElement;\n        console.log(questionContainer, \"123123\"); // console.log(refsToAnswersHandles.current[id]);\n        // Sets the answer cards as the parent of a question container\n        // refsToAnswersHandles.current[id].parentElement!.style.transform =\n        //     \"translate(0px, 0px)\";\n        // refsToAnswersHandles.current[id].parentElement!.style.marginTop =\n        //     \"-1rem\";\n        // questionContainer.appendChild(\n        //     refsToAnswersHandles.current[id].parentElement!\n        // );\n\n        if (qnaOverlaps.current.counter === 3) {\n          // alert(pagesContent.length);\n          // if (page.count < pagesContent.length - 1) {\n          refsToQuestions.current = []; // setCurrentPage(currentPage + 1);\n          // setTimeout(() => {\n\n          dispatch({\n            type: \"increment\"\n          }); // }, 1000);\n          // console.log(page.count, \"pages\", pagesContent.length, \"pagesContent\");\n          // }\n\n          qnaOverlaps.current.counter = 0;\n        }\n      } else if (intersections.includes(true)) {\n        console.log('In an if for flash');\n        flashScreen();\n      } // refsToAnswersPositions.current[id] = {\n      //   position: {\n      //     x: data.x,\n      //     y: data.y,\n      //     deltaX: data.x - data.lastX,\n      //     deltaY: data.y - data.lastY,\n      //   },\n      // };\n\n\n      refsToAnswersPositions.current[id] = {\n        position: data\n      };\n    }\n  }\n\n  function flashScreen() {\n    return _flashScreen.apply(this, arguments);\n  }\n\n  function _flashScreen() {\n    _flashScreen = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {\n      var testBody, computedStyles;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              testBody = document.getElementsByClassName(_styles_test_module_scss__WEBPACK_IMPORTED_MODULE_5___default.a.pageContainer)[0];\n              console.log(testBody, 'body');\n              computedStyles = window.getComputedStyle(testBody, '::after');\n              computedStyles.opacity = '1'; // testBody.style.boxShadow = \"inset 0px 0px 30px 30px red\";\n              // setTimeout(() => (testBody.style.boxShadow = \"none\"), 900);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _flashScreen.apply(this, arguments);\n  }\n\n  function applyCSSToMatchedCards(event, answer) {\n    // // Sets the contasiner of cards to be unclickable/untouchable.\n    // event.target.parentElement.parentElement.parentElement.parentElement.style.pointerEvents =\n    //   \"none\";\n    answer.parentElement.style.pointerEvents = \"none\"; // answer.style.width = \"100rem\";\n\n    console.log(event.target.parentElement.parentElement.parentElement, 'target parent element');\n    event.target.parentElement.parentElement.parentElement.style.pointerEvents = \"none\"; //* Applies a greenish border around answer cards.\n\n    console.log(event.target.tagName);\n\n    if (event.target.tagName == \"P\") {\n      console.log(event.target.parentElement.parentElement.style.border);\n      event.target.parentElement.parentElement.style.border = \"solid 5px rgb(37, 180, 150)\";\n      event.target.parentElement.parentElement.parentElement.style.position = \"inherit\";\n      console.log(event.target.parentElement.parentElement.style.border);\n    } else if (event.target.tagName == \"IMG\") {\n      console.log(event.target); // event.target.style.border = \"none\";\n\n      event.target.style.border = \"solid 5px rgb(37, 180, 150)\";\n      event.target.style.borderColor = \"rgb(73, 180, 150,)\";\n      event.target.parentElement.parentElement.parentElement.style.position = \"inherit\";\n    }\n  }\n  /**\n   * Checks whether the dragged element intersects its question.\n   * @param event refer to React Draggable\n   */\n\n\n  function CheckIfAnswerIntersectedTheQuestion(questionRect, answerRect) {\n    // const { questionRect, answerRect } = getRectangles(event);\n    // let answerRect = answerDragged.parentElement!.getBoundingClientRect();\n    setqaRectPositions({\n      q: questionRect,\n      a: answerRect\n    });\n\n    if (questionRect.x < answerRect.x + answerRect.width && questionRect.x + questionRect.width > answerRect.x) {\n      if (questionRect.y < answerRect.y + answerRect.height && questionRect.y + questionRect.height > answerRect.y) {\n        // console.log(answerDragged.parentElement?.parentElement, \"oi\");\n        // answerDragged.parentElement!.style.filter = \"brightness(0.5)\";\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function getRectanglesFromEvent(event) {\n    setqaRectPositions({});\n    var answerDragged = event.target.parentElement.parentElement;\n    console.log(answerDragged, 'answer');\n    var answerDraggedID = answerDragged.id; // const relatedQuestion = document.getElementById(\n    //   `Question_${answerDraggedID.slice(answerDraggedID.indexOf(\"_\"))}`\n    // );\n\n    var answerDraggedIterator = answerDraggedID.slice(answerDraggedID.indexOf(\"_\") + 1, answerDraggedID.lastIndexOf(\"_\"));\n    var relatedAnswerHandle = refsToAnswersHandles.current[Number(answerDraggedIterator)]; // console.log(relatedAnswerHandle, \"handles\");\n\n    var relatedQuestionHandle = refsToQuestions.current[Number(answerDraggedIterator)];\n    console.log(relatedQuestionHandle, \"handles\");\n    var questionRect = relatedQuestionHandle.getBoundingClientRect();\n    var answerRect = answerDragged.getBoundingClientRect(); // const answerRect = relatedAnswerHandle.getBoundingClientRect();\n\n    return {\n      questionRect: questionRect,\n      answerRect: answerRect\n    };\n  }\n\n  var TestCompletionAcknowledgement = function TestCompletionAcknowledgement() {\n    return {\n      ru: \"\\u0422\\u0435\\u0441\\u0442 \\\"\".concat(props.test ? props.test[props.activeLanguage].name : store__WEBPACK_IMPORTED_MODULE_9___default.a.get(\"theTest\").ru.name, \"\\\" \\u043F\\u0440\\u043E\\u0439\\u0434\\u0435\\u043D.\"),\n      lv: \"Tests \\\"\".concat(props.test ? props.test[props.activeLanguage].name : store__WEBPACK_IMPORTED_MODULE_9___default.a.get(\"theTest\").lv.name, \"\\\" ir pabeigts.\"),\n      en: \"Test \\\"\".concat(props.test ? props.test[props.activeLanguage].name : store__WEBPACK_IMPORTED_MODULE_9___default.a.get(\"theTest\").en.name, \"\\\" is compeleted.\")\n    };\n  };\n\n  var _useState5 = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useState\"])(\"\"),\n      clientEmail = _useState5[0],\n      setClientEmail = _useState5[1];\n\n  var emailRef = Object(react__WEBPACK_IMPORTED_MODULE_3__[\"useRef\"])(\"\");\n\n  function prepareLastPageJSX(body, heading, email) {\n    console.log(heading, body);\n    return __jsx(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n        alignItems: \"center\",\n        flexDirection: \"row\",\n        width: \"100%\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        width: \"50%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 17\n      }\n    }, __jsx(\"h1\", {\n      style: {\n        color: \"#c6aa96\",\n        textAlign: \"center\",\n        fontWeight: 300,\n        fontSize: \"60px\",\n        margin: \"0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 21\n      }\n    }, heading), __jsx(\"p\", {\n      style: {\n        fontSize: \"36px\",\n        fontWeight: 300,\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 21\n      }\n    }, body)), __jsx(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"40%\",\n        height: \"160px\",\n        justifyContent: \"space-around\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 17\n      }\n    }, email && // <form onSubmit={(e) => e.preventDefault()}>\n    __jsx(\"input\", {\n      onChange: function onChange(e) {\n        emailRef.current = e.target.value;\n        console.log(emailRef.current, \"ref\"); // setClientEmail(e.target.value);\n\n        console.log(clientEmail, \"state\");\n        console.log(e.target.value);\n        console.log(e.currentTarget.value);\n      },\n      autoComplete: \"off\",\n      style: {\n        // position: \"absolute\",\n        background: \"rgba(0, 0, 0, 0)\",\n        color: \"#C6AA96\",\n        border: \"#C6AA96 solid 3px\",\n        padding: \"0\",\n        borderRadius: \"16px\",\n        // width: \"100%\",\n        height: \"30%\",\n        fontSize: \"35px\",\n        textAlign: \"center\"\n      },\n      placeholder: \"example@mail.com\",\n      type: \"email\",\n      name: \"userInfo\",\n      id: \"userEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 25\n      }\n    }), __jsx(\"button\", {\n      style: {\n        width: \"100%\",\n        height: \"45%\",\n        backgroundColor: \"#C6AA96\",\n        border: \"none\",\n        borderRadius: \"16px\",\n        padding: \"0\" // WebkitTextFillColor: \"transparent\",\n        // WebkitBackgroundClip: \"text\",\n\n      },\n      onClick: handleSendBtnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 21\n      }\n    }, __jsx(\"p\", {\n      style: {\n        margin: \"0\",\n        color: \"black\",\n        fontFamily: \"Montserrat\",\n        fontSize: \"40px\",\n        fontWeight: 700,\n        background: \"whatever\",\n        letterSpacing: 6 // WebkitTextFillColor: \"transparent\",\n        // WebkitBackgroundClip: \"text\",\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 25\n      }\n    }, getBtnText().toLocaleUpperCase()))));\n\n    function getBtnText() {\n      return getLang() === \"en\" ? \"Finish\" : getLang() === \"lv\" ? \"Pabeigt\" : \"Закончить\";\n    }\n\n    function getLang() {\n      return store__WEBPACK_IMPORTED_MODULE_9___default.a.get(\"activeLang\");\n    }\n  }\n\n  function handleSendBtnClick(_x) {\n    return _handleSendBtnClick.apply(this, arguments);\n  }\n\n  function _handleSendBtnClick() {\n    _handleSendBtnClick = Object(_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__[\"default\"])( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(e) {\n      var options, response;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(e); // const response = await Axios.post(`${productionURL}email`, {\n              //   email: clientEmail,\n              // });\n\n              options = {\n                method: \"POST\",\n                url: \"https://modesmuzejs.lv/api/quiz/tests/email\",\n                origin: _components_constants__WEBPACK_IMPORTED_MODULE_10__[\"productionHost\"],\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                data: {\n                  email: \"1231@gmail.com\"\n                }\n              }; // await Axios.request(options)\n              //   .then(function (response) {\n              //     console.log(response.data);\n              //   })\n              //   .catch(function (error) {\n              //     console.error(error);\n              //   });\n              // console.log(response);\n\n              console.log(clientEmail, \"state\");\n              console.log({\n                email: clientEmail\n              });\n              _context2.next = 6;\n              return axios__WEBPACK_IMPORTED_MODULE_14___default.a.post(\"\".concat(_components_constants__WEBPACK_IMPORTED_MODULE_10__[\"productionURL\"], \"tests/email\"), {\n                email: emailRef.current\n              });\n\n            case 6:\n              response = _context2.sent;\n              console.log(response);\n\n              if (response.status === 200) {\n                router.push(\"\".concat(_components_constants__WEBPACK_IMPORTED_MODULE_10__[\"productionHost\"], \"/client/languages?testid=\").concat(store__WEBPACK_IMPORTED_MODULE_9___default.a.get(\"theTest\").id));\n              }\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _handleSendBtnClick.apply(this, arguments);\n  }\n\n  function prepareFirstPage() {\n    return txtExpalantion();\n  }\n\n  var start_test_btn = function start_test_btn() {\n    return __jsx(\"svg\", {\n      width: \"116.656\",\n      height: \"116.66\",\n      viewBox: \"0 0 116.656 116.66\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 9\n      }\n    }, __jsx(\"defs\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 13\n      }\n    }, __jsx(\"filter\", {\n      id: \"Path_14\",\n      x: \"0\",\n      y: \"0\",\n      width: \"116.656\",\n      height: \"116.66\",\n      filterUnits: \"userSpaceOnUse\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 17\n      }\n    }, __jsx(\"feOffset\", {\n      dy: \"3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 21\n      }\n    }), __jsx(\"feGaussianBlur\", {\n      stdDeviation: \"3\",\n      result: \"blur\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 21\n      }\n    }), __jsx(\"feFlood\", {\n      \"flood-opacity\": \"0.161\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 21\n      }\n    }), __jsx(\"feComposite\", {\n      operator: \"in\",\n      in2: \"blur\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 21\n      }\n    }), __jsx(\"feComposite\", {\n      \"in\": \"SourceGraphic\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 21\n      }\n    }))), __jsx(\"g\", {\n      id: \"Icon_feather-arrow-right-circle\",\n      \"data-name\": \"Icon feather-arrow-right-circle\",\n      transform: \"translate(11.503 6.771)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 13\n      }\n    }, __jsx(\"g\", {\n      transform: \"matrix(1, 0, 0, 1, -11.5, -6.77)\",\n      filter: \"url(#Path_14)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 17\n      }\n    }, __jsx(\"path\", {\n      id: \"Path_14-2\",\n      \"data-name\": \"Path 14\",\n      d: \"M95.656,49.33A46.328,46.328,0,1,1,49.328,3,46.329,46.329,0,0,1,95.656,49.33Z\",\n      transform: \"translate(9 6)\",\n      fill: \"none\",\n      stroke: \"#c6aa96\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      \"stroke-width\": \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 21\n      }\n    })), __jsx(\"path\", {\n      id: \"Path_15\",\n      \"data-name\": \"Path 15\",\n      d: \"M18,47.06,35.53,29.53,18,12\",\n      transform: \"translate(28.825 19.03)\",\n      fill: \"none\",\n      stroke: \"#c6aa96\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      \"stroke-width\": \"5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 17\n      }\n    }), __jsx(\"path\", {\n      id: \"Path_16\",\n      \"data-name\": \"Path 16\",\n      d: \"M12,18H47.06\",\n      transform: \"translate(17.295 30.559)\",\n      fill: \"none\",\n      stroke: \"#c6aa96\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      \"stroke-width\": \"5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 17\n      }\n    })));\n  };\n\n  function txtExpalantion() {\n    var sampleTxt = {\n      ru: \"Найдите соответствие, переставляя нижние карточки.\",\n      en: \"Find a match by moving the bottom cards.\",\n      lv: \"Atrodiet atbilstību, pārliekot apakšējas kartītes.\"\n    };\n    return __jsx(\"div\", {\n      id: \"btn_txt_container\",\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-evenly\",\n        height: \"40%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625,\n        columnNumber: 13\n      }\n    }, __jsx(\"h1\", {\n      style: {\n        fontWeight: 400,\n        fontSize: \"xxx-large\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 17\n      }\n    }, sampleTxt[store__WEBPACK_IMPORTED_MODULE_9___default.a.get(\"activeLang\")]), __jsx(\"button\", {\n      style: {\n        background: \"none\",\n        border: \"none\"\n      },\n      onClick: function onClick() {\n        return dispatch({\n          type: \"increment\"\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 17\n      }\n    }, start_test_btn()));\n  }\n\n  function ExplanatoryVideo() {\n    return __jsx(\"div\", {\n      style: {\n        position: \"absolute\",\n        width: \"100vw\",\n        height: \"100vh\",\n        background: \"black\",\n        zIndex: 10000,\n        top: 0,\n        left: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 13\n      }\n    }, __jsx(\"video\", {\n      onEnded: function onEnded() {\n        return dispatch({\n          type: \"increment\"\n        });\n      },\n      controls: true,\n      autoPlay: true,\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666,\n        columnNumber: 17\n      }\n    }, __jsx(\"source\", {\n      src: \"/Test_Example.webm\",\n      type: \"video/webm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 21\n      }\n    })));\n  }\n  /**\n   * Wraps question and answer pairs into a div (containing 3 pairs in this case)\n   */\n\n\n  function prepareJSXOfPages(refsToQuestions) {\n    var _this2 = this;\n\n    // console.log(pagesContent);\n    var pagesPrep = [];\n    console.log(pagesPrep);\n    props.fromPreview == undefined && pagesPrep.push(prepareFirstPage());\n    var tmpPages = pagesContent.map(function (page, pageIterator) {\n      return (// <AnimatePresence>\n        __jsx(framer_motion__WEBPACK_IMPORTED_MODULE_11__[\"motion\"].div, {\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 1\n          },\n          exit: {\n            opacity: 0\n          },\n          id: \"page-\".concat(pageIterator),\n          key: pageIterator,\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            width: \"90%\",\n            height: \"88%\"\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 13\n          }\n        }, qnaPairsToJSX(page, pageIterator, refsToQuestions)) // </AnimatePresence>\n\n      );\n    }); // console.log(tmpPages);\n\n    pagesPrep.push.apply(pagesPrep, Object(_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(tmpPages)); // console.log(pagesPrep);\n\n    var tmp;\n\n    if (props.fromPreview) {\n      tmp = store__WEBPACK_IMPORTED_MODULE_9___default.a.get(\"testInProgress\");\n    } else {\n      tmp = store__WEBPACK_IMPORTED_MODULE_9___default.a.get(\"theTest\");\n    }\n\n    console.log(tmp);\n\n    var _ref = tmp[store__WEBPACK_IMPORTED_MODULE_9___default.a.get(\"activeLang\")] || props.test[props.activeLanguage],\n        finalPageTextBody = _ref.finalPageTextBody,\n        finalPageTextHeading = _ref.finalPageTextHeading;\n\n    console.log(tmp);\n    var lastPage = prepareLastPageJSX(finalPageTextBody, finalPageTextHeading, tmp.emailSender\n    /* as boolean */\n    );\n    pagesPrep.push(lastPage);\n    setPages(pagesPrep); // console.log(pages);\n\n    return pagesPrep;\n  }\n\n  var textCardCSSSetting = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    width: \"320px\",\n    height: \"min-content\",\n    // padding: \"1rem\",\n    border: \"3px solid rgb(198\t169\t149\t)\"\n  };\n\n  function setStyleAccordingToTestType(cardData) {\n    switch (test === null || test === void 0 ? void 0 : test.type) {\n      case \"PP\":\n        return {\n          width: \"250px\",\n          height: \"259.37px\"\n        };\n\n      case \"TT\":\n        return textCardCSSSetting;\n\n      default:\n        return isImgOrText(cardData) ? {\n          width: \"320px\",\n          height: \"347px\"\n        } : textCardCSSSetting;\n    }\n  }\n  /**\n   * Returns an array of JSX Elements containing question and answer cards (which are shuffled randomly before rendering) in pairs\n   * @param page Array of question and answer pairs to be rendered\n   * @param pageIterator page (int) to which the array corresponds\n   */\n\n\n  function qnaPairsToJSX(page, pageIterator, refsToQuestions) {\n    var _this3 = this;\n\n    var questions = page.QnAPairs.map(function (qnaPair, iterator) {\n      return __jsx(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        ref: function ref(ele) {\n          return refsToQuestions.current[iterator] = ele;\n        },\n        className: _styles_test_module_scss__WEBPACK_IMPORTED_MODULE_5___default.a.TCard,\n        id: \"Question_\".concat(iterator, \"_p-\").concat(pageIterator),\n        key: \"Question_\".concat(iterator, \"_p-\").concat(pageIterator),\n        style: setStyleAccordingToTestType(qnaPair.question),\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        style: {\n          height: \"100%\",\n          boxSizing: \"border-box\"\n        },\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 21\n        }\n      }, imgOrText(qnaPair.question))));\n    });\n\n    for (var i = 0; i < page.QnAPairs.length; i++) {\n      refsToAnswersPositions.current[i] = {\n        position: {\n          x: 0,\n          y: 0\n        }\n      };\n    }\n\n    var answers = page.QnAPairs.map(function (qnaPair, iterator) {\n      return __jsx(react_draggable__WEBPACK_IMPORTED_MODULE_8___default.a, {\n        axis: \"both\" // onTouchStart={handleStartOfDrag}\n        ,\n        onDrag: handleDrag // position={refsToAnswersPositions.current[iterator].position}\n        ,\n        onStop: handleStopOfADrag // position={null}\n        // grid={[25, 25]}\n        ,\n        defaultPosition: {\n          x: 0,\n          y: 0\n        },\n        scale: 1,\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        style: {\n          position: \"absolute\",\n          bottom: \"10%\",\n          display: \"flex\",\n          flexDirection: \"column-reverse\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          zIndex: 100 // border: \"3px solid rgb(198\t169\t149\t)\",\n\n        },\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: _styles_test_module_scss__WEBPACK_IMPORTED_MODULE_5___default.a.TCard,\n        id: \"Answer_\".concat(iterator, \"_p-\").concat(pageIterator),\n        key: iterator,\n        style: setStyleAccordingToTestType(qnaPair.answer),\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        style: {\n          height: \"100%\",\n          width: \"100%\",\n          boxSizing: \"border-box\"\n        },\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 25\n        }\n      }, imgOrText(qnaPair.answer)))));\n    });\n    var answersShuffled = shuffle(answers);\n    var questionsShuffled = shuffle(questions); // console.log(tmp);\n    // console.log(questions, answers);\n\n    var preparedPairsShuffled = page.QnAPairs.map(function (_, iterator) {\n      return __jsx(framer_motion__WEBPACK_IMPORTED_MODULE_11__[\"motion\"].div, {\n        // initial=\"hidden\"\n        // animate=\"visible\"\n        variants: variantsQnAPairs,\n        transition: {\n          duration: \"1.5\"\n        },\n        key: \"QuestionAnswerP-\".concat(iterator, \"_p-\").concat(pageIterator),\n        className: _styles_test_module_scss__WEBPACK_IMPORTED_MODULE_5___default.a.qnaContainer,\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 891,\n          columnNumber: 13\n        }\n      }, questions[iterator], answersShuffled[iterator]);\n    });\n    return preparedPairsShuffled;\n  }\n\n  var variantsQnAPairs = {\n    visible: {\n      opacity: 1\n    },\n    hidden: {\n      opacity: 0\n    }\n  };\n\n  function shuffle(array) {\n    var m = array.length;\n    var t;\n    var i; // console.log(m, t, i);\n    // While there remain elements to shuffle…\n\n    while (m) {\n      // Pick a remaining element…\n      i = Math.floor(Math.random() * m--); // console.log(i, \"i\");\n      // And swap it with the current element.\n\n      t = array[m];\n      array[m] = array[i];\n      array[i] = t; // console.log(array);\n    }\n\n    return array;\n  }\n\n  var StickCircle = function StickCircle() {\n    return __jsx(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"19\",\n      height: \"26.956\",\n      viewBox: \"0 0 19 26.956\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 939,\n        columnNumber: 9\n      }\n    }, __jsx(\"g\", {\n      id: \"Group_35\",\n      \"data-name\": \"Group 35\",\n      transform: \"translate(-115.882 -241.137)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 945,\n        columnNumber: 13\n      }\n    }, __jsx(\"line\", {\n      id: \"Line_1\",\n      \"data-name\": \"Line 1\",\n      y2: \"11\",\n      transform: \"translate(125.357 243.137)\",\n      fill: \"none\",\n      stroke: \"#c6aa96\" // strokeLinecap=\"round\"\n      ,\n      strokeWidth: \"4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 950,\n        columnNumber: 17\n      }\n    }), __jsx(\"circle\", {\n      id: \"Ellipse_4\",\n      \"data-name\": \"Ellipse 4\",\n      cx: \"9.5\",\n      cy: \"9.5\",\n      r: \"9.5\",\n      transform: \"translate(115.882 249.094)\",\n      fill: \"#c6aa96\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 960,\n        columnNumber: 17\n      }\n    })));\n  };\n\n  var StickSemiCircle = function StickSemiCircle() {\n    return __jsx(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"19\",\n      height: \"18.761\",\n      viewBox: \"0 0 19 18.761\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 974,\n        columnNumber: 9\n      }\n    }, __jsx(\"g\", {\n      id: \"Group_34\",\n      \"data-name\": \"Group 34\",\n      transform: \"translate(-115.996 0)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 980,\n        columnNumber: 13\n      }\n    }, __jsx(\"line\", {\n      id: \"Line_4\",\n      \"data-name\": \"Line 4\",\n      y2: \"110\",\n      transform: \"translate(125.357 5.761)\",\n      fill: \"none\",\n      stroke: \"#c6aa96\" // strokeLinecap=\"round\"\n      ,\n      strokeWidth: \"4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 981,\n        columnNumber: 17\n      }\n    }), __jsx(\"g\", {\n      id: \"Path_11\",\n      \"data-name\": \"Path 11\",\n      transform: \"translate(115.996 -7.551)\",\n      fill: \"none\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 991,\n        columnNumber: 17\n      }\n    }, __jsx(\"path\", {\n      d: \"M9.5,11.26c5.247,0,9.5-7.007,9.5-1.76a9.5,9.5,0,0,1-19,0C0,4.253,4.253,11.26,9.5,11.26Z\",\n      stroke: \"none\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 997,\n        columnNumber: 21\n      }\n    }), __jsx(\"path\", {\n      d: \"M 0.8809738159179688 7.550793647766113 C 2.390966415405273 7.550793647766113 5.682500839233398 11.26012802124023 9.5 11.26012802124023 C 13.31717872619629 11.26012802124023 16.60886001586914 7.551321029663086 18.11902618408203 7.550793647766113 C 18.68457794189453 7.550596237182617 19 8.070477485656738 19 9.499998092651367 C 19 14.74670791625977 14.74670028686523 18.99999809265137 9.5 18.99999809265137 C 4.253299713134766 18.99999809265137 0 14.74670791625977 0 9.499998092651367 C 0 8.070796966552734 0.3156604766845703 7.550793647766113 0.8809738159179688 7.550793647766113 Z\",\n      stroke: \"none\",\n      fill: \"#c6aa96\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1001,\n        columnNumber: 21\n      }\n    }))));\n  };\n\n  var ExitBtn = function ExitBtn(size) {\n    return !props.fromPreview && __jsx(\"svg\", {\n      // className={compStyles.CloseBTN}\n      onClick: function onClick() {\n        return !props.test && router.push(\"\".concat(_components_constants__WEBPACK_IMPORTED_MODULE_10__[\"productionHost\"], \"/client/languages?testid=\").concat(store__WEBPACK_IMPORTED_MODULE_9___default.a.get(\"theTest\")._id) // `${devURL}client/test?testid=${\n        //   store.get(\"theTest\")._id\n        // }&lang=${store.get(\"activeLang\")}`\n        );\n      },\n      width: size,\n      height: size,\n      viewBox: \"0 0 56 56\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1013,\n        columnNumber: 9\n      }\n    }, __jsx(\"g\", {\n      id: \"Group_28\",\n      \"data-name\": \"Group 28\",\n      transform: \"translate(-1194 -73)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1032,\n        columnNumber: 13\n      }\n    }, __jsx(\"circle\", {\n      id: \"Ellipse_8\",\n      \"data-name\": \"Ellipse 8\",\n      cx: \"16.5\",\n      cy: \"16.5\",\n      r: \"16.5\",\n      transform: \"translate(1194 73)\",\n      fill: \"#c6aa96\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1033,\n        columnNumber: 17\n      }\n    }), __jsx(\"path\", {\n      id: \"Icon_ionic-ios-close\",\n      \"data-name\": \"Icon ionic-ios-close\",\n      d: \"M23.921,21.5l7.3-7.3A1.71,1.71,0,0,0,28.8,11.786l-7.3,7.3-7.3-7.3A1.71,1.71,0,1,0,11.788,14.2l7.3,7.3-7.3,7.3a1.71,1.71,0,1,0,2.418,2.418l7.3-7.3,7.3,7.3A1.71,1.71,0,1,0,31.218,28.8Z\",\n      transform: \"translate(1188.715 67.711)\",\n      fill: \"#1b212e\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1042,\n        columnNumber: 17\n      }\n    })));\n  };\n\n  function checkWhetherIsPreview() {\n    if (props.fromPreview) {\n      var PreviewStyle = {\n        width: \"100%\",\n        height: \"100%\"\n      };\n      return PreviewStyle;\n    }\n\n    return {};\n  }\n\n  return __jsx(react_dnd__WEBPACK_IMPORTED_MODULE_6__[\"DndProvider\"], {\n    backend: react_dnd_touch_backend__WEBPACK_IMPORTED_MODULE_7__[\"TouchBackend\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1070,\n      columnNumber: 9\n    }\n  }, props.test && __jsx(react__WEBPACK_IMPORTED_MODULE_3___default.a.Fragment, null, __jsx(\"button\", {\n    style: {\n      position: \"absolute\",\n      top: \"46%\",\n      right: \"3%\",\n      border: \"none\",\n      background: \"none\"\n    },\n    onClick: function onClick() {\n      console.log(\"123\");\n      dispatch({\n        type: \"increment\"\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1074,\n      columnNumber: 21\n    }\n  }, Object(_components_PagesController__WEBPACK_IMPORTED_MODULE_13__[\"Arrow\"])(\"60\", \"84\")), __jsx(\"button\", {\n    style: {\n      position: \"absolute\",\n      top: \"46%\",\n      left: \"3%\",\n      transform: \"rotate(180deg)\",\n      background: \"none\",\n      border: \"none\"\n    },\n    onClick: function onClick() {\n      return dispatch({\n        type: \"decrement\"\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1089,\n      columnNumber: 21\n    }\n  }, Object(_components_PagesController__WEBPACK_IMPORTED_MODULE_13__[\"Arrow\"])(\"60\", \"84\"))), __jsx(framer_motion__WEBPACK_IMPORTED_MODULE_11__[\"AnimatePresence\"], {\n    exitBeforeEnter: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1105,\n      columnNumber: 13\n    }\n  }, __jsx(framer_motion__WEBPACK_IMPORTED_MODULE_11__[\"motion\"].div, {\n    key: \"animatedPage\",\n    initial: {\n      opacity: 0,\n      y: -100\n    },\n    animate: {\n      opacity: 1,\n      y: 0\n    },\n    exit: {\n      opacity: 0,\n      y: 500\n    },\n    className: _styles_test_module_scss__WEBPACK_IMPORTED_MODULE_5___default.a.pageContainer,\n    style: checkWhetherIsPreview(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1106,\n      columnNumber: 17\n    }\n  }, !props.test && __jsx(\"img\", {\n    src: \"https://www.fashionmuseumriga.lv/bitrix/templates/main_template/img/logo.png\",\n    alt: \"Fashion Museum\",\n    id: _styles_test_module_scss__WEBPACK_IMPORTED_MODULE_5___default.a.MMlogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1115,\n      columnNumber: 25\n    }\n  }), __jsx(framer_motion__WEBPACK_IMPORTED_MODULE_11__[\"motion\"].div, {\n    key: \"testContainerAnima\",\n    className: _styles_test_module_scss__WEBPACK_IMPORTED_MODULE_5___default.a.testContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1121,\n      columnNumber: 21\n    }\n  }, (pages === null || pages === void 0 ? void 0 : pages.length) - 1 != page.count\n  /* 578G */\n  && __jsx(\"button\", {\n    style: {\n      opacity: \"70%\",\n      position: \"absolute\",\n      right: \"2%\",\n      top: \"5%\",\n      backgroundColor: \"rgba(0, 0, 0, 0)\",\n      border: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1123,\n      columnNumber: 29\n    }\n  }, ExitBtn(\"45\")), pages !== undefined && page.count !== (pages === null || pages === void 0 ? void 0 : pages.length) - 1 && __jsx(_components_TestProgressBar__WEBPACK_IMPORTED_MODULE_12__[\"default\"] // activePage={!props.fromPreview ? page.count - 1 : page.count}\n  , {\n    activePage:\n    /* props.fromPreview == undefined ? page.count - 1 : */\n    page.count,\n    numberOfPages: props.fromPreview == undefined ? pages.length - 1 : pages.length // numberOfPages={\n    //   !props.fromPreview ? pages?.length - 1 : page.count\n    // }\n    // numberOfPages={10}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1138,\n      columnNumber: 29\n    }\n  }), __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      pointerEvents: \"\".concat(props.test && \"none\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1154,\n      columnNumber: 25\n    }\n  }, pages !== undefined && pages[page.count])))));\n}\n\n_s(Test, \"Ai+MCQwPJmdpHnKVcAKE0s5g/3Q=\", false, function () {\n  return [next_router__WEBPACK_IMPORTED_MODULE_4__[\"useRouter\"]];\n});\n\n_c = Test;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Test);\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vcGFnZXMvY2xpZW50L3Rlc3QudHN4P2M1MDEiXSwibmFtZXMiOlsiVGVzdCIsInByb3BzIiwicm91dGVyIiwidXNlUm91dGVyIiwidXNlU3RhdGUiLCJwYWdlcyIsInNldFBhZ2VzIiwicGFnZXNDb250ZW50Iiwic2V0UGFnZXNDb250ZW50IiwicW5hT3ZlcmxhcHMiLCJ1c2VSZWYiLCJjb3VudGVyIiwiaW5pdGlhbFBhZ2UiLCJjb3VudCIsInJlZHVjZXIiLCJwYWdlIiwiYWN0aW9uIiwidHlwZSIsImxlbmd0aCIsIkVycm9yIiwidXNlUmVkdWNlciIsImRpc3BhdGNoIiwidXNlRWZmZWN0IiwicSIsImEiLCJxYVJlY3RQb3NpdGlvbnMiLCJzZXRxYVJlY3RQb3NpdGlvbnMiLCJyZWZzVG9RdWVzdGlvbnMiLCJyZWZzVG9BbnN3ZXJzSGFuZGxlcyIsInJlZnNUb0Fuc3dlcnNQb3NpdGlvbnMiLCJ0ZXN0Iiwic2V0VGVzdCIsInJ1IiwiY29uc29sZSIsImxvZyIsInF1ZXJ5IiwiY2hvc2VuTGFuZyIsImxhbmciLCJzdG9yZSIsImdldCIsInBhZ2VzUHJlcCIsInByZXBhcmVKU1hPZlBhZ2VzIiwiaXNJbWdPclRleHQiLCJkYXRhIiwibWF0Y2giLCJVUkxDaGVja0ZvckxvY2FsSG9zdCIsImltZ09yVGV4dCIsIndpZHRoIiwiaGVpZ2h0Iiwib2JqZWN0Rml0IiwiYm9yZGVyUmFkaXVzIiwiYm9yZGVyIiwibWFyZ2luIiwicGFkZGluZyIsImJveFNpemluZyIsInRleHRBbGlnbiIsImxpbmVIZWlnaHQiLCJoYW5kbGVEcmFnIiwiZXZlbnQiLCJ0bXAiLCJ0YXJnZXQiLCJwYXJlbnRFbGVtZW50IiwiaWQiLCJzbGljZSIsImluZGV4T2YiLCJsYXN0SW5kZXhPZiIsImN1cnJlbnQiLCJwb3NpdGlvbiIsImhhbmRsZVN0b3BPZkFEcmFnIiwiY2xhc3NMaXN0IiwiaW5jbHVkZXMiLCJnZXRSZWN0YW5nbGVzRnJvbUV2ZW50IiwicXVlc3Rpb25SZWN0IiwiYW5zd2VyUmVjdCIsImludGVyc2VjdGlvbnMiLCJtYXAiLCJDaGVja0lmQW5zd2VySW50ZXJzZWN0ZWRUaGVRdWVzdGlvbiIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImFwcGx5Q1NTVG9NYXRjaGVkQ2FyZHMiLCJxdWVzdGlvbkNvbnRhaW5lciIsImZsYXNoU2NyZWVuIiwidGVzdEJvZHkiLCJkb2N1bWVudCIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJzdHlsZXMiLCJwYWdlQ29udGFpbmVyIiwiY29tcHV0ZWRTdHlsZXMiLCJ3aW5kb3ciLCJnZXRDb21wdXRlZFN0eWxlIiwib3BhY2l0eSIsImFuc3dlciIsInN0eWxlIiwicG9pbnRlckV2ZW50cyIsInRhZ05hbWUiLCJib3JkZXJDb2xvciIsIngiLCJ5IiwiYW5zd2VyRHJhZ2dlZCIsImFuc3dlckRyYWdnZWRJRCIsImFuc3dlckRyYWdnZWRJdGVyYXRvciIsInJlbGF0ZWRBbnN3ZXJIYW5kbGUiLCJOdW1iZXIiLCJyZWxhdGVkUXVlc3Rpb25IYW5kbGUiLCJUZXN0Q29tcGxldGlvbkFja25vd2xlZGdlbWVudCIsImFjdGl2ZUxhbmd1YWdlIiwibmFtZSIsImx2IiwiZW4iLCJjbGllbnRFbWFpbCIsInNldENsaWVudEVtYWlsIiwiZW1haWxSZWYiLCJwcmVwYXJlTGFzdFBhZ2VKU1giLCJib2R5IiwiaGVhZGluZyIsImVtYWlsIiwiZGlzcGxheSIsImp1c3RpZnlDb250ZW50IiwiYWxpZ25JdGVtcyIsImZsZXhEaXJlY3Rpb24iLCJjb2xvciIsImZvbnRXZWlnaHQiLCJmb250U2l6ZSIsImUiLCJ2YWx1ZSIsImN1cnJlbnRUYXJnZXQiLCJiYWNrZ3JvdW5kIiwiYmFja2dyb3VuZENvbG9yIiwiaGFuZGxlU2VuZEJ0bkNsaWNrIiwiZm9udEZhbWlseSIsImxldHRlclNwYWNpbmciLCJnZXRCdG5UZXh0IiwidG9Mb2NhbGVVcHBlckNhc2UiLCJnZXRMYW5nIiwib3B0aW9ucyIsIm1ldGhvZCIsInVybCIsIm9yaWdpbiIsInByb2R1Y3Rpb25Ib3N0IiwiaGVhZGVycyIsIkF4aW9zIiwicG9zdCIsInByb2R1Y3Rpb25VUkwiLCJyZXNwb25zZSIsInN0YXR1cyIsInB1c2giLCJwcmVwYXJlRmlyc3RQYWdlIiwidHh0RXhwYWxhbnRpb24iLCJzdGFydF90ZXN0X2J0biIsInNhbXBsZVR4dCIsIkV4cGxhbmF0b3J5VmlkZW8iLCJ6SW5kZXgiLCJ0b3AiLCJsZWZ0IiwiZnJvbVByZXZpZXciLCJ1bmRlZmluZWQiLCJ0bXBQYWdlcyIsInBhZ2VJdGVyYXRvciIsInFuYVBhaXJzVG9KU1giLCJmaW5hbFBhZ2VUZXh0Qm9keSIsImZpbmFsUGFnZVRleHRIZWFkaW5nIiwibGFzdFBhZ2UiLCJlbWFpbFNlbmRlciIsInRleHRDYXJkQ1NTU2V0dGluZyIsInNldFN0eWxlQWNjb3JkaW5nVG9UZXN0VHlwZSIsImNhcmREYXRhIiwicXVlc3Rpb25zIiwiUW5BUGFpcnMiLCJxbmFQYWlyIiwiaXRlcmF0b3IiLCJlbGUiLCJUQ2FyZCIsInF1ZXN0aW9uIiwiaSIsImFuc3dlcnMiLCJib3R0b20iLCJhbnN3ZXJzU2h1ZmZsZWQiLCJzaHVmZmxlIiwicXVlc3Rpb25zU2h1ZmZsZWQiLCJwcmVwYXJlZFBhaXJzU2h1ZmZsZWQiLCJfIiwidmFyaWFudHNRbkFQYWlycyIsImR1cmF0aW9uIiwicW5hQ29udGFpbmVyIiwidmlzaWJsZSIsImhpZGRlbiIsImFycmF5IiwibSIsInQiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJTdGlja0NpcmNsZSIsIlN0aWNrU2VtaUNpcmNsZSIsIkV4aXRCdG4iLCJzaXplIiwiX2lkIiwiY2hlY2tXaGV0aGVySXNQcmV2aWV3IiwiUHJldmlld1N0eWxlIiwiVG91Y2hCYWNrZW5kIiwicmlnaHQiLCJBcnJvdyIsInRyYW5zZm9ybSIsIk1NbG9nbyIsInRlc3RDb250YWluZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtDQUVBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FB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QUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEtBVUt6QixLQUFLLEtBQUtxSixTQUFWLElBQXVCckosS0FBSyxDQUFFVSxJQUFJLENBQUNGLEtBQVAsQ0FWakMsQ0FqQ0osQ0FmSixDQURKLENBbkNKLENBREo7QUFzR0g7O0dBbm9DUWIsSTtVQUtVRyxxRDs7O0tBTFZILEk7QUFxb0NNQSxtRUFBZiIsImZpbGUiOiIuL3BhZ2VzL2NsaWVudC90ZXN0LnRzeC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwge3VzZUVmZmVjdCwgdXNlUmVkdWNlciwgdXNlUmVmLCB1c2VTdGF0ZX0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQge3VzZVJvdXRlcn0gZnJvbSBcIm5leHQvcm91dGVyXCI7XG4vLyBpbXBvcnQgaW50ZXJhY3QgZnJvbSBcImludGVyYWN0anNcIjtcbmltcG9ydCBzdHlsZXMgZnJvbSBcIi4uL3N0eWxlcy90ZXN0Lm1vZHVsZS5zY3NzXCI7XG5pbXBvcnQge0RuZFByb3ZpZGVyfSBmcm9tIFwicmVhY3QtZG5kXCI7XG5pbXBvcnQge1RvdWNoQmFja2VuZH0gZnJvbSBcInJlYWN0LWRuZC10b3VjaC1iYWNrZW5kXCI7XG5pbXBvcnQgRHJhZ2dhYmxlLCB7RHJhZ2dhYmxlRGF0YSwgRHJhZ2dhYmxlRXZlbnRIYW5kbGVyLH0gZnJvbSBcInJlYWN0LWRyYWdnYWJsZVwiO1xuaW1wb3J0IHN0b3JlIGZyb20gXCJzdG9yZVwiO1xuaW1wb3J0IHtJUW5BLCBJUW5BUGFpcnMsIElUZXN0LCBUTGFuZ09wdGlvbn0gZnJvbSBcIi4uLy4uL0B0eXBlcy90ZXN0XCI7XG5pbXBvcnQge3Byb2R1Y3Rpb25Ib3N0LCBwcm9kdWN0aW9uVVJMLCBVUkxDaGVja0ZvckxvY2FsSG9zdCx9IGZyb20gXCIuLi8uLi9jb21wb25lbnRzL2NvbnN0YW50c1wiO1xuaW1wb3J0IHtBbmltYXRlUHJlc2VuY2UsIG1vdGlvbn0gZnJvbSBcImZyYW1lci1tb3Rpb25cIjtcbmltcG9ydCBUZXN0UHJvZ3Jlc3NCYXIgZnJvbSBcIi4uLy4uL2NvbXBvbmVudHMvVGVzdFByb2dyZXNzQmFyXCI7XG5pbXBvcnQge0Fycm93fSBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9QYWdlc0NvbnRyb2xsZXJcIjtcbmltcG9ydCBBeGlvcyBmcm9tIFwiYXhpb3NcIjtcblxuZnVuY3Rpb24gVGVzdChwcm9wczoge1xuICAgIHRlc3Q6IElUZXN0O1xuICAgIGFjdGl2ZUxhbmd1YWdlOiBUTGFuZ09wdGlvbltcInZhbHVlXCJdO1xuICAgIGZyb21QcmV2aWV3PzogYm9vbGVhbjtcbn0pIHtcbiAgICBjb25zdCByb3V0ZXIgPSB1c2VSb3V0ZXIoKTtcblxuICAgIGNvbnN0IFtwYWdlcywgc2V0UGFnZXNdID0gdXNlU3RhdGU8SlNYLkVsZW1lbnRbXT4oKTtcbiAgICBjb25zdCBbcGFnZXNDb250ZW50LCBzZXRQYWdlc0NvbnRlbnRdID0gdXNlU3RhdGU8QXJyYXk8SVFuQVBhaXJzPj4oW10pO1xuICAgIC8vIGNvbnN0IFtxbmFPdmVybGFwcywgc2V0UW5hT3ZlcmxhcHNdID0gdXNlU3RhdGUoMCk7XG4gICAgY29uc3QgcW5hT3ZlcmxhcHMgPSB1c2VSZWYoe1xuICAgICAgICBjb3VudGVyOiAwLFxuICAgIH0pO1xuICAgIC8vIGNvbnN0IFtjdXJyZW50UGFnZSwgc2V0Q3VycmVudFBhZ2VdID0gdXNlU3RhdGU8bnVtYmVyPigwKTtcbiAgICBjb25zdCBpbml0aWFsUGFnZSA9IHtjb3VudDogMH07XG5cbiAgICBmdW5jdGlvbiByZWR1Y2VyKHBhZ2UsIGFjdGlvbikge1xuICAgICAgICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgICAgICAgICBjYXNlIFwiaW5jcmVtZW50XCI6XG4gICAgICAgICAgICAgICAgaWYgKHBhZ2UuY291bnQgKyAxICE9PSBwYWdlcz8ubGVuZ3RoKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7Y291bnQ6IHBhZ2UuY291bnQgKyAxfTtcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4ge2NvdW50OiBwYWdlLmNvdW50fTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXNlIFwiZGVjcmVtZW50XCI6XG4gICAgICAgICAgICAgICAgaWYgKHBhZ2UuY291bnQgIT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHtjb3VudDogcGFnZS5jb3VudCAtIDF9O1xuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7Y291bnQ6IHBhZ2UuY291bnR9O1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBbcGFnZSwgZGlzcGF0Y2hdID0gdXNlUmVkdWNlcihyZWR1Y2VyLCBpbml0aWFsUGFnZSk7XG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgcGFnZS5jb3VudCArIDEgPT09IHBhZ2VzQ29udGVudC5sZW5ndGggJiZcbiAgICAgICAgICAgIHBhZ2UuY291bnQgIT09IDAgJiZcbiAgICAgICAgICAgIHBhZ2VzQ29udGVudC5sZW5ndGggIT09IDBcbiAgICAgICAgICAgIC8vICFwcm9wcy50ZXN0XG4gICAgICAgICkge1xuICAgICAgICAgICAgLy8gY29uc29sZS5sb2cocGFnZS5jb3VudCk7XG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhwYWdlc0NvbnRlbnQubGVuZ3RoKTtcbiAgICAgICAgfVxuICAgIH0pO1xuXG4gICAgY29uc3QgW3FhUmVjdFBvc2l0aW9ucywgc2V0cWFSZWN0UG9zaXRpb25zXSA9IHVzZVN0YXRlPHtcbiAgICAgICAgcTogRE9NUmVjdDtcbiAgICAgICAgYTogRE9NUmVjdDtcbiAgICB9Pih7XG4gICAgICAgIHE6IHt9LFxuICAgICAgICBhOiB7fSxcbiAgICB9KTtcbiAgICAvLyB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIC8vICAgY29uc29sZS5sb2cocWFSZWN0UG9zaXRpb25zLmE/LngsIHFhUmVjdFBvc2l0aW9ucy5xPy54LCBcIngsIHhcIik7XG4gICAgLy8gfSwgW3FhUmVjdFBvc2l0aW9uc10pO1xuXG4gICAgY29uc3QgcmVmc1RvUXVlc3Rpb25zID0gdXNlUmVmPEhUTUxFbGVtZW50W10+KFtdKTtcbiAgICBjb25zdCByZWZzVG9BbnN3ZXJzSGFuZGxlcyA9IHVzZVJlZjxIVE1MRWxlbWVudFtdPihbXSk7XG4gICAgY29uc3QgcmVmc1RvQW5zd2Vyc1Bvc2l0aW9ucyA9IHVzZVJlZihbXSk7XG5cbiAgICBjb25zdCBbdGVzdCwgc2V0VGVzdF0gPSB1c2VTdGF0ZTxJVGVzdD4oKTtcblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGlmIChwcm9wcy50ZXN0KSB7XG4gICAgICAgICAgICBzZXRQYWdlc0NvbnRlbnQocHJvcHMudGVzdC5ydS5wYWdlcyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhyb3V0ZXIucXVlcnkpO1xuXG4gICAgICAgICAgICAvL1RPRE86IGRpcmVjdCB0byAvY2xpZW50L3N1Y2Nlc3M/dGVzdGlkPSR7dGVzdGlkfSZsYW5nPSR7bGFuZ30gb25jZSB0ZXN0IGlzIGZpbmlzaGVkXG4gICAgICAgICAgICBjb25zdCBjaG9zZW5MYW5nOiBcInJ1XCIgfCBcImVuXCIgfCBcImx2XCIgPSByb3V0ZXIucXVlcnlcbiAgICAgICAgICAgICAgICAubGFuZyEgYXMgVExhbmdPcHRpb25bXCJ2YWx1ZVwiXTtcbiAgICAgICAgICAgIGNvbnN0IHRlc3Q6IElUZXN0ID0gc3RvcmUuZ2V0KFwidGhlVGVzdFwiKTtcblxuICAgICAgICAgICAgc2V0VGVzdCh0ZXN0KTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGNob3NlbkxhbmcpO1xuXG4gICAgICAgICAgICBzZXRQYWdlc0NvbnRlbnQoXG4gICAgICAgICAgICAgICAgdGVzdFtzdG9yZS5nZXQoXCJhY3RpdmVMYW5nXCIpIGFzIFRMYW5nT3B0aW9uW1widmFsdWVcIl1dLnBhZ2VzXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICAgIC8vIGNyZWF0ZVFuQVBhaXJzKGFjdGl2ZUxhbmcucGFnZXMpO1xuICAgIH0sIFtdKTtcblxuICAgIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgICAgIGNvbnN0IHBhZ2VzUHJlcCA9IHByZXBhcmVKU1hPZlBhZ2VzKHJlZnNUb1F1ZXN0aW9ucyk7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHBhZ2VzUHJlcCk7XG4gICAgfSwgW3BhZ2VzQ29udGVudF0pO1xuXG4gICAgLy8gY29uc29sZS5sb2cocW5hT3ZlcmxhcHMuY3VycmVudC5jb3VudGVyKTtcblxuICAgIGZ1bmN0aW9uIGlzSW1nT3JUZXh0KGRhdGE6IHN0cmluZyk6IGJvb2xlYW4ge1xuICAgICAgICByZXR1cm4gZGF0YS5tYXRjaChVUkxDaGVja0ZvckxvY2FsSG9zdCkgPyB0cnVlIDogZmFsc2U7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBlaXRoZXIgYW4gPGltZz4gb3IgPHA+IGNvbnRhaW5pZyB0aGUgYGRhdGFgXG4gICAgICogQHBhcmFtIGRhdGEgc3RyaW5nIGNvbnRhaW5pbmcgZWlodGVyIHRoZSB0ZXh0IG9mIGEgcXVlc3Rpb24vYW5zd2VyIG9yIGEgbGluayB0byB0aGUgaW1hZ2VcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBpbWdPclRleHQoZGF0YTogc3RyaW5nKTogSlNYLkVsZW1lbnQge1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhkYXRhKTtcbiAgICAgICAgLy8gY29uc29sZS5sb2coZGF0YS5tYXRjaChVUkxDaGVja0ZvcjE5Mi4xNjguOC4xMDApKTtcbiAgICAgICAgaWYgKGRhdGEubWF0Y2goVVJMQ2hlY2tGb3JMb2NhbEhvc3QpICE9PSBudWxsKSB7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIDxpbWdcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiBcIjEwMCVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogXCIxMDAlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBvYmplY3RGaXQ6IFwiY292ZXJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlclJhZGl1czogXCIxNnB4XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBib3JkZXI6IFwiI2NiYTk5MiBzb2xpZCAzcHhcIixcbiAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgc3JjPXtkYXRhfVxuICAgICAgICAgICAgICAgICAgICBhbHQ9XCI6KFwiXG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gKFxuICAgICAgICAgICAgICAgIC8vIDxkaXY+XG4gICAgICAgICAgICAgICAgPHBcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiBcIjEwMCVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hcmdpbjogXCIwXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBwYWRkaW5nOiBcIjFyZW1cIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGJveFNpemluZzogXCJib3JkZXItYm94XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBsaW5lSGVpZ2h0OiBcIjExMCVcIixcbiAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIHtkYXRhfVxuICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICAvLyA8L2Rpdj5cbiAgICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBoYW5kbGVEcmFnKGV2ZW50OiBEcmFnZ2FibGVFdmVudEhhbmRsZXIsIGRhdGE6IERyYWdnYWJsZURhdGEpIHtcbiAgICAgICAgLy8gY29uc29sZS5sb2coZGF0YSk7XG4gICAgICAgIC8vIGFsZXJ0KFwiRHJhZ2dpbmdcIik7XG4gICAgICAgIGxldCB0bXAgPSBldmVudC50YXJnZXQucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50LmlkO1xuICAgICAgICAvLyBjb25zb2xlLmxvZyh0bXApO1xuICAgICAgICBjb25zdCBpZCA9IHRtcC5zbGljZSh0bXAuaW5kZXhPZihcIl9cIikgKyAxLCB0bXAubGFzdEluZGV4T2YoXCJfXCIpKTtcbiAgICAgICAgLy8gY29uc29sZS5sb2coaWQpO1xuICAgICAgICByZWZzVG9BbnN3ZXJzUG9zaXRpb25zLmN1cnJlbnRbaWRdID0ge1xuICAgICAgICAgICAgcG9zaXRpb246IGRhdGEsXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gaGFuZGxlU3RvcE9mQURyYWcoXG4gICAgICAgIGV2ZW50OiBEcmFnZ2FibGVFdmVudEhhbmRsZXIsXG4gICAgICAgIGRhdGE6IERyYWdnYWJsZURhdGFcbiAgICApIHtcbiAgICAgICAgaWYgKFxuICAgICAgICAgICAgZXZlbnQudGFyZ2V0LnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5jbGFzc0xpc3RbMF0uaW5jbHVkZXMoXG4gICAgICAgICAgICAgICAgXCJ0ZXN0X1RDYXJkXCJcbiAgICAgICAgICAgIClcbiAgICAgICAgKSB7XG4gICAgICAgICAgICBsZXQgdG1wID0gZXZlbnQudGFyZ2V0LnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5pZDtgYFxuICAgICAgICAgICAgY29uc3QgaWQgPSB0bXAuc2xpY2UodG1wLmluZGV4T2YoXCJfXCIpICsgMSwgdG1wLmxhc3RJbmRleE9mKFwiX1wiKSk7XG4gICAgICAgICAgICBjb25zdCB7cXVlc3Rpb25SZWN0LCBhbnN3ZXJSZWN0fSA9IGdldFJlY3RhbmdsZXNGcm9tRXZlbnQoZXZlbnQpO1xuXG4gICAgICAgICAgICBjb25zdCBpbnRlcnNlY3Rpb25zOiBBcnJheTxib29sZWFuPiA9IHJlZnNUb1F1ZXN0aW9ucy5jdXJyZW50Lm1hcChcbiAgICAgICAgICAgICAgICAocSkgPT5cbiAgICAgICAgICAgICAgICAgICAgQ2hlY2tJZkFuc3dlckludGVyc2VjdGVkVGhlUXVlc3Rpb24oXG4gICAgICAgICAgICAgICAgICAgICAgICBxLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLFxuICAgICAgICAgICAgICAgICAgICAgICAgYW5zd2VyUmVjdFxuICAgICAgICAgICAgICAgICAgICApIVxuICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgY29uc29sZS5sb2coaW50ZXJzZWN0aW9ucyk7XG5cbiAgICAgICAgICAgIGlmIChDaGVja0lmQW5zd2VySW50ZXJzZWN0ZWRUaGVRdWVzdGlvbihxdWVzdGlvblJlY3QsIGFuc3dlclJlY3QpKSB7XG4gICAgICAgICAgICAgICAgLy8gZXZlbnQudGFyZ2V0LnBhcmVudE5vZGUucGFyZW50Tm9kZS5zdHlsZS5wb2ludGVyRXZlbnRzID0gXCJub25lXCI7XG4gICAgICAgICAgICAgICAgYXBwbHlDU1NUb01hdGNoZWRDYXJkcyhldmVudCwgcmVmc1RvUXVlc3Rpb25zLmN1cnJlbnRbaWRdKTtcbiAgICAgICAgICAgICAgICBxbmFPdmVybGFwcy5jdXJyZW50LmNvdW50ZXIgKz0gMTtcblxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlZnNUb1F1ZXN0aW9ucy5jdXJyZW50W2lkXSk7XG5cbiAgICAgICAgICAgICAgICBjb25zdCBxdWVzdGlvbkNvbnRhaW5lcjogSFRNTEVsZW1lbnQgPVxuICAgICAgICAgICAgICAgICAgICByZWZzVG9RdWVzdGlvbnMuY3VycmVudFtpZF0ucGFyZW50RWxlbWVudCE7XG5cbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhxdWVzdGlvbkNvbnRhaW5lciwgXCIxMjMxMjNcIik7XG5cbiAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhyZWZzVG9BbnN3ZXJzSGFuZGxlcy5jdXJyZW50W2lkXSk7XG5cbiAgICAgICAgICAgICAgICAvLyBTZXRzIHRoZSBhbnN3ZXIgY2FyZHMgYXMgdGhlIHBhcmVudCBvZiBhIHF1ZXN0aW9uIGNvbnRhaW5lclxuICAgICAgICAgICAgICAgIC8vIHJlZnNUb0Fuc3dlcnNIYW5kbGVzLmN1cnJlbnRbaWRdLnBhcmVudEVsZW1lbnQhLnN0eWxlLnRyYW5zZm9ybSA9XG4gICAgICAgICAgICAgICAgLy8gICAgIFwidHJhbnNsYXRlKDBweCwgMHB4KVwiO1xuICAgICAgICAgICAgICAgIC8vIHJlZnNUb0Fuc3dlcnNIYW5kbGVzLmN1cnJlbnRbaWRdLnBhcmVudEVsZW1lbnQhLnN0eWxlLm1hcmdpblRvcCA9XG4gICAgICAgICAgICAgICAgLy8gICAgIFwiLTFyZW1cIjtcbiAgICAgICAgICAgICAgICAvLyBxdWVzdGlvbkNvbnRhaW5lci5hcHBlbmRDaGlsZChcbiAgICAgICAgICAgICAgICAvLyAgICAgcmVmc1RvQW5zd2Vyc0hhbmRsZXMuY3VycmVudFtpZF0ucGFyZW50RWxlbWVudCFcbiAgICAgICAgICAgICAgICAvLyApO1xuXG5cbiAgICAgICAgICAgICAgICBpZiAocW5hT3ZlcmxhcHMuY3VycmVudC5jb3VudGVyID09PSAzKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIGFsZXJ0KHBhZ2VzQ29udGVudC5sZW5ndGgpO1xuICAgICAgICAgICAgICAgICAgICAvLyBpZiAocGFnZS5jb3VudCA8IHBhZ2VzQ29udGVudC5sZW5ndGggLSAxKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlZnNUb1F1ZXN0aW9ucy5jdXJyZW50ID0gW107XG4gICAgICAgICAgICAgICAgICAgIC8vIHNldEN1cnJlbnRQYWdlKGN1cnJlbnRQYWdlICsgMSk7XG4gICAgICAgICAgICAgICAgICAgIC8vIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBkaXNwYXRjaCh7dHlwZTogXCJpbmNyZW1lbnRcIn0pO1xuICAgICAgICAgICAgICAgICAgICAvLyB9LCAxMDAwKTtcbiAgICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2cocGFnZS5jb3VudCwgXCJwYWdlc1wiLCBwYWdlc0NvbnRlbnQubGVuZ3RoLCBcInBhZ2VzQ29udGVudFwiKTtcbiAgICAgICAgICAgICAgICAgICAgLy8gfVxuICAgICAgICAgICAgICAgICAgICBxbmFPdmVybGFwcy5jdXJyZW50LmNvdW50ZXIgPSAwO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSBpZiAoaW50ZXJzZWN0aW9ucy5pbmNsdWRlcyh0cnVlKSl7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0luIGFuIGlmIGZvciBmbGFzaCcpXG4gICAgICAgICAgICAgICAgZmxhc2hTY3JlZW4oKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIHJlZnNUb0Fuc3dlcnNQb3NpdGlvbnMuY3VycmVudFtpZF0gPSB7XG4gICAgICAgICAgICAvLyAgIHBvc2l0aW9uOiB7XG4gICAgICAgICAgICAvLyAgICAgeDogZGF0YS54LFxuICAgICAgICAgICAgLy8gICAgIHk6IGRhdGEueSxcbiAgICAgICAgICAgIC8vICAgICBkZWx0YVg6IGRhdGEueCAtIGRhdGEubGFzdFgsXG4gICAgICAgICAgICAvLyAgICAgZGVsdGFZOiBkYXRhLnkgLSBkYXRhLmxhc3RZLFxuICAgICAgICAgICAgLy8gICB9LFxuICAgICAgICAgICAgLy8gfTtcbiAgICAgICAgICAgIHJlZnNUb0Fuc3dlcnNQb3NpdGlvbnMuY3VycmVudFtpZF0gPSB7XG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGRhdGEsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgYXN5bmMgZnVuY3Rpb24gZmxhc2hTY3JlZW4oKSB7XG4gICAgICAgIGNvbnN0IHRlc3RCb2R5OiBIVE1MRWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoXG4gICAgICAgICAgICBzdHlsZXMucGFnZUNvbnRhaW5lclxuICAgICAgICApWzBdIGFzIEhUTUxFbGVtZW50O1xuICAgICAgICBjb25zb2xlLmxvZyh0ZXN0Qm9keSwgJ2JvZHknKVxuICAgICAgICBjb25zdCBjb21wdXRlZFN0eWxlcyA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKHRlc3RCb2R5LCAnOjphZnRlcicpO1xuICAgICAgICBjb21wdXRlZFN0eWxlcy5vcGFjaXR5ID0gJzEnO1xuICAgICAgICAvLyB0ZXN0Qm9keS5zdHlsZS5ib3hTaGFkb3cgPSBcImluc2V0IDBweCAwcHggMzBweCAzMHB4IHJlZFwiO1xuICAgICAgICAvLyBzZXRUaW1lb3V0KCgpID0+ICh0ZXN0Qm9keS5zdHlsZS5ib3hTaGFkb3cgPSBcIm5vbmVcIiksIDkwMCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gYXBwbHlDU1NUb01hdGNoZWRDYXJkcyhcbiAgICAgICAgZXZlbnQ6IERyYWdnYWJsZUV2ZW50SGFuZGxlcixcbiAgICAgICAgYW5zd2VyOiBIVE1MRWxlbWVudFxuICAgICkge1xuICAgICAgICAvLyAvLyBTZXRzIHRoZSBjb250YXNpbmVyIG9mIGNhcmRzIHRvIGJlIHVuY2xpY2thYmxlL3VudG91Y2hhYmxlLlxuICAgICAgICAvLyBldmVudC50YXJnZXQucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5zdHlsZS5wb2ludGVyRXZlbnRzID1cbiAgICAgICAgLy8gICBcIm5vbmVcIjtcbiAgICAgICAgYW5zd2VyLnBhcmVudEVsZW1lbnQuc3R5bGUucG9pbnRlckV2ZW50cyA9IFwibm9uZVwiO1xuICAgICAgICAvLyBhbnN3ZXIuc3R5bGUud2lkdGggPSBcIjEwMHJlbVwiO1xuICAgICAgICBjb25zb2xlLmxvZyhldmVudC50YXJnZXQucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQsICd0YXJnZXQgcGFyZW50IGVsZW1lbnQnKVxuICAgICAgICBldmVudC50YXJnZXQucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQuc3R5bGUucG9pbnRlckV2ZW50cyA9IFwibm9uZVwiO1xuICAgICAgICAvLyogQXBwbGllcyBhIGdyZWVuaXNoIGJvcmRlciBhcm91bmQgYW5zd2VyIGNhcmRzLlxuICAgICAgICBjb25zb2xlLmxvZyhldmVudC50YXJnZXQudGFnTmFtZSk7XG4gICAgICAgIGlmIChldmVudC50YXJnZXQudGFnTmFtZSA9PSBcIlBcIikge1xuICAgICAgICAgICAgY29uc29sZS5sb2coZXZlbnQudGFyZ2V0LnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5zdHlsZS5ib3JkZXIpO1xuICAgICAgICAgICAgZXZlbnQudGFyZ2V0LnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5zdHlsZS5ib3JkZXIgPVxuICAgICAgICAgICAgICAgIFwic29saWQgNXB4IHJnYigzNywgMTgwLCAxNTApXCI7XG4gICAgICAgICAgICBldmVudC50YXJnZXQucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQuc3R5bGUucG9zaXRpb24gPVxuICAgICAgICAgICAgICAgIFwiaW5oZXJpdFwiO1xuICAgICAgICAgICAgY29uc29sZS5sb2coZXZlbnQudGFyZ2V0LnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5zdHlsZS5ib3JkZXIpO1xuICAgICAgICB9IGVsc2UgaWYgKGV2ZW50LnRhcmdldC50YWdOYW1lID09IFwiSU1HXCIpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGV2ZW50LnRhcmdldCk7XG4gICAgICAgICAgICAvLyBldmVudC50YXJnZXQuc3R5bGUuYm9yZGVyID0gXCJub25lXCI7XG4gICAgICAgICAgICBldmVudC50YXJnZXQuc3R5bGUuYm9yZGVyID0gXCJzb2xpZCA1cHggcmdiKDM3LCAxODAsIDE1MClcIjtcbiAgICAgICAgICAgIGV2ZW50LnRhcmdldC5zdHlsZS5ib3JkZXJDb2xvciA9IFwicmdiKDczLCAxODAsIDE1MCwpXCI7XG4gICAgICAgICAgICBldmVudC50YXJnZXQucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQuc3R5bGUucG9zaXRpb24gPVxuICAgICAgICAgICAgICAgIFwiaW5oZXJpdFwiO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ2hlY2tzIHdoZXRoZXIgdGhlIGRyYWdnZWQgZWxlbWVudCBpbnRlcnNlY3RzIGl0cyBxdWVzdGlvbi5cbiAgICAgKiBAcGFyYW0gZXZlbnQgcmVmZXIgdG8gUmVhY3QgRHJhZ2dhYmxlXG4gICAgICovXG4gICAgZnVuY3Rpb24gQ2hlY2tJZkFuc3dlckludGVyc2VjdGVkVGhlUXVlc3Rpb24oXG4gICAgICAgIHF1ZXN0aW9uUmVjdDogRE9NUmVjdCxcbiAgICAgICAgYW5zd2VyUmVjdDogRE9NUmVjdFxuICAgICkge1xuICAgICAgICAvLyBjb25zdCB7IHF1ZXN0aW9uUmVjdCwgYW5zd2VyUmVjdCB9ID0gZ2V0UmVjdGFuZ2xlcyhldmVudCk7XG4gICAgICAgIC8vIGxldCBhbnN3ZXJSZWN0ID0gYW5zd2VyRHJhZ2dlZC5wYXJlbnRFbGVtZW50IS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgc2V0cWFSZWN0UG9zaXRpb25zKHtcbiAgICAgICAgICAgIHE6IHF1ZXN0aW9uUmVjdCxcbiAgICAgICAgICAgIGE6IGFuc3dlclJlY3QsXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGlmIChcbiAgICAgICAgICAgIHF1ZXN0aW9uUmVjdC54IDwgYW5zd2VyUmVjdC54ICsgYW5zd2VyUmVjdC53aWR0aCAmJlxuICAgICAgICAgICAgcXVlc3Rpb25SZWN0LnggKyBxdWVzdGlvblJlY3Qud2lkdGggPiBhbnN3ZXJSZWN0LnhcbiAgICAgICAgKSB7XG4gICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgcXVlc3Rpb25SZWN0LnkgPCBhbnN3ZXJSZWN0LnkgKyBhbnN3ZXJSZWN0LmhlaWdodCAmJlxuICAgICAgICAgICAgICAgIHF1ZXN0aW9uUmVjdC55ICsgcXVlc3Rpb25SZWN0LmhlaWdodCA+IGFuc3dlclJlY3QueVxuICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2coYW5zd2VyRHJhZ2dlZC5wYXJlbnRFbGVtZW50Py5wYXJlbnRFbGVtZW50LCBcIm9pXCIpO1xuICAgICAgICAgICAgICAgIC8vIGFuc3dlckRyYWdnZWQucGFyZW50RWxlbWVudCEuc3R5bGUuZmlsdGVyID0gXCJicmlnaHRuZXNzKDAuNSlcIjtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0UmVjdGFuZ2xlc0Zyb21FdmVudChldmVudDogRHJhZ2dhYmxlRXZlbnRIYW5kbGVyKSB7XG4gICAgICAgIHNldHFhUmVjdFBvc2l0aW9ucyh7fSk7XG4gICAgICAgIGNvbnN0IGFuc3dlckRyYWdnZWQ6IEVsZW1lbnQgPSBldmVudC50YXJnZXQhLnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudDtcbiAgICAgICAgY29uc29sZS5sb2coYW5zd2VyRHJhZ2dlZCwgJ2Fuc3dlcicpXG4gICAgICAgIGNvbnN0IGFuc3dlckRyYWdnZWRJRCA9IGFuc3dlckRyYWdnZWQuaWQ7XG4gICAgICAgIC8vIGNvbnN0IHJlbGF0ZWRRdWVzdGlvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFxuICAgICAgICAvLyAgIGBRdWVzdGlvbl8ke2Fuc3dlckRyYWdnZWRJRC5zbGljZShhbnN3ZXJEcmFnZ2VkSUQuaW5kZXhPZihcIl9cIikpfWBcbiAgICAgICAgLy8gKTtcbiAgICAgICAgY29uc3QgYW5zd2VyRHJhZ2dlZEl0ZXJhdG9yID0gYW5zd2VyRHJhZ2dlZElELnNsaWNlKFxuICAgICAgICAgICAgYW5zd2VyRHJhZ2dlZElELmluZGV4T2YoXCJfXCIpICsgMSxcbiAgICAgICAgICAgIGFuc3dlckRyYWdnZWRJRC5sYXN0SW5kZXhPZihcIl9cIilcbiAgICAgICAgKTtcblxuICAgICAgICBjb25zdCByZWxhdGVkQW5zd2VySGFuZGxlID1cbiAgICAgICAgICAgIHJlZnNUb0Fuc3dlcnNIYW5kbGVzLmN1cnJlbnRbTnVtYmVyKGFuc3dlckRyYWdnZWRJdGVyYXRvcildO1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhyZWxhdGVkQW5zd2VySGFuZGxlLCBcImhhbmRsZXNcIik7XG4gICAgICAgIGNvbnN0IHJlbGF0ZWRRdWVzdGlvbkhhbmRsZSA9XG4gICAgICAgICAgICByZWZzVG9RdWVzdGlvbnMuY3VycmVudFtOdW1iZXIoYW5zd2VyRHJhZ2dlZEl0ZXJhdG9yKV07XG4gICAgICAgIGNvbnNvbGUubG9nKHJlbGF0ZWRRdWVzdGlvbkhhbmRsZSwgXCJoYW5kbGVzXCIpO1xuXG4gICAgICAgIGNvbnN0IHF1ZXN0aW9uUmVjdCA9IHJlbGF0ZWRRdWVzdGlvbkhhbmRsZS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcbiAgICAgICAgY29uc3QgYW5zd2VyUmVjdCA9IGFuc3dlckRyYWdnZWQuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgIC8vIGNvbnN0IGFuc3dlclJlY3QgPSByZWxhdGVkQW5zd2VySGFuZGxlLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xuICAgICAgICByZXR1cm4ge3F1ZXN0aW9uUmVjdCwgYW5zd2VyUmVjdH07XG4gICAgfVxuXG4gICAgY29uc3QgVGVzdENvbXBsZXRpb25BY2tub3dsZWRnZW1lbnQgPSAoKToge1xuICAgICAgICBydTogc3RyaW5nO1xuICAgICAgICBsdjogc3RyaW5nO1xuICAgICAgICBlbjogc3RyaW5nO1xuICAgIH0gPT4ge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgcnU6IGDQotC10YHRgiBcIiR7XG4gICAgICAgICAgICAgICAgcHJvcHMudGVzdFxuICAgICAgICAgICAgICAgICAgICA/IHByb3BzLnRlc3RbcHJvcHMuYWN0aXZlTGFuZ3VhZ2VdLm5hbWVcbiAgICAgICAgICAgICAgICAgICAgOiBzdG9yZS5nZXQoXCJ0aGVUZXN0XCIpLnJ1Lm5hbWVcbiAgICAgICAgICAgIH1cIiDQv9GA0L7QudC00LXQvS5gLFxuICAgICAgICAgICAgbHY6IGBUZXN0cyBcIiR7XG4gICAgICAgICAgICAgICAgcHJvcHMudGVzdFxuICAgICAgICAgICAgICAgICAgICA/IHByb3BzLnRlc3RbcHJvcHMuYWN0aXZlTGFuZ3VhZ2VdLm5hbWVcbiAgICAgICAgICAgICAgICAgICAgOiBzdG9yZS5nZXQoXCJ0aGVUZXN0XCIpLmx2Lm5hbWVcbiAgICAgICAgICAgIH1cIiBpciBwYWJlaWd0cy5gLFxuICAgICAgICAgICAgZW46IGBUZXN0IFwiJHtcbiAgICAgICAgICAgICAgICBwcm9wcy50ZXN0XG4gICAgICAgICAgICAgICAgICAgID8gcHJvcHMudGVzdFtwcm9wcy5hY3RpdmVMYW5ndWFnZV0ubmFtZVxuICAgICAgICAgICAgICAgICAgICA6IHN0b3JlLmdldChcInRoZVRlc3RcIikuZW4ubmFtZVxuICAgICAgICAgICAgfVwiIGlzIGNvbXBlbGV0ZWQuYCxcbiAgICAgICAgfTtcbiAgICB9O1xuXG4gICAgY29uc3QgW2NsaWVudEVtYWlsLCBzZXRDbGllbnRFbWFpbF0gPSB1c2VTdGF0ZShcIlwiKTtcbiAgICBjb25zdCBlbWFpbFJlZiA9IHVzZVJlZihcIlwiKTtcblxuICAgIGZ1bmN0aW9uIHByZXBhcmVMYXN0UGFnZUpTWChcbiAgICAgICAgYm9keTogc3RyaW5nLFxuICAgICAgICBoZWFkaW5nOiBzdHJpbmcsXG4gICAgICAgIGVtYWlsOiBib29sZWFuXG4gICAgKTogSlNYLkVsZW1lbnQge1xuICAgICAgICBjb25zb2xlLmxvZyhoZWFkaW5nLCBib2R5KTtcbiAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQ6IFwic3BhY2UtZXZlbmx5XCIsXG5cbiAgICAgICAgICAgICAgICAgICAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgICAgICAgICAgICAgICAgICAgZmxleERpcmVjdGlvbjogXCJyb3dcIixcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IFwiMTAwJVwiLFxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IFwiMTAwJVwiLFxuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBmbGV4RGlyZWN0aW9uOiBcImNvbHVtblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiBcIjUwJVwiLFxuICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgPGgxXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiBcIiNjNmFhOTZcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogMzAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiBcIjYwcHhcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtYXJnaW46IFwiMFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAge2hlYWRpbmd9XG4gICAgICAgICAgICAgICAgICAgIDwvaDE+XG4gICAgICAgICAgICAgICAgICAgIHsvKiA8aDJcbiAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgIGZvbnRTaXplOiBcIjQ3cHhcIixcbiAgICAgICAgICAgICAgZm9udFdlaWdodDogMzAwLFxuICAgICAgICAgICAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCIsXG4gICAgICAgICAgICB9fVxuICAgICAgICAgID5cbiAgICAgICAgICAgIHtUZXN0Q29tcGxldGlvbkFja25vd2xlZGdlbWVudCgpW2dldExhbmcoKV19XG4gICAgICAgICAgPC9oMj4gKi99XG4gICAgICAgICAgICAgICAgICAgIDxwXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiBcIjM2cHhcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb250V2VpZ2h0OiAzMDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dEFsaWduOiBcImNlbnRlclwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAge2JvZHl9XG4gICAgICAgICAgICAgICAgICAgIDwvcD5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGZsZXhEaXJlY3Rpb246IFwiY29sdW1uXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogXCI0MCVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogXCIxNjBweFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQ6IFwic3BhY2UtYXJvdW5kXCIsXG4gICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICB7ZW1haWwgJiYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gPGZvcm0gb25TdWJtaXQ9eyhlKSA9PiBlLnByZXZlbnREZWZhdWx0KCl9PlxuICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25DaGFuZ2U9eyhlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVtYWlsUmVmLmN1cnJlbnQgPSBlLnRhcmdldC52YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZW1haWxSZWYuY3VycmVudCwgXCJyZWZcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIHNldENsaWVudEVtYWlsKGUudGFyZ2V0LnZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coY2xpZW50RW1haWwsIFwic3RhdGVcIik7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUudGFyZ2V0LnZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZS5jdXJyZW50VGFyZ2V0LnZhbHVlKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF1dG9Db21wbGV0ZT1cIm9mZlwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gcG9zaXRpb246IFwiYWJzb2x1dGVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogXCJyZ2JhKDAsIDAsIDAsIDApXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiBcIiNDNkFBOTZcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyOiBcIiNDNkFBOTYgc29saWQgM3B4XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmc6IFwiMFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXJSYWRpdXM6IFwiMTZweFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyB3aWR0aDogXCIxMDAlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogXCIzMCVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udFNpemU6IFwiMzVweFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZXh0QWxpZ246IFwiY2VudGVyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj1cImV4YW1wbGVAbWFpbC5jb21cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJlbWFpbFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT1cInVzZXJJbmZvXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZD1cInVzZXJFbWFpbFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICApfVxuICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiBcIjEwMCVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IFwiNDUlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcIiNDNkFBOTZcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXI6IFwibm9uZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlclJhZGl1czogXCIxNnB4XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZzogXCIwXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gV2Via2l0VGV4dEZpbGxDb2xvcjogXCJ0cmFuc3BhcmVudFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFdlYmtpdEJhY2tncm91bmRDbGlwOiBcInRleHRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkNsaWNrPXtoYW5kbGVTZW5kQnRuQ2xpY2t9XG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxwXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWFyZ2luOiBcIjBcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6IFwiYmxhY2tcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udEZhbWlseTogXCJNb250c2VycmF0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiBcIjQwcHhcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9udFdlaWdodDogNzAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBcIndoYXRldmVyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldHRlclNwYWNpbmc6IDYsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIFdlYmtpdFRleHRGaWxsQ29sb3I6IFwidHJhbnNwYXJlbnRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gV2Via2l0QmFja2dyb3VuZENsaXA6IFwidGV4dFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge2dldEJ0blRleHQoKS50b0xvY2FsZVVwcGVyQ2FzZSgpfVxuICAgICAgICAgICAgICAgICAgICAgICAgPC9wPlxuICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApO1xuXG4gICAgICAgIGZ1bmN0aW9uIGdldEJ0blRleHQoKTogc3RyaW5nIHtcbiAgICAgICAgICAgIHJldHVybiBnZXRMYW5nKCkgPT09IFwiZW5cIlxuICAgICAgICAgICAgICAgID8gXCJGaW5pc2hcIlxuICAgICAgICAgICAgICAgIDogZ2V0TGFuZygpID09PSBcImx2XCJcbiAgICAgICAgICAgICAgICAgICAgPyBcIlBhYmVpZ3RcIlxuICAgICAgICAgICAgICAgICAgICA6IFwi0JfQsNC60L7QvdGH0LjRgtGMXCI7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBnZXRMYW5nKCkge1xuICAgICAgICAgICAgcmV0dXJuIHN0b3JlLmdldChcImFjdGl2ZUxhbmdcIikgYXMgVExhbmdPcHRpb25bXCJ2YWx1ZVwiXTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGFzeW5jIGZ1bmN0aW9uIGhhbmRsZVNlbmRCdG5DbGljayhlKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGUpO1xuICAgICAgICAvLyBjb25zdCByZXNwb25zZSA9IGF3YWl0IEF4aW9zLnBvc3QoYCR7cHJvZHVjdGlvblVSTH1lbWFpbGAsIHtcbiAgICAgICAgLy8gICBlbWFpbDogY2xpZW50RW1haWwsXG4gICAgICAgIC8vIH0pO1xuXG4gICAgICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICAgICAgdXJsOiBcImh0dHBzOi8vbW9kZXNtdXplanMubHYvYXBpL3F1aXovdGVzdHMvZW1haWxcIixcbiAgICAgICAgICAgIG9yaWdpbjogcHJvZHVjdGlvbkhvc3QsXG4gICAgICAgICAgICBoZWFkZXJzOiB7XCJDb250ZW50LVR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCJ9LFxuICAgICAgICAgICAgZGF0YToge2VtYWlsOiBcIjEyMzFAZ21haWwuY29tXCJ9LFxuICAgICAgICB9O1xuXG4gICAgICAgIC8vIGF3YWl0IEF4aW9zLnJlcXVlc3Qob3B0aW9ucylcbiAgICAgICAgLy8gICAudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHtcbiAgICAgICAgLy8gICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpO1xuICAgICAgICAvLyAgIH0pXG4gICAgICAgIC8vICAgLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikge1xuICAgICAgICAvLyAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICAgIC8vICAgfSk7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcbiAgICAgICAgY29uc29sZS5sb2coY2xpZW50RW1haWwsIFwic3RhdGVcIik7XG4gICAgICAgIGNvbnNvbGUubG9nKHtcbiAgICAgICAgICAgIGVtYWlsOiBjbGllbnRFbWFpbCxcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgQXhpb3MucG9zdChgJHtwcm9kdWN0aW9uVVJMfXRlc3RzL2VtYWlsYCwge1xuICAgICAgICAgICAgZW1haWw6IGVtYWlsUmVmLmN1cnJlbnQsXG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlKTtcblxuICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSAyMDApIHtcbiAgICAgICAgICAgIHJvdXRlci5wdXNoKFxuICAgICAgICAgICAgICAgIGAke3Byb2R1Y3Rpb25Ib3N0fS9jbGllbnQvbGFuZ3VhZ2VzP3Rlc3RpZD0ke3N0b3JlLmdldChcInRoZVRlc3RcIikuaWR9YFxuICAgICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIHByZXBhcmVGaXJzdFBhZ2UoKTogSlNYLkVsZW1lbnQge1xuICAgICAgICByZXR1cm4gdHh0RXhwYWxhbnRpb24oKTtcbiAgICB9XG5cbiAgICBjb25zdCBzdGFydF90ZXN0X2J0biA9ICgpID0+IChcbiAgICAgICAgPHN2ZyB3aWR0aD1cIjExNi42NTZcIiBoZWlnaHQ9XCIxMTYuNjZcIiB2aWV3Qm94PVwiMCAwIDExNi42NTYgMTE2LjY2XCI+XG4gICAgICAgICAgICA8ZGVmcz5cbiAgICAgICAgICAgICAgICA8ZmlsdGVyXG4gICAgICAgICAgICAgICAgICAgIGlkPVwiUGF0aF8xNFwiXG4gICAgICAgICAgICAgICAgICAgIHg9XCIwXCJcbiAgICAgICAgICAgICAgICAgICAgeT1cIjBcIlxuICAgICAgICAgICAgICAgICAgICB3aWR0aD1cIjExNi42NTZcIlxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ9XCIxMTYuNjZcIlxuICAgICAgICAgICAgICAgICAgICBmaWx0ZXJVbml0cz1cInVzZXJTcGFjZU9uVXNlXCJcbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIDxmZU9mZnNldCBkeT1cIjNcIi8+XG4gICAgICAgICAgICAgICAgICAgIDxmZUdhdXNzaWFuQmx1ciBzdGREZXZpYXRpb249XCIzXCIgcmVzdWx0PVwiYmx1clwiLz5cbiAgICAgICAgICAgICAgICAgICAgPGZlRmxvb2QgZmxvb2Qtb3BhY2l0eT1cIjAuMTYxXCIvPlxuICAgICAgICAgICAgICAgICAgICA8ZmVDb21wb3NpdGUgb3BlcmF0b3I9XCJpblwiIGluMj1cImJsdXJcIi8+XG4gICAgICAgICAgICAgICAgICAgIDxmZUNvbXBvc2l0ZSBpbj1cIlNvdXJjZUdyYXBoaWNcIi8+XG4gICAgICAgICAgICAgICAgPC9maWx0ZXI+XG4gICAgICAgICAgICA8L2RlZnM+XG4gICAgICAgICAgICA8Z1xuICAgICAgICAgICAgICAgIGlkPVwiSWNvbl9mZWF0aGVyLWFycm93LXJpZ2h0LWNpcmNsZVwiXG4gICAgICAgICAgICAgICAgZGF0YS1uYW1lPVwiSWNvbiBmZWF0aGVyLWFycm93LXJpZ2h0LWNpcmNsZVwiXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDExLjUwMyA2Ljc3MSlcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxnIHRyYW5zZm9ybT1cIm1hdHJpeCgxLCAwLCAwLCAxLCAtMTEuNSwgLTYuNzcpXCIgZmlsdGVyPVwidXJsKCNQYXRoXzE0KVwiPlxuICAgICAgICAgICAgICAgICAgICA8cGF0aFxuICAgICAgICAgICAgICAgICAgICAgICAgaWQ9XCJQYXRoXzE0LTJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1uYW1lPVwiUGF0aCAxNFwiXG4gICAgICAgICAgICAgICAgICAgICAgICBkPVwiTTk1LjY1Niw0OS4zM0E0Ni4zMjgsNDYuMzI4LDAsMSwxLDQ5LjMyOCwzLDQ2LjMyOSw0Ni4zMjksMCwwLDEsOTUuNjU2LDQ5LjMzWlwiXG4gICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoOSA2KVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBmaWxsPVwibm9uZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBzdHJva2U9XCIjYzZhYTk2XCJcbiAgICAgICAgICAgICAgICAgICAgICAgIHN0cm9rZS1saW5lY2FwPVwicm91bmRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlLWxpbmVqb2luPVwicm91bmRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlLXdpZHRoPVwiNlwiXG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPC9nPlxuICAgICAgICAgICAgICAgIDxwYXRoXG4gICAgICAgICAgICAgICAgICAgIGlkPVwiUGF0aF8xNVwiXG4gICAgICAgICAgICAgICAgICAgIGRhdGEtbmFtZT1cIlBhdGggMTVcIlxuICAgICAgICAgICAgICAgICAgICBkPVwiTTE4LDQ3LjA2LDM1LjUzLDI5LjUzLDE4LDEyXCJcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDI4LjgyNSAxOS4wMylcIlxuICAgICAgICAgICAgICAgICAgICBmaWxsPVwibm9uZVwiXG4gICAgICAgICAgICAgICAgICAgIHN0cm9rZT1cIiNjNmFhOTZcIlxuICAgICAgICAgICAgICAgICAgICBzdHJva2UtbGluZWNhcD1cInJvdW5kXCJcbiAgICAgICAgICAgICAgICAgICAgc3Ryb2tlLWxpbmVqb2luPVwicm91bmRcIlxuICAgICAgICAgICAgICAgICAgICBzdHJva2Utd2lkdGg9XCI1XCJcbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDxwYXRoXG4gICAgICAgICAgICAgICAgICAgIGlkPVwiUGF0aF8xNlwiXG4gICAgICAgICAgICAgICAgICAgIGRhdGEtbmFtZT1cIlBhdGggMTZcIlxuICAgICAgICAgICAgICAgICAgICBkPVwiTTEyLDE4SDQ3LjA2XCJcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDE3LjI5NSAzMC41NTkpXCJcbiAgICAgICAgICAgICAgICAgICAgZmlsbD1cIm5vbmVcIlxuICAgICAgICAgICAgICAgICAgICBzdHJva2U9XCIjYzZhYTk2XCJcbiAgICAgICAgICAgICAgICAgICAgc3Ryb2tlLWxpbmVjYXA9XCJyb3VuZFwiXG4gICAgICAgICAgICAgICAgICAgIHN0cm9rZS1saW5lam9pbj1cInJvdW5kXCJcbiAgICAgICAgICAgICAgICAgICAgc3Ryb2tlLXdpZHRoPVwiNVwiXG4gICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgIDwvZz5cbiAgICAgICAgPC9zdmc+XG4gICAgKTtcblxuICAgIGZ1bmN0aW9uIHR4dEV4cGFsYW50aW9uKCk6IEpTWC5FbGVtZW50IHtcbiAgICAgICAgY29uc3Qgc2FtcGxlVHh0OiB7XG4gICAgICAgICAgICBydTogc3RyaW5nO1xuICAgICAgICAgICAgZW46IHN0cmluZztcbiAgICAgICAgICAgIGx2OiBzdHJpbmc7XG4gICAgICAgIH0gPSB7XG4gICAgICAgICAgICBydTogXCLQndCw0LnQtNC40YLQtSDRgdC+0L7RgtCy0LXRgtGB0YLQstC40LUsINC/0LXRgNC10YHRgtCw0LLQu9GP0Y8g0L3QuNC20L3QuNC1INC60LDRgNGC0L7Rh9C60LguXCIsXG4gICAgICAgICAgICBlbjogXCJGaW5kIGEgbWF0Y2ggYnkgbW92aW5nIHRoZSBib3R0b20gY2FyZHMuXCIsXG4gICAgICAgICAgICBsdjogXCJBdHJvZGlldCBhdGJpbHN0xKtidSwgcMSBcmxpZWtvdCBhcGFrxaHEk2phcyBrYXJ0xKt0ZXMuXCIsXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgaWQ9XCJidG5fdHh0X2NvbnRhaW5lclwiXG4gICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgICAgICAgICAgICAgICAgIGZsZXhEaXJlY3Rpb246IFwiY29sdW1uXCIsXG4gICAgICAgICAgICAgICAgICAgIGp1c3RpZnlDb250ZW50OiBcInNwYWNlLWV2ZW5seVwiLFxuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IFwiNDAlXCIsXG4gICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8aDFcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRXZWlnaHQ6IDQwMCxcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiBcInh4eC1sYXJnZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGV4dEFsaWduOiBcImNlbnRlclwiLFxuICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAge3NhbXBsZVR4dFtzdG9yZS5nZXQoXCJhY3RpdmVMYW5nXCIpIGFzIFRMYW5nT3B0aW9uW1widmFsdWVcIl1dfVxuICAgICAgICAgICAgICAgIDwvaDE+XG4gICAgICAgICAgICAgICAgPGJ1dHRvblxuICAgICAgICAgICAgICAgICAgICBzdHlsZT17e2JhY2tncm91bmQ6IFwibm9uZVwiLCBib3JkZXI6IFwibm9uZVwifX1cbiAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gZGlzcGF0Y2goe3R5cGU6IFwiaW5jcmVtZW50XCJ9KX1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIHtzdGFydF90ZXN0X2J0bigpfVxuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxuICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gRXhwbGFuYXRvcnlWaWRlbygpOiBKU1guRWxlbWVudCB7XG4gICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IFwiYWJzb2x1dGVcIixcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg6IFwiMTAwdndcIixcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiBcIjEwMHZoXCIsXG4gICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IFwiYmxhY2tcIixcbiAgICAgICAgICAgICAgICAgICAgekluZGV4OiAxMDAwMCxcbiAgICAgICAgICAgICAgICAgICAgdG9wOiAwLFxuICAgICAgICAgICAgICAgICAgICBsZWZ0OiAwLFxuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgPHZpZGVvXG4gICAgICAgICAgICAgICAgICAgIG9uRW5kZWQ9eygpID0+IGRpc3BhdGNoKHt0eXBlOiBcImluY3JlbWVudFwifSl9XG4gICAgICAgICAgICAgICAgICAgIGNvbnRyb2xzXG4gICAgICAgICAgICAgICAgICAgIGF1dG9QbGF5XG4gICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogXCIxMDAlXCIsXG4gICAgICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICA8c291cmNlIHNyYz1cIi9UZXN0X0V4YW1wbGUud2VibVwiIHR5cGU9XCJ2aWRlby93ZWJtXCIvPlxuICAgICAgICAgICAgICAgIDwvdmlkZW8+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBXcmFwcyBxdWVzdGlvbiBhbmQgYW5zd2VyIHBhaXJzIGludG8gYSBkaXYgKGNvbnRhaW5pbmcgMyBwYWlycyBpbiB0aGlzIGNhc2UpXG4gICAgICovXG4gICAgZnVuY3Rpb24gcHJlcGFyZUpTWE9mUGFnZXMocmVmc1RvUXVlc3Rpb25zOiBhbnkpIHtcbiAgICAgICAgLy8gY29uc29sZS5sb2cocGFnZXNDb250ZW50KTtcbiAgICAgICAgbGV0IHBhZ2VzUHJlcDogSlNYLkVsZW1lbnRbXSA9IFtdO1xuICAgICAgICBjb25zb2xlLmxvZyhwYWdlc1ByZXApO1xuICAgICAgICBwcm9wcy5mcm9tUHJldmlldyA9PSB1bmRlZmluZWQgJiYgcGFnZXNQcmVwLnB1c2gocHJlcGFyZUZpcnN0UGFnZSgpKTtcbiAgICAgICAgY29uc3QgdG1wUGFnZXMgPSBwYWdlc0NvbnRlbnQubWFwKChwYWdlLCBwYWdlSXRlcmF0b3I6IG51bWJlcikgPT4gKFxuICAgICAgICAgICAgLy8gPEFuaW1hdGVQcmVzZW5jZT5cbiAgICAgICAgICAgIDxtb3Rpb24uZGl2XG4gICAgICAgICAgICAgICAgaW5pdGlhbD17e1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgYW5pbWF0ZT17e1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAxLFxuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgZXhpdD17e1xuICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiAwLFxuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICAgICAgaWQ9e2BwYWdlLSR7cGFnZUl0ZXJhdG9yfWB9XG4gICAgICAgICAgICAgICAga2V5PXtwYWdlSXRlcmF0b3J9XG4gICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgICAgICAgICAgICAgICAgIGp1c3RpZnlDb250ZW50OiBcInNwYWNlLWV2ZW5seVwiLFxuICAgICAgICAgICAgICAgICAgICB3aWR0aDogXCI5MCVcIixcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiBcIjg4JVwiLFxuICAgICAgICAgICAgICAgIH19XG4gICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAge3FuYVBhaXJzVG9KU1gocGFnZSwgcGFnZUl0ZXJhdG9yLCByZWZzVG9RdWVzdGlvbnMpfVxuICAgICAgICAgICAgPC9tb3Rpb24uZGl2PlxuICAgICAgICAgICAgLy8gPC9BbmltYXRlUHJlc2VuY2U+XG4gICAgICAgICkpO1xuICAgICAgICAvLyBjb25zb2xlLmxvZyh0bXBQYWdlcyk7XG4gICAgICAgIHBhZ2VzUHJlcC5wdXNoKC4uLnRtcFBhZ2VzKTtcbiAgICAgICAgLy8gY29uc29sZS5sb2cocGFnZXNQcmVwKTtcbiAgICAgICAgbGV0IHRtcDogSVRlc3Q7XG4gICAgICAgIGlmIChwcm9wcy5mcm9tUHJldmlldykge1xuICAgICAgICAgICAgdG1wID0gc3RvcmUuZ2V0KFwidGVzdEluUHJvZ3Jlc3NcIik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0bXAgPSBzdG9yZS5nZXQoXCJ0aGVUZXN0XCIpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnNvbGUubG9nKHRtcCk7XG4gICAgICAgIGNvbnN0IHtcbiAgICAgICAgICAgIGZpbmFsUGFnZVRleHRCb2R5LFxuICAgICAgICAgICAgZmluYWxQYWdlVGV4dEhlYWRpbmcsXG4gICAgICAgIH06IHsgZmluYWxQYWdlVGV4dEJvZHk6IHN0cmluZzsgZmluYWxQYWdlVGV4dEhlYWRpbmc6IHN0cmluZyB9ID1cbiAgICAgICAgdG1wW3N0b3JlLmdldChcImFjdGl2ZUxhbmdcIikgYXMgVExhbmdPcHRpb25bXCJ2YWx1ZVwiXV0gfHxcbiAgICAgICAgcHJvcHMudGVzdFtwcm9wcy5hY3RpdmVMYW5ndWFnZV07XG4gICAgICAgIGNvbnNvbGUubG9nKHRtcCk7XG4gICAgICAgIGNvbnN0IGxhc3RQYWdlID0gcHJlcGFyZUxhc3RQYWdlSlNYKFxuICAgICAgICAgICAgZmluYWxQYWdlVGV4dEJvZHksXG4gICAgICAgICAgICBmaW5hbFBhZ2VUZXh0SGVhZGluZyxcbiAgICAgICAgICAgIHRtcC5lbWFpbFNlbmRlciAvKiBhcyBib29sZWFuICovXG4gICAgICAgICk7XG5cbiAgICAgICAgcGFnZXNQcmVwLnB1c2gobGFzdFBhZ2UpO1xuICAgICAgICBzZXRQYWdlcyhwYWdlc1ByZXApO1xuICAgICAgICAvLyBjb25zb2xlLmxvZyhwYWdlcyk7XG4gICAgICAgIHJldHVybiBwYWdlc1ByZXA7XG4gICAgfVxuXG4gICAgY29uc3QgdGV4dENhcmRDU1NTZXR0aW5nOiBSZWFjdC5DU1NQcm9wZXJ0aWVzID0ge1xuICAgICAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICAgICAganVzdGlmeUNvbnRlbnQ6IFwiY2VudGVyXCIsXG4gICAgICAgIHdpZHRoOiBcIjMyMHB4XCIsXG4gICAgICAgIGhlaWdodDogXCJtaW4tY29udGVudFwiLFxuICAgICAgICAvLyBwYWRkaW5nOiBcIjFyZW1cIixcbiAgICAgICAgYm9yZGVyOiBcIjNweCBzb2xpZCByZ2IoMTk4XHQxNjlcdDE0OVx0KVwiLFxuICAgIH07XG5cbiAgICBmdW5jdGlvbiBzZXRTdHlsZUFjY29yZGluZ1RvVGVzdFR5cGUoY2FyZERhdGE6IHN0cmluZyk6IFJlYWN0LkNTU1Byb3BlcnRpZXMge1xuICAgICAgICBzd2l0Y2ggKHRlc3Q/LnR5cGUpIHtcbiAgICAgICAgICAgIGNhc2UgXCJQUFwiOlxuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIHdpZHRoOiBcIjI1MHB4XCIsXG4gICAgICAgICAgICAgICAgICAgIGhlaWdodDogXCIyNTkuMzdweFwiLFxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICBjYXNlIFwiVFRcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gdGV4dENhcmRDU1NTZXR0aW5nO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gaXNJbWdPclRleHQoY2FyZERhdGEpXG4gICAgICAgICAgICAgICAgICAgID8ge1xuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IFwiMzIwcHhcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodDogXCIzNDdweFwiLFxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIDogdGV4dENhcmRDU1NTZXR0aW5nO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmV0dXJucyBhbiBhcnJheSBvZiBKU1ggRWxlbWVudHMgY29udGFpbmluZyBxdWVzdGlvbiBhbmQgYW5zd2VyIGNhcmRzICh3aGljaCBhcmUgc2h1ZmZsZWQgcmFuZG9tbHkgYmVmb3JlIHJlbmRlcmluZykgaW4gcGFpcnNcbiAgICAgKiBAcGFyYW0gcGFnZSBBcnJheSBvZiBxdWVzdGlvbiBhbmQgYW5zd2VyIHBhaXJzIHRvIGJlIHJlbmRlcmVkXG4gICAgICogQHBhcmFtIHBhZ2VJdGVyYXRvciBwYWdlIChpbnQpIHRvIHdoaWNoIHRoZSBhcnJheSBjb3JyZXNwb25kc1xuICAgICAqL1xuICAgIGZ1bmN0aW9uIHFuYVBhaXJzVG9KU1goXG4gICAgICAgIHBhZ2U6IElRbkFQYWlycyxcbiAgICAgICAgcGFnZUl0ZXJhdG9yOiBudW1iZXIsXG4gICAgICAgIHJlZnNUb1F1ZXN0aW9uczogeyBjdXJyZW50OiAoSFRNTERpdkVsZW1lbnQgfCBudWxsKVtdIH1cbiAgICApOiBSZWFjdC5SZWFjdE5vZGUge1xuICAgICAgICBsZXQgcXVlc3Rpb25zID0gcGFnZS5RbkFQYWlycy5tYXAoKHFuYVBhaXI6IElRbkEsIGl0ZXJhdG9yOiBudW1iZXIpID0+IChcbiAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICAgICAgICAgICAgICAgICAgZmxleERpcmVjdGlvbjogXCJjb2x1bW5cIixcbiAgICAgICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQ6IFwiY2VudGVyXCIsXG4gICAgICAgICAgICAgICAgICAgIGFsaWduSXRlbXM6IFwiY2VudGVyXCIsXG4gICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgIHJlZj17KGVsZSkgPT4gKHJlZnNUb1F1ZXN0aW9ucy5jdXJyZW50W2l0ZXJhdG9yXSA9IGVsZSl9XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17c3R5bGVzLlRDYXJkfVxuICAgICAgICAgICAgICAgICAgICBpZD17YFF1ZXN0aW9uXyR7aXRlcmF0b3J9X3AtJHtwYWdlSXRlcmF0b3J9YH1cbiAgICAgICAgICAgICAgICAgICAga2V5PXtgUXVlc3Rpb25fJHtpdGVyYXRvcn1fcC0ke3BhZ2VJdGVyYXRvcn1gfVxuICAgICAgICAgICAgICAgICAgICBzdHlsZT17c2V0U3R5bGVBY2NvcmRpbmdUb1Rlc3RUeXBlKHFuYVBhaXIucXVlc3Rpb24pfVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IFwiMTAwJVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJveFNpemluZzogXCJib3JkZXItYm94XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICB7aW1nT3JUZXh0KHFuYVBhaXIucXVlc3Rpb24pfVxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICB7Lyo8ZGl2Ki99XG4gICAgICAgICAgICAgICAgey8qICAgIC8vIHJlZj17KGVsZSkgPT4gKHJlZnNUb1F1ZXN0aW9ucy5jdXJyZW50W2l0ZXJhdG9yXSA9IGVsZSl9Ki99XG4gICAgICAgICAgICAgICAgey8qICAgIHN0eWxlPXt7Ki99XG4gICAgICAgICAgICAgICAgey8qICAgICAgICBtYXJnaW5Ub3A6IGlzSW1nT3JUZXh0KHFuYVBhaXIucXVlc3Rpb24pID8gXCIwLjJyZW1cIiA6IFwiLTAuMXJlbVwiLCovfVxuXG4gICAgICAgICAgICAgICAgey8qICAgICAgICB3aWR0aDogXCJtaW4tY29udGVudFwiLCovfVxuICAgICAgICAgICAgICAgIHsvKiAgICAgICAgekluZGV4OiAxMDAsKi99XG4gICAgICAgICAgICAgICAgey8qICAgIH19Ki99XG4gICAgICAgICAgICAgICAgey8qPiovfVxuICAgICAgICAgICAgICAgIHsvKiAgICB7U3RpY2tDaXJjbGUoKX0qL31cbiAgICAgICAgICAgICAgICB7Lyo8L2Rpdj4qL31cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICApKTtcblxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBhZ2UuUW5BUGFpcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIHJlZnNUb0Fuc3dlcnNQb3NpdGlvbnMuY3VycmVudFtpXSA9IHtcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjoge1xuICAgICAgICAgICAgICAgICAgICB4OiAwLFxuICAgICAgICAgICAgICAgICAgICB5OiAwLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG5cbiAgICAgICAgbGV0IGFuc3dlcnMgPSBwYWdlLlFuQVBhaXJzLm1hcCgocW5hUGFpcjogSVFuQSwgaXRlcmF0b3I6IG51bWJlcikgPT4gKFxuICAgICAgICAgICAgPERyYWdnYWJsZVxuICAgICAgICAgICAgICAgIGF4aXM9XCJib3RoXCJcbiAgICAgICAgICAgICAgICAvLyBvblRvdWNoU3RhcnQ9e2hhbmRsZVN0YXJ0T2ZEcmFnfVxuICAgICAgICAgICAgICAgIG9uRHJhZz17aGFuZGxlRHJhZ31cbiAgICAgICAgICAgICAgICAvLyBwb3NpdGlvbj17cmVmc1RvQW5zd2Vyc1Bvc2l0aW9ucy5jdXJyZW50W2l0ZXJhdG9yXS5wb3NpdGlvbn1cbiAgICAgICAgICAgICAgICBvblN0b3A9e2hhbmRsZVN0b3BPZkFEcmFnfVxuICAgICAgICAgICAgICAgIC8vIHBvc2l0aW9uPXtudWxsfVxuICAgICAgICAgICAgICAgIC8vIGdyaWQ9e1syNSwgMjVdfVxuICAgICAgICAgICAgICAgIGRlZmF1bHRQb3NpdGlvbj17e3g6IDAsIHk6IDB9fVxuICAgICAgICAgICAgICAgIHNjYWxlPXsxfVxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBcImFic29sdXRlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBib3R0b206IFwiMTAlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGZsZXhEaXJlY3Rpb246IFwiY29sdW1uLXJldmVyc2VcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGp1c3RpZnlDb250ZW50OiBcImNlbnRlclwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIHpJbmRleDogMTAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gYm9yZGVyOiBcIjNweCBzb2xpZCByZ2IoMTk4XHQxNjlcdDE0OVx0KVwiLFxuICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3NOYW1lPXtzdHlsZXMuVENhcmR9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZD17YEFuc3dlcl8ke2l0ZXJhdG9yfV9wLSR7cGFnZUl0ZXJhdG9yfWB9XG4gICAgICAgICAgICAgICAgICAgICAgICBrZXk9e2l0ZXJhdG9yfVxuICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3NldFN0eWxlQWNjb3JkaW5nVG9UZXN0VHlwZShxbmFQYWlyLmFuc3dlcil9XG4gICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT17e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IFwiMTAwJVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogXCIxMDAlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJveFNpemluZzogXCJib3JkZXItYm94XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7aW1nT3JUZXh0KHFuYVBhaXIuYW5zd2VyKX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgey8qPGRpdiovfVxuICAgICAgICAgICAgICAgICAgICB7LyogICAgcmVmPXsoZWxlKSA9PiAocmVmc1RvQW5zd2Vyc0hhbmRsZXMuY3VycmVudFtpdGVyYXRvcl0gPSBlbGUpfSovfVxuICAgICAgICAgICAgICAgICAgICB7LyogICAgc3R5bGU9e3sqL31cbiAgICAgICAgICAgICAgICAgICAgey8qICAgICAgICB6SW5kZXg6IDEwMCwqL31cbiAgICAgICAgICAgICAgICAgICAgey8qICAgICAgICBtYXJnaW5Cb3R0b206IGlzSW1nT3JUZXh0KHFuYVBhaXIuYW5zd2VyKSovfVxuICAgICAgICAgICAgICAgICAgICB7LyogICAgICAgICAgICA/IFwiLTAuMzVyZW1cIiovfVxuICAgICAgICAgICAgICAgICAgICB7LyogICAgICAgICAgICA6IFwiLTAuM3JlbVwiLCovfVxuICAgICAgICAgICAgICAgICAgICB7LyogICAgICAgIHdpZHRoOiBcIm1pbi1jb250ZW50XCIsKi99XG4gICAgICAgICAgICAgICAgICAgIHsvKiAgICB9fSovfVxuICAgICAgICAgICAgICAgICAgICB7Lyo+Ki99XG4gICAgICAgICAgICAgICAgICAgIHsvKiAgICB7U3RpY2tTZW1pQ2lyY2xlKCl9Ki99XG4gICAgICAgICAgICAgICAgICAgIHsvKjwvZGl2PiovfVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPC9EcmFnZ2FibGU+XG4gICAgICAgICkpO1xuXG4gICAgICAgIGxldCBhbnN3ZXJzU2h1ZmZsZWQgPSBzaHVmZmxlKGFuc3dlcnMpO1xuICAgICAgICBsZXQgcXVlc3Rpb25zU2h1ZmZsZWQgPSBzaHVmZmxlKHF1ZXN0aW9ucyk7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKHRtcCk7XG5cbiAgICAgICAgLy8gY29uc29sZS5sb2cocXVlc3Rpb25zLCBhbnN3ZXJzKTtcblxuICAgICAgICBsZXQgcHJlcGFyZWRQYWlyc1NodWZmbGVkID0gcGFnZS5RbkFQYWlycy5tYXAoKF8sIGl0ZXJhdG9yOiBudW1iZXIpID0+IChcbiAgICAgICAgICAgIDxtb3Rpb24uZGl2XG4gICAgICAgICAgICAgICAgLy8gaW5pdGlhbD1cImhpZGRlblwiXG4gICAgICAgICAgICAgICAgLy8gYW5pbWF0ZT1cInZpc2libGVcIlxuICAgICAgICAgICAgICAgIHZhcmlhbnRzPXt2YXJpYW50c1FuQVBhaXJzfVxuICAgICAgICAgICAgICAgIHRyYW5zaXRpb249e3tcbiAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IFwiMS41XCIsXG4gICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICBrZXk9e2BRdWVzdGlvbkFuc3dlclAtJHtpdGVyYXRvcn1fcC0ke3BhZ2VJdGVyYXRvcn1gfVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17c3R5bGVzLnFuYUNvbnRhaW5lcn1cbiAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICB7Lyoge3F1ZXN0aW9uc1NodWZmbGVkW2l0ZXJhdG9yXX0gKi99XG5cbiAgICAgICAgICAgICAgICB7cXVlc3Rpb25zW2l0ZXJhdG9yXX1cbiAgICAgICAgICAgICAgICB7YW5zd2Vyc1NodWZmbGVkW2l0ZXJhdG9yXX1cbiAgICAgICAgICAgIDwvbW90aW9uLmRpdj5cbiAgICAgICAgKSk7XG5cbiAgICAgICAgcmV0dXJuIHByZXBhcmVkUGFpcnNTaHVmZmxlZDtcbiAgICB9XG5cbiAgICBjb25zdCB2YXJpYW50c1FuQVBhaXJzID0ge1xuICAgICAgICB2aXNpYmxlOiB7b3BhY2l0eTogMX0sXG4gICAgICAgIGhpZGRlbjoge29wYWNpdHk6IDB9LFxuICAgIH07XG5cbiAgICBmdW5jdGlvbiBzaHVmZmxlKGFycmF5OiBbXSkge1xuICAgICAgICBsZXQgbSA9IGFycmF5Lmxlbmd0aDtcbiAgICAgICAgbGV0IHQ7XG4gICAgICAgIGxldCBpO1xuXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKG0sIHQsIGkpO1xuICAgICAgICAvLyBXaGlsZSB0aGVyZSByZW1haW4gZWxlbWVudHMgdG8gc2h1ZmZsZeKAplxuICAgICAgICB3aGlsZSAobSkge1xuICAgICAgICAgICAgLy8gUGljayBhIHJlbWFpbmluZyBlbGVtZW504oCmXG4gICAgICAgICAgICBpID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogbS0tKTtcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGksIFwiaVwiKTtcblxuICAgICAgICAgICAgLy8gQW5kIHN3YXAgaXQgd2l0aCB0aGUgY3VycmVudCBlbGVtZW50LlxuICAgICAgICAgICAgdCA9IGFycmF5W21dO1xuICAgICAgICAgICAgYXJyYXlbbV0gPSBhcnJheVtpXTtcbiAgICAgICAgICAgIGFycmF5W2ldID0gdDtcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGFycmF5KTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBhcnJheTtcbiAgICB9XG5cbiAgICBjb25zdCBTdGlja0NpcmNsZSA9ICgpID0+IChcbiAgICAgICAgPHN2Z1xuICAgICAgICAgICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXG4gICAgICAgICAgICB3aWR0aD1cIjE5XCJcbiAgICAgICAgICAgIGhlaWdodD1cIjI2Ljk1NlwiXG4gICAgICAgICAgICB2aWV3Qm94PVwiMCAwIDE5IDI2Ljk1NlwiXG4gICAgICAgID5cbiAgICAgICAgICAgIDxnXG4gICAgICAgICAgICAgICAgaWQ9XCJHcm91cF8zNVwiXG4gICAgICAgICAgICAgICAgZGF0YS1uYW1lPVwiR3JvdXAgMzVcIlxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgtMTE1Ljg4MiAtMjQxLjEzNylcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgIDxsaW5lXG4gICAgICAgICAgICAgICAgICAgIGlkPVwiTGluZV8xXCJcbiAgICAgICAgICAgICAgICAgICAgZGF0YS1uYW1lPVwiTGluZSAxXCJcbiAgICAgICAgICAgICAgICAgICAgeTI9XCIxMVwiXG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgxMjUuMzU3IDI0My4xMzcpXCJcbiAgICAgICAgICAgICAgICAgICAgZmlsbD1cIm5vbmVcIlxuICAgICAgICAgICAgICAgICAgICBzdHJva2U9XCIjYzZhYTk2XCJcbiAgICAgICAgICAgICAgICAgICAgLy8gc3Ryb2tlTGluZWNhcD1cInJvdW5kXCJcbiAgICAgICAgICAgICAgICAgICAgc3Ryb2tlV2lkdGg9XCI0XCJcbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDxjaXJjbGVcbiAgICAgICAgICAgICAgICAgICAgaWQ9XCJFbGxpcHNlXzRcIlxuICAgICAgICAgICAgICAgICAgICBkYXRhLW5hbWU9XCJFbGxpcHNlIDRcIlxuICAgICAgICAgICAgICAgICAgICBjeD1cIjkuNVwiXG4gICAgICAgICAgICAgICAgICAgIGN5PVwiOS41XCJcbiAgICAgICAgICAgICAgICAgICAgcj1cIjkuNVwiXG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgxMTUuODgyIDI0OS4wOTQpXCJcbiAgICAgICAgICAgICAgICAgICAgZmlsbD1cIiNjNmFhOTZcIlxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2c+XG4gICAgICAgIDwvc3ZnPlxuICAgICk7XG5cbiAgICBjb25zdCBTdGlja1NlbWlDaXJjbGUgPSAoKSA9PiAoXG4gICAgICAgIDxzdmdcbiAgICAgICAgICAgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuICAgICAgICAgICAgd2lkdGg9XCIxOVwiXG4gICAgICAgICAgICBoZWlnaHQ9XCIxOC43NjFcIlxuICAgICAgICAgICAgdmlld0JveD1cIjAgMCAxOSAxOC43NjFcIlxuICAgICAgICA+XG4gICAgICAgICAgICA8ZyBpZD1cIkdyb3VwXzM0XCIgZGF0YS1uYW1lPVwiR3JvdXAgMzRcIiB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoLTExNS45OTYgMClcIj5cbiAgICAgICAgICAgICAgICA8bGluZVxuICAgICAgICAgICAgICAgICAgICBpZD1cIkxpbmVfNFwiXG4gICAgICAgICAgICAgICAgICAgIGRhdGEtbmFtZT1cIkxpbmUgNFwiXG4gICAgICAgICAgICAgICAgICAgIHkyPVwiMTEwXCJcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtPVwidHJhbnNsYXRlKDEyNS4zNTcgNS43NjEpXCJcbiAgICAgICAgICAgICAgICAgICAgZmlsbD1cIm5vbmVcIlxuICAgICAgICAgICAgICAgICAgICBzdHJva2U9XCIjYzZhYTk2XCJcbiAgICAgICAgICAgICAgICAgICAgLy8gc3Ryb2tlTGluZWNhcD1cInJvdW5kXCJcbiAgICAgICAgICAgICAgICAgICAgc3Ryb2tlV2lkdGg9XCI0XCJcbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDxnXG4gICAgICAgICAgICAgICAgICAgIGlkPVwiUGF0aF8xMVwiXG4gICAgICAgICAgICAgICAgICAgIGRhdGEtbmFtZT1cIlBhdGggMTFcIlxuICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoMTE1Ljk5NiAtNy41NTEpXCJcbiAgICAgICAgICAgICAgICAgICAgZmlsbD1cIm5vbmVcIlxuICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgPHBhdGhcbiAgICAgICAgICAgICAgICAgICAgICAgIGQ9XCJNOS41LDExLjI2YzUuMjQ3LDAsOS41LTcuMDA3LDkuNS0xLjc2YTkuNSw5LjUsMCwwLDEtMTksMEMwLDQuMjUzLDQuMjUzLDExLjI2LDkuNSwxMS4yNlpcIlxuICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlPVwibm9uZVwiXG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgIDxwYXRoXG4gICAgICAgICAgICAgICAgICAgICAgICBkPVwiTSAwLjg4MDk3MzgxNTkxNzk2ODggNy41NTA3OTM2NDc3NjYxMTMgQyAyLjM5MDk2NjQxNTQwNTI3MyA3LjU1MDc5MzY0Nzc2NjExMyA1LjY4MjUwMDgzOTIzMzM5OCAxMS4yNjAxMjgwMjEyNDAyMyA5LjUgMTEuMjYwMTI4MDIxMjQwMjMgQyAxMy4zMTcxNzg3MjYxOTYyOSAxMS4yNjAxMjgwMjEyNDAyMyAxNi42MDg4NjAwMTU4NjkxNCA3LjU1MTMyMTAyOTY2MzA4NiAxOC4xMTkwMjYxODQwODIwMyA3LjU1MDc5MzY0Nzc2NjExMyBDIDE4LjY4NDU3Nzk0MTg5NDUzIDcuNTUwNTk2MjM3MTgyNjE3IDE5IDguMDcwNDc3NDg1NjU2NzM4IDE5IDkuNDk5OTk4MDkyNjUxMzY3IEMgMTkgMTQuNzQ2NzA3OTE2MjU5NzcgMTQuNzQ2NzAwMjg2ODY1MjMgMTguOTk5OTk4MDkyNjUxMzcgOS41IDE4Ljk5OTk5ODA5MjY1MTM3IEMgNC4yNTMyOTk3MTMxMzQ3NjYgMTguOTk5OTk4MDkyNjUxMzcgMCAxNC43NDY3MDc5MTYyNTk3NyAwIDkuNDk5OTk4MDkyNjUxMzY3IEMgMCA4LjA3MDc5Njk2NjU1MjczNCAwLjMxNTY2MDQ3NjY4NDU3MDMgNy41NTA3OTM2NDc3NjYxMTMgMC44ODA5NzM4MTU5MTc5Njg4IDcuNTUwNzkzNjQ3NzY2MTEzIFpcIlxuICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlPVwibm9uZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICBmaWxsPVwiI2M2YWE5NlwiXG4gICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPC9nPlxuICAgICAgICAgICAgPC9nPlxuICAgICAgICA8L3N2Zz5cbiAgICApO1xuXG4gICAgY29uc3QgRXhpdEJ0biA9IChzaXplOiBzdHJpbmcpID0+IChcbiAgICAgICAgIXByb3BzLmZyb21QcmV2aWV3ICYmXG4gICAgICAgIDxzdmdcbiAgICAgICAgICAgIC8vIGNsYXNzTmFtZT17Y29tcFN0eWxlcy5DbG9zZUJUTn1cbiAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+XG4gICAgICAgICAgICAgICAgIXByb3BzLnRlc3QgJiZcbiAgICAgICAgICAgICAgICByb3V0ZXIucHVzaChcbiAgICAgICAgICAgICAgICAgICAgYCR7cHJvZHVjdGlvbkhvc3R9L2NsaWVudC9sYW5ndWFnZXM/dGVzdGlkPSR7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdG9yZS5nZXQoXCJ0aGVUZXN0XCIpLl9pZFxuICAgICAgICAgICAgICAgICAgICB9YFxuICAgICAgICAgICAgICAgICAgICAvLyBgJHtkZXZVUkx9Y2xpZW50L3Rlc3Q/dGVzdGlkPSR7XG4gICAgICAgICAgICAgICAgICAgIC8vICAgc3RvcmUuZ2V0KFwidGhlVGVzdFwiKS5faWRcbiAgICAgICAgICAgICAgICAgICAgLy8gfSZsYW5nPSR7c3RvcmUuZ2V0KFwiYWN0aXZlTGFuZ1wiKX1gXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgd2lkdGg9e3NpemV9XG4gICAgICAgICAgICBoZWlnaHQ9e3NpemV9XG4gICAgICAgICAgICB2aWV3Qm94PVwiMCAwIDU2IDU2XCJcbiAgICAgICAgICAgIGZpbGw9XCJub25lXCJcbiAgICAgICAgICAgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxuICAgICAgICA+XG4gICAgICAgICAgICA8ZyBpZD1cIkdyb3VwXzI4XCIgZGF0YS1uYW1lPVwiR3JvdXAgMjhcIiB0cmFuc2Zvcm09XCJ0cmFuc2xhdGUoLTExOTQgLTczKVwiPlxuICAgICAgICAgICAgICAgIDxjaXJjbGVcbiAgICAgICAgICAgICAgICAgICAgaWQ9XCJFbGxpcHNlXzhcIlxuICAgICAgICAgICAgICAgICAgICBkYXRhLW5hbWU9XCJFbGxpcHNlIDhcIlxuICAgICAgICAgICAgICAgICAgICBjeD1cIjE2LjVcIlxuICAgICAgICAgICAgICAgICAgICBjeT1cIjE2LjVcIlxuICAgICAgICAgICAgICAgICAgICByPVwiMTYuNVwiXG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgxMTk0IDczKVwiXG4gICAgICAgICAgICAgICAgICAgIGZpbGw9XCIjYzZhYTk2XCJcbiAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgIDxwYXRoXG4gICAgICAgICAgICAgICAgICAgIGlkPVwiSWNvbl9pb25pYy1pb3MtY2xvc2VcIlxuICAgICAgICAgICAgICAgICAgICBkYXRhLW5hbWU9XCJJY29uIGlvbmljLWlvcy1jbG9zZVwiXG4gICAgICAgICAgICAgICAgICAgIGQ9XCJNMjMuOTIxLDIxLjVsNy4zLTcuM0ExLjcxLDEuNzEsMCwwLDAsMjguOCwxMS43ODZsLTcuMyw3LjMtNy4zLTcuM0ExLjcxLDEuNzEsMCwxLDAsMTEuNzg4LDE0LjJsNy4zLDcuMy03LjMsNy4zYTEuNzEsMS43MSwwLDEsMCwyLjQxOCwyLjQxOGw3LjMtNy4zLDcuMyw3LjNBMS43MSwxLjcxLDAsMSwwLDMxLjIxOCwyOC44WlwiXG4gICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSgxMTg4LjcxNSA2Ny43MTEpXCJcbiAgICAgICAgICAgICAgICAgICAgZmlsbD1cIiMxYjIxMmVcIlxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICA8L2c+XG4gICAgICAgICAgICB7LyogPGNpcmNsZSBjeD1cIjI4XCIgY3k9XCIyOFwiIHI9XCIyOFwiIGZpbGw9XCIjMkY0ODU4XCIgLz5cbiAgICAgIDxwYXRoXG4gICAgICAgIGQ9XCJNMzguNTYyNiAzNi40NTAxTDMwLjExMjYgMjhMMzguNTYyOCAxOS41NDk4QzM5LjE0NTggMTguOTY2OSAzOS4xNDU4IDE4LjAyMDMgMzguNTYyNiAxNy40MzcyQzM3Ljk3OTcgMTYuODU0MyAzNy4wMzMyIDE2Ljg1NDMgMzYuNDUwMiAxNy40MzcyTDI4IDI1Ljg4NzRMMTkuNTQ5OCAxNy40MzcyQzE4Ljk2NjggMTYuODU0MyAxOC4wMjAzIDE2Ljg1NDMgMTcuNDM3NCAxNy40MzcyQzE2Ljg1NDIgMTguMDIwMyAxNi44NTQyIDE4Ljk2NjkgMTcuNDM3MiAxOS41NDk4TDI1Ljg4NzQgMjhMMTcuNDM3NCAzNi40NTAxQzE2Ljg1NDIgMzcuMDMzMiAxNi44NTQyIDM3Ljk3OTcgMTcuNDM3MiAzOC41NjI3QzE4LjAyMDMgMzkuMTQ1OCAxOC45NjY4IDM5LjE0NTggMTkuNTUgMzguNTYyN0wyOCAzMC4xMTI2TDM2LjQ1IDM4LjU2MjdDMzcuMDMzMiAzOS4xNDU4IDM3Ljk3OTcgMzkuMTQ1OCAzOC41NjI4IDM4LjU2MjdDMzkuMTQ1OCAzNy45Nzk3IDM5LjE0NTggMzcuMDMzMiAzOC41NjI2IDM2LjQ1MDFaXCJcbiAgICAgICAgZmlsbD1cIndoaXRlXCIgKi99XG4gICAgICAgICAgICB7LyogLz4gKi99XG4gICAgICAgIDwvc3ZnPlxuICAgICk7XG5cbiAgICBmdW5jdGlvbiBjaGVja1doZXRoZXJJc1ByZXZpZXcoKSB7XG4gICAgICAgIGlmIChwcm9wcy5mcm9tUHJldmlldykge1xuICAgICAgICAgICAgY29uc3QgUHJldmlld1N0eWxlOiBSZWFjdC5DU1NQcm9wZXJ0aWVzID0ge1xuICAgICAgICAgICAgICAgIHdpZHRoOiBcIjEwMCVcIixcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IFwiMTAwJVwiLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHJldHVybiBQcmV2aWV3U3R5bGU7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHt9O1xuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICAgIDxEbmRQcm92aWRlciBiYWNrZW5kPXtUb3VjaEJhY2tlbmR9PlxuICAgICAgICAgICAgey8qIDxBbmltYXRlUHJlc2VuY2U+ICovfVxuICAgICAgICAgICAge3Byb3BzLnRlc3QgJiYgKFxuICAgICAgICAgICAgICAgIDw+XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IFwiYWJzb2x1dGVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b3A6IFwiNDYlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmlnaHQ6IFwiMyVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXI6IFwibm9uZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IFwibm9uZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ2xpY2s9eygpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIjEyM1wiKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwYXRjaCh7dHlwZTogXCJpbmNyZW1lbnRcIn0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgfX1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAge0Fycm93KFwiNjBcIiwgXCI4NFwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IFwiYWJzb2x1dGVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b3A6IFwiNDYlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbGVmdDogXCIzJVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogXCJyb3RhdGUoMTgwZGVnKVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IFwibm9uZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlcjogXCJub25lXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgb25DbGljaz17KCkgPT4gZGlzcGF0Y2goe3R5cGU6IFwiZGVjcmVtZW50XCJ9KX1cbiAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAge0Fycm93KFwiNjBcIiwgXCI4NFwiKX1cbiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPC8+XG4gICAgICAgICAgICApfVxuXG4gICAgICAgICAgICA8QW5pbWF0ZVByZXNlbmNlIGV4aXRCZWZvcmVFbnRlcj5cbiAgICAgICAgICAgICAgICA8bW90aW9uLmRpdlxuICAgICAgICAgICAgICAgICAgICBrZXk9XCJhbmltYXRlZFBhZ2VcIlxuICAgICAgICAgICAgICAgICAgICBpbml0aWFsPXt7b3BhY2l0eTogMCwgeTogLTEwMH19XG4gICAgICAgICAgICAgICAgICAgIGFuaW1hdGU9e3tvcGFjaXR5OiAxLCB5OiAwfX1cbiAgICAgICAgICAgICAgICAgICAgZXhpdD17e29wYWNpdHk6IDAsIHk6IDUwMH19XG4gICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZT17c3R5bGVzLnBhZ2VDb250YWluZXJ9XG4gICAgICAgICAgICAgICAgICAgIHN0eWxlPXtjaGVja1doZXRoZXJJc1ByZXZpZXcoKX1cbiAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIHshcHJvcHMudGVzdCAmJiAoXG4gICAgICAgICAgICAgICAgICAgICAgICA8aW1nXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPVwiaHR0cHM6Ly93d3cuZmFzaGlvbm11c2V1bXJpZ2EubHYvYml0cml4L3RlbXBsYXRlcy9tYWluX3RlbXBsYXRlL2ltZy9sb2dvLnBuZ1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgYWx0PVwiRmFzaGlvbiBNdXNldW1cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkPXtzdHlsZXMuTU1sb2dvfVxuICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgKX1cbiAgICAgICAgICAgICAgICAgICAgPG1vdGlvbi5kaXYga2V5PVwidGVzdENvbnRhaW5lckFuaW1hXCIgY2xhc3NOYW1lPXtzdHlsZXMudGVzdENvbnRhaW5lcn0+XG4gICAgICAgICAgICAgICAgICAgICAgICB7cGFnZXM/Lmxlbmd0aCAtIDEgIT0gcGFnZS5jb3VudCAvKiA1NzhHICovICYmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvcGFjaXR5OiBcIjcwJVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IFwiYWJzb2x1dGVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJpZ2h0OiBcIjIlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0b3A6IFwiNSVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogXCJyZ2JhKDAsIDAsIDAsIDApXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBib3JkZXI6IFwibm9uZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge0V4aXRCdG4oXCI0NVwiKX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICAgICAgICAgICl9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtwYWdlcyAhPT0gdW5kZWZpbmVkICYmIHBhZ2UuY291bnQgIT09IHBhZ2VzPy5sZW5ndGggLSAxICYmIChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8VGVzdFByb2dyZXNzQmFyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGFjdGl2ZVBhZ2U9eyFwcm9wcy5mcm9tUHJldmlldyA/IHBhZ2UuY291bnQgLSAxIDogcGFnZS5jb3VudH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWN0aXZlUGFnZT17XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvKiBwcm9wcy5mcm9tUHJldmlldyA9PSB1bmRlZmluZWQgPyBwYWdlLmNvdW50IC0gMSA6ICovIHBhZ2UuY291bnRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBudW1iZXJPZlBhZ2VzPXtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHByb3BzLmZyb21QcmV2aWV3ID09IHVuZGVmaW5lZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID8gcGFnZXMubGVuZ3RoIC0gMVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogcGFnZXMubGVuZ3RoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gbnVtYmVyT2ZQYWdlcz17XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgIXByb3BzLmZyb21QcmV2aWV3ID8gcGFnZXM/Lmxlbmd0aCAtIDEgOiBwYWdlLmNvdW50XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gbnVtYmVyT2ZQYWdlcz17MTB9XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICl9XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IFwiMTAwJVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IFwiMTAwJVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBcImZsZXhcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAganVzdGlmeUNvbnRlbnQ6IFwiY2VudGVyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvaW50ZXJFdmVudHM6IGAke3Byb3BzLnRlc3QgJiYgXCJub25lXCJ9YCBhcyBcIm5vbmVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fVxuICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtwYWdlcyAhPT0gdW5kZWZpbmVkICYmIHBhZ2VzIVtwYWdlLmNvdW50XX1cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICA8L21vdGlvbi5kaXY+XG4gICAgICAgICAgICAgICAgPC9tb3Rpb24uZGl2PlxuICAgICAgICAgICAgPC9BbmltYXRlUHJlc2VuY2U+XG4gICAgICAgIDwvRG5kUHJvdmlkZXI+XG4gICAgKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgVGVzdDtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./pages/client/test.tsx\n");

/***/ })

})