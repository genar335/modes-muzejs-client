{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/pages/TMS/main.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport ActiveTests from \"../../components/ActiveTests\";\nimport { devURL } from \"../../components/constants\";\nimport Gallery from \"../../components/Gallery\";\nimport styles from \"../styles/main.module.scss\";\n\nvar main = function main() {\n  _s();\n\n  var getTestsByActive = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(isTestActive) {\n      var _tests;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return Axios.get(\"http://localhost:4000/tests/getTest?active=\".concat(isTestActive));\n\n            case 3:\n              _tests = _context.sent;\n              return _context.abrupt(\"return\", _tests.data);\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              alert(_context.t0);\n              return _context.abrupt(\"return\", []);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function getTestsByActive(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var _useState = useState({\n    activeTests: [],\n    inActiveTests: []\n  }),\n      tests = _useState[0],\n      setTests = _useState[1];\n\n  var getAllTests = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var serverResponse, data, tmpactiveTests, tmpinActiveTests;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return Axios.get(\"\".concat(devURL, \"tests/allTests\"));\n\n            case 2:\n              serverResponse = _context2.sent;\n              data = serverResponse.data;\n              tmpactiveTests = [];\n              tmpinActiveTests = [];\n              filterTests(tmpactiveTests, tmpinActiveTests, data);\n              setTests({\n                activeTests: tmpactiveTests,\n                inActiveTests: tmpinActiveTests\n              });\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getAllTests() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var filterTests = function filterTests(activeTests, inActiveTests, arrToFilter) {\n    arrToFilter.forEach(function (test) {\n      test.active && test.active !== undefined ? activeTests.push(test) : inActiveTests.push(test);\n    });\n  };\n\n  useEffect(function () {\n    /* const allTests: any =  */\n    getAllTests();\n  }, []);\n  return __jsx(\"div\", {\n    className: styles.MainContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(ActiveTests, {\n    getActiveTests: getTestsByActive,\n    activeTest: tests.activeTests,\n    updateTheTests: getAllTests,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), __jsx(Gallery, {\n    getInactiveTests: getTestsByActive,\n    testsToRender: tests.inActiveTests,\n    updateTheTest: getAllTests,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(main, \"j9kwJWOsAQKAWHLvlzWHxhG8FD4=\");\n\nexport default main;","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/pages/TMS/main.tsx"],"names":["Axios","React","useEffect","useState","ActiveTests","devURL","Gallery","styles","main","getTestsByActive","isTestActive","get","tests","data","alert","activeTests","inActiveTests","setTests","getAllTests","serverResponse","tmpactiveTests","tmpinActiveTests","filterTests","arrToFilter","forEach","test","active","undefined","push","MainContainer"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,MAAT,QAAuB,4BAAvB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AACA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AAAA;;AACjB,MAAMC,gBAAgB;AAAA,wEAAG,iBAAOC,YAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEDV,KAAK,CAACW,GAAN,sDAC4BD,YAD5B,EAFC;;AAAA;AAEfE,cAAAA,MAFe;AAAA,+CAKdA,MAAK,CAACC,IALQ;;AAAA;AAAA;AAAA;AAOrBC,cAAAA,KAAK,aAAL;AAPqB,+CAQd,EARc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAhBL,gBAAgB;AAAA;AAAA;AAAA,KAAtB;;AADiB,kBAaSN,QAAQ,CAG/B;AACDY,IAAAA,WAAW,EAAE,EADZ;AAEDC,IAAAA,aAAa,EAAE;AAFd,GAH+B,CAbjB;AAAA,MAaVJ,KAbU;AAAA,MAaHK,QAbG;;AAqBjB,MAAMC,WAAW;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACWlB,KAAK,CAACW,GAAN,WAAaN,MAAb,oBADX;;AAAA;AACZc,cAAAA,cADY;AAEZN,cAAAA,IAFY,GAELM,cAAc,CAACN,IAFV;AAGdO,cAAAA,cAHc,GAGiB,EAHjB;AAIdC,cAAAA,gBAJc,GAImB,EAJnB;AAKlBC,cAAAA,WAAW,CAACF,cAAD,EAAiBC,gBAAjB,EAAmCR,IAAnC,CAAX;AACAI,cAAAA,QAAQ,CAAC;AACPF,gBAAAA,WAAW,EAAEK,cADN;AAEPJ,gBAAAA,aAAa,EAAEK;AAFR,eAAD,CAAR;;AANkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXH,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAYA,MAAMI,WAAW,GAAG,SAAdA,WAAc,CAClBP,WADkB,EAElBC,aAFkB,EAGlBO,WAHkB,EAIf;AACHA,IAAAA,WAAW,CAACC,OAAZ,CAAoB,UAACC,IAAD,EAAiB;AACnCA,MAAAA,IAAI,CAACC,MAAL,IAAeD,IAAI,CAACC,MAAL,KAAgBC,SAA/B,GACIZ,WAAW,CAACa,IAAZ,CAAiBH,IAAjB,CADJ,GAEIT,aAAa,CAACY,IAAd,CAAmBH,IAAnB,CAFJ;AAGD,KAJD;AAKD,GAVD;;AAYAvB,EAAAA,SAAS,CAAC,YAAM;AACd;AAA6BgB,IAAAA,WAAW;AACzC,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE;AAAK,IAAA,SAAS,EAAEX,MAAM,CAACsB,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AACE,IAAA,cAAc,EAAEpB,gBADlB;AAEE,IAAA,UAAU,EAAEG,KAAK,CAACG,WAFpB;AAGE,IAAA,cAAc,EAAEG,WAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,MAAC,OAAD;AACE,IAAA,gBAAgB,EAAET,gBADpB;AAEE,IAAA,aAAa,EAAEG,KAAK,CAACI,aAFvB;AAGE,IAAA,aAAa,EAAEE,WAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAcD,CA/DD;;GAAMV,I;;AAiEN,eAAeA,IAAf","sourcesContent":["import Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { ITest } from \"../../@types/test\";\nimport ActiveTests from \"../../components/ActiveTests\";\nimport { devURL } from \"../../components/constants\";\nimport Gallery from \"../../components/Gallery\";\nimport styles from \"../styles/main.module.scss\";\nconst main = () => {\n  const getTestsByActive = async (isTestActive: boolean): Promise<any> => {\n    try {\n      const tests = await Axios.get(\n        `http://localhost:4000/tests/getTest?active=${isTestActive}`\n      );\n      return tests.data as ITest[];\n    } catch (error) {\n      alert(error);\n      return [];\n    }\n  };\n\n  const [tests, setTests] = useState<{\n    activeTests: ITest[];\n    inActiveTests: ITest[];\n  }>({\n    activeTests: [],\n    inActiveTests: [],\n  });\n\n  const getAllTests = async () => {\n    const serverResponse = await Axios.get(`${devURL}tests/allTests`);\n    const data = serverResponse.data;\n    let tmpactiveTests: Array<ITest> = [];\n    let tmpinActiveTests: Array<ITest> = [];\n    filterTests(tmpactiveTests, tmpinActiveTests, data);\n    setTests({\n      activeTests: tmpactiveTests,\n      inActiveTests: tmpinActiveTests,\n    });\n  };\n\n  const filterTests = (\n    activeTests: ITest[],\n    inActiveTests: ITest[],\n    arrToFilter: ITest[]\n  ) => {\n    arrToFilter.forEach((test: ITest) => {\n      test.active && test.active !== undefined\n        ? activeTests.push(test)\n        : inActiveTests.push(test);\n    });\n  };\n\n  useEffect(() => {\n    /* const allTests: any =  */ getAllTests();\n  }, []);\n\n  return (\n    <div className={styles.MainContainer}>\n      <ActiveTests\n        getActiveTests={getTestsByActive}\n        activeTest={tests.activeTests}\n        updateTheTests={getAllTests}\n      />\n      <Gallery\n        getInactiveTests={getTestsByActive}\n        testsToRender={tests.inActiveTests}\n        updateTheTest={getAllTests}\n      />\n    </div>\n  );\n};\n\nexport default main;\n"]},"metadata":{},"sourceType":"module"}