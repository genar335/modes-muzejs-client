{"ast":null,"code":"var _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/QACard.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from \"react\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\nimport addCompStyles from \"./styles/TestNamer.module.scss\";\nimport { closeBtn, CreateLangSwitchers } from \"./TestNamer\";\n\nconst QACard = props => {\n  const charLimit = 90;\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  console.log(props.cardContents);\n\n  const textPreviewer = text => {\n    if (text.length < 1) return __jsx(\"div\", {\n      className: compStyles.emptyText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 33\n      }\n    }, \"T\");\n\n    if (text.length > charLimit) {\n      return text.slice(0, 90) + \"...\";\n    } else {\n      return text;\n    }\n  };\n\n  const QACardRef = useRef(null);\n  useEffect(() => {\n    console.log(\"Yayyy\");\n  }, [QACardRef.current]);\n\n  const handleCardReference = () => {\n    props.setCurrentCard(QACardRef);\n    props.togglePhotoManager(false);\n  };\n\n  return __jsx(\"div\", {\n    className: `${compStyles[props.cardType]}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    // ref={QACardRef}\n    id: `${props.cardType}_${props.iterator}`,\n    className: `${addCompStyles.ModalContainerBG} ${!isOpen ? addCompStyles.Hidden : null}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: addCompStyles.ModalContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, closeBtn(setIsOpen), __jsx(\"div\", {\n    className: addCompStyles.Modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, CreateLangSwitchers(props.setSelectedLanguage, props.inputEnabler), __jsx(\"div\", {\n    className: addCompStyles.NameForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, props.cardContents === \"text\" ? props.q_a_TextEntry(props.cardType, props.iterator) : __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"Hello\"))))), __jsx(\"div\", {\n    className: compStyles.QADescription,\n    onClick: e => {\n      props.cardContents === \"img\" ? handleCardReference() : setIsOpen(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, props.cardContents === \"text\" ? textPreviewer(props.qna[props.cardType]) : __jsx(\"img\", {\n    // onChange={(e) => console.log(\"YAyyy\")}\n    className: compStyles.SelectedIMGPreview,\n    src: \"\",\n    alt: \"No image\",\n    ref: QACardRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default QACard;","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/QACard.tsx"],"names":["React","useEffect","useRef","useState","compStyles","addCompStyles","closeBtn","CreateLangSwitchers","QACard","props","charLimit","isOpen","setIsOpen","console","log","cardContents","textPreviewer","text","length","emptyText","slice","QACardRef","current","handleCardReference","setCurrentCard","togglePhotoManager","cardType","iterator","ModalContainerBG","Hidden","ModalContainer","Modal","setSelectedLanguage","inputEnabler","NameForm","q_a_TextEntry","QADescription","e","qna","SelectedIMGPreview"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { IQnA, TLangOption } from \"../@types/test\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\nimport addCompStyles from \"./styles/TestNamer.module.scss\";\nimport { closeBtn, CreateLangSwitchers } from \"./TestNamer\";\n\nconst QACard = (props: {\n  cardType: \"answer\" | \"question\";\n  cardContents: \"img\" | \"text\";\n  // saveData: (data) => void;\n  iterator: number;\n  setSelectedLanguage: (chooseLanguage: TLangOption[\"value\"]) => void;\n  inputEnabler: () => void;\n  qna: IQnA;\n  testType: any;\n  q_a_TextEntry: (type: \"answer\" | \"question\", id: number) => JSX.Element;\n  togglePhotoManager: (toggle: boolean) => void;\n  setCurrentCard: React.Dispatch<React.SetStateAction<undefined>>;\n}) => {\n  const charLimit = 90;\n  const [isOpen, setIsOpen] = useState(false);\n  console.log(props.cardContents);\n  const textPreviewer = (text: string) => {\n    if (text.length < 1) return <div className={compStyles.emptyText}>T</div>;\n    if (text.length > charLimit) {\n      return text.slice(0, 90) + \"...\";\n    } else {\n      return text;\n    }\n  };\n\n  const QACardRef = useRef(null);\n\n  useEffect(() => {\n    console.log(\"Yayyy\");\n  }, [QACardRef.current]);\n\n  const handleCardReference = () => {\n    props.setCurrentCard(QACardRef);\n    props.togglePhotoManager(false);\n  };\n\n  return (\n    <div className={`${compStyles[props.cardType]}`}>\n      <div\n        // ref={QACardRef}\n        id={`${props.cardType}_${props.iterator}`}\n        className={`${addCompStyles.ModalContainerBG} ${\n          !isOpen ? addCompStyles.Hidden : null\n        }`}\n      >\n        <div className={addCompStyles.ModalContainer}>\n          {closeBtn(setIsOpen)}\n          <div className={addCompStyles.Modal}>\n            {CreateLangSwitchers(props.setSelectedLanguage, props.inputEnabler)}\n            <div className={addCompStyles.NameForm}>\n              {props.cardContents === \"text\" ? (\n                props.q_a_TextEntry(props.cardType, props.iterator)\n              ) : (\n                <p>Hello</p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        className={compStyles.QADescription}\n        onClick={(e) => {\n          props.cardContents === \"img\"\n            ? handleCardReference()\n            : setIsOpen(true);\n        }}\n      >\n        {props.cardContents === \"text\" ? (\n          textPreviewer(props.qna[props.cardType])\n        ) : (\n          <img\n            // onChange={(e) => console.log(\"YAyyy\")}\n            className={compStyles.SelectedIMGPreview}\n            src=\"\"\n            alt=\"No image\"\n            ref={QACardRef}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\nexport default QACard;\n"]},"metadata":{},"sourceType":"module"}