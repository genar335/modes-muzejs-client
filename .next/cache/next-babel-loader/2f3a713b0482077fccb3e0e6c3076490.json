{"ast":null,"code":"var _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/pages/TMS/main.tsx\";\nvar __jsx = React.createElement;\nimport Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport ActiveTests from \"../../components/ActiveTests\";\nimport { devURL } from \"../../components/constants\";\nimport Gallery from \"../../components/Gallery\";\nimport styles from \"../styles/main.module.scss\";\n\nconst main = () => {\n  const getTestsByActive = async isTestActive => {\n    try {\n      const tests = await Axios.get(`http://localhost:4000/tests/getTest?active=${isTestActive}`);\n      return tests.data;\n    } catch (error) {\n      alert(error);\n      return [];\n    }\n  };\n\n  const {\n    0: tests,\n    1: setTests\n  } = useState({\n    activeTests: [],\n    inActiveTests: []\n  });\n\n  const getAllTests = async () => {\n    const serverResponse = await Axios.get(`${devURL}tests/allTests`);\n    const data = serverResponse.data;\n    console.log(\"Main test fethcer\");\n    let tmpactiveTests = [];\n    let tmpinActiveTests = [];\n    filterTests(tmpactiveTests, tmpinActiveTests, data);\n    setTests({\n      activeTests: tmpactiveTests,\n      inActiveTests: tmpinActiveTests\n    });\n  };\n\n  const filterTests = (activeTests, inActiveTests, arrToFilter) => {\n    arrToFilter.forEach(test => {\n      if (test.active !== undefined) {\n        test.active ? activeTests.push(test) : inActiveTests.push(test);\n      }\n    });\n  };\n\n  const toggleTest = testID => {\n    console.log(\"toggling test\");\n    let tmpActive = tests.activeTests;\n    let tmpInactive = tests.inActiveTests;\n    let combinedTests = [...tests.activeTests, ...tests.inActiveTests];\n    combinedTests.forEach(test => {\n      if (test._id === testID) {\n        if (combinedTests.indexOf(test) < tmpActive.length) {\n          tmpActive.splice(tmpActive.indexOf(test), 1);\n          tmpInactive.push(test);\n        } else {\n          tmpInactive.splice(tmpInactive.indexOf(test), 1);\n          tmpActive.push(test);\n        }\n      }\n    });\n    setTests({\n      activeTests: tmpActive,\n      inActiveTests: tmpInactive\n    });\n  };\n\n  useEffect(() => {\n    getAllTests();\n  }, []);\n  return __jsx(\"div\", {\n    className: styles.MainContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, __jsx(ActiveTests, {\n    getActiveTests: getTestsByActive,\n    activeTests: tests.activeTests,\n    updateTheTests: toggleTest,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }), __jsx(Gallery, {\n    getInactiveTests: getTestsByActive,\n    testsToRender: tests.inActiveTests,\n    updateTheTests: toggleTest,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default main;","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/pages/TMS/main.tsx"],"names":["Axios","React","useEffect","useState","ActiveTests","devURL","Gallery","styles","main","getTestsByActive","isTestActive","tests","get","data","error","alert","setTests","activeTests","inActiveTests","getAllTests","serverResponse","console","log","tmpactiveTests","tmpinActiveTests","filterTests","arrToFilter","forEach","test","active","undefined","push","toggleTest","testID","tmpActive","tmpInactive","combinedTests","_id","indexOf","length","splice","MainContainer"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,MAAT,QAAuB,4BAAvB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AACA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,gBAAgB,GAAG,MAAOC,YAAP,IAA+C;AACtE,QAAI;AACF,YAAMC,KAAK,GAAG,MAAMX,KAAK,CAACY,GAAN,CACjB,8CAA6CF,YAAa,EADzC,CAApB;AAGA,aAAOC,KAAK,CAACE,IAAb;AACD,KALD,CAKE,OAAOC,KAAP,EAAc;AACdC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACA,aAAO,EAAP;AACD;AACF,GAVD;;AAYA,QAAM;AAAA,OAACH,KAAD;AAAA,OAAQK;AAAR,MAAoBb,QAAQ,CAG/B;AACDc,IAAAA,WAAW,EAAE,EADZ;AAEDC,IAAAA,aAAa,EAAE;AAFd,GAH+B,CAAlC;;AAQA,QAAMC,WAAW,GAAG,YAAY;AAC9B,UAAMC,cAAc,GAAG,MAAMpB,KAAK,CAACY,GAAN,CAAW,GAAEP,MAAO,gBAApB,CAA7B;AACA,UAAMQ,IAAI,GAAGO,cAAc,CAACP,IAA5B;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,QAAIC,cAA4B,GAAG,EAAnC;AACA,QAAIC,gBAA8B,GAAG,EAArC;AACAC,IAAAA,WAAW,CAACF,cAAD,EAAiBC,gBAAjB,EAAmCX,IAAnC,CAAX;AACAG,IAAAA,QAAQ,CAAC;AACPC,MAAAA,WAAW,EAAEM,cADN;AAEPL,MAAAA,aAAa,EAAEM;AAFR,KAAD,CAAR;AAID,GAXD;;AAaA,QAAMC,WAAW,GAAG,CAClBR,WADkB,EAElBC,aAFkB,EAGlBQ,WAHkB,KAIf;AACHA,IAAAA,WAAW,CAACC,OAAZ,CAAqBC,IAAD,IAAiB;AACnC,UAAIA,IAAI,CAACC,MAAL,KAAgBC,SAApB,EAA+B;AAC7BF,QAAAA,IAAI,CAACC,MAAL,GAAcZ,WAAW,CAACc,IAAZ,CAAiBH,IAAjB,CAAd,GAAuCV,aAAa,CAACa,IAAd,CAAmBH,IAAnB,CAAvC;AACD;AACF,KAJD;AAKD,GAVD;;AAYA,QAAMI,UAAU,GAAIC,MAAD,IAAoB;AACrCZ,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,QAAIY,SAAS,GAAGvB,KAAK,CAACM,WAAtB;AACA,QAAIkB,WAAW,GAAGxB,KAAK,CAACO,aAAxB;AACA,QAAIkB,aAAa,GAAG,CAAC,GAAGzB,KAAK,CAACM,WAAV,EAAuB,GAAGN,KAAK,CAACO,aAAhC,CAApB;AACAkB,IAAAA,aAAa,CAACT,OAAd,CAAuBC,IAAD,IAAiB;AACrC,UAAIA,IAAI,CAACS,GAAL,KAAaJ,MAAjB,EAAyB;AACvB,YAAIG,aAAa,CAACE,OAAd,CAAsBV,IAAtB,IAA8BM,SAAS,CAACK,MAA5C,EAAoD;AAClDL,UAAAA,SAAS,CAACM,MAAV,CAAiBN,SAAS,CAACI,OAAV,CAAkBV,IAAlB,CAAjB,EAA0C,CAA1C;AACAO,UAAAA,WAAW,CAACJ,IAAZ,CAAiBH,IAAjB;AACD,SAHD,MAGO;AACLO,UAAAA,WAAW,CAACK,MAAZ,CAAmBL,WAAW,CAACG,OAAZ,CAAoBV,IAApB,CAAnB,EAA8C,CAA9C;AACAM,UAAAA,SAAS,CAACH,IAAV,CAAeH,IAAf;AACD;AACF;AACF,KAVD;AAWAZ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,WAAW,EAAEiB,SADN;AAEPhB,MAAAA,aAAa,EAAEiB;AAFR,KAAD,CAAR;AAID,GApBD;;AAsBAjC,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,WAAW;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE;AAAK,IAAA,SAAS,EAAEZ,MAAM,CAACkC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AACE,IAAA,cAAc,EAAEhC,gBADlB;AAEE,IAAA,WAAW,EAAEE,KAAK,CAACM,WAFrB;AAGE,IAAA,cAAc,EAAEe,UAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,MAAC,OAAD;AACE,IAAA,gBAAgB,EAAEvB,gBADpB;AAEE,IAAA,aAAa,EAAEE,KAAK,CAACO,aAFvB;AAGE,IAAA,cAAc,EAAEc,UAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAcD,CAtFD;;AAwFA,eAAexB,IAAf","sourcesContent":["import Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { ITest } from \"../../@types/test\";\nimport ActiveTests from \"../../components/ActiveTests\";\nimport { devURL } from \"../../components/constants\";\nimport Gallery from \"../../components/Gallery\";\nimport styles from \"../styles/main.module.scss\";\nconst main = () => {\n  const getTestsByActive = async (isTestActive: boolean): Promise<any> => {\n    try {\n      const tests = await Axios.get(\n        `http://localhost:4000/tests/getTest?active=${isTestActive}`\n      );\n      return tests.data as ITest[];\n    } catch (error) {\n      alert(error);\n      return [];\n    }\n  };\n\n  const [tests, setTests] = useState<{\n    activeTests: ITest[];\n    inActiveTests: ITest[];\n  }>({\n    activeTests: [],\n    inActiveTests: [],\n  });\n\n  const getAllTests = async () => {\n    const serverResponse = await Axios.get(`${devURL}tests/allTests`);\n    const data = serverResponse.data;\n    console.log(\"Main test fethcer\");\n    let tmpactiveTests: Array<ITest> = [];\n    let tmpinActiveTests: Array<ITest> = [];\n    filterTests(tmpactiveTests, tmpinActiveTests, data);\n    setTests({\n      activeTests: tmpactiveTests,\n      inActiveTests: tmpinActiveTests,\n    });\n  };\n\n  const filterTests = (\n    activeTests: ITest[],\n    inActiveTests: ITest[],\n    arrToFilter: ITest[]\n  ) => {\n    arrToFilter.forEach((test: ITest) => {\n      if (test.active !== undefined) {\n        test.active ? activeTests.push(test) : inActiveTests.push(test);\n      }\n    });\n  };\n\n  const toggleTest = (testID: string) => {\n    console.log(\"toggling test\");\n    let tmpActive = tests.activeTests;\n    let tmpInactive = tests.inActiveTests;\n    let combinedTests = [...tests.activeTests, ...tests.inActiveTests];\n    combinedTests.forEach((test: ITest) => {\n      if (test._id === testID) {\n        if (combinedTests.indexOf(test) < tmpActive.length) {\n          tmpActive.splice(tmpActive.indexOf(test), 1);\n          tmpInactive.push(test);\n        } else {\n          tmpInactive.splice(tmpInactive.indexOf(test), 1);\n          tmpActive.push(test);\n        }\n      }\n    });\n    setTests({\n      activeTests: tmpActive,\n      inActiveTests: tmpInactive,\n    });\n  };\n\n  useEffect(() => {\n    getAllTests();\n  }, []);\n\n  return (\n    <div className={styles.MainContainer}>\n      <ActiveTests\n        getActiveTests={getTestsByActive}\n        activeTests={tests.activeTests}\n        updateTheTests={toggleTest}\n      />\n      <Gallery\n        getInactiveTests={getTestsByActive}\n        testsToRender={tests.inActiveTests}\n        updateTheTests={toggleTest}\n      />\n    </div>\n  );\n};\n\nexport default main;\n"]},"metadata":{},"sourceType":"module"}