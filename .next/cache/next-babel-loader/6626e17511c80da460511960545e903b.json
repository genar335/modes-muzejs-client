{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/ActiveTests.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Carousel from \"react-multi-carousel\";\nimport TestCard from \"./TestCard\";\nimport styles from \"./styles/ActiveTests.module.scss\";\nimport { useRouter } from \"next/router\";\n\nvar ActiveTests = function ActiveTests(props) {\n  _s();\n\n  var responsive = {\n    superLargeDesktop: {\n      // the naming can be any, depends on you.\n      breakpoint: {\n        max: 4000,\n        min: 3000\n      },\n      items: 5\n    },\n    desktop: {\n      breakpoint: {\n        max: 3000,\n        min: 1024\n      },\n      items: 4\n    },\n    tablet: {\n      breakpoint: {\n        max: 1024,\n        min: 464\n      },\n      items: 2\n    },\n    mobile: {\n      breakpoint: {\n        max: 464,\n        min: 0\n      },\n      items: 1\n    }\n  };\n  var router = useRouter();\n\n  var handleAddTestClick = function handleAddTestClick() {\n    alert(\"Test addition should be happening right about now.\");\n    router.push(\"/TMS/create_test\");\n  };\n\n  return __jsx(\"div\", {\n    className: styles.ActiveTestsContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Active tests\"), __jsx(Carousel, {\n    responsive: responsive,\n    ssr: true,\n    containerClass: styles.Carousel,\n    itemClass: styles.Item,\n    customLeftArrow: __jsx(CustomRightArrow, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 26\n      }\n    }) // showDots\n    // dotListClass={styles.customDotListStyle}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, addATest(handleAddTestClick), props.activeTests.map(function (test, iterator) {\n    return __jsx(TestCard, {\n      key: iterator,\n      iterator: iterator,\n      colour: \"white\",\n      _id: test._id || \"NA\",\n      active: true,\n      nameInRu: test.ru.name // parentComponentTestFetcher={getTests}\n      // mainTestFetcher={props.updateTheTests}\n      ,\n      updateTests: props.updateTheTests,\n      fetchAllTests: props.fetchAllTests,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }\n    });\n  })));\n};\n\n_s(ActiveTests, \"hiS8qxSQ4/p4gtIvOT37RqZ02j0=\", false, function () {\n  return [useRouter];\n});\n\n_c = ActiveTests;\nexport default ActiveTests;\n\nfunction addATest(handleAddTestClick) {\n  return __jsx(\"div\", {\n    onClick: handleAddTestClick,\n    id: \"AddTest\",\n    className: styles.AddTestCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"+\"));\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ActiveTests\");","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/ActiveTests.tsx"],"names":["React","Carousel","TestCard","styles","useRouter","ActiveTests","props","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","router","handleAddTestClick","alert","push","ActiveTestsContainer","Item","addATest","activeTests","map","test","iterator","_id","ru","name","updateTheTests","fetchAllTests","AddTestCard"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Carousel from \"react-multi-carousel\";\nimport TestCard from \"./TestCard\";\nimport styles from \"./styles/ActiveTests.module.scss\";\nimport { brown } from \"./constants\";\nimport { NextRouter, useRouter } from \"next/router\";\nimport { ITest } from \"../@types/test\";\nimport Axios from \"axios\";\n\nconst ActiveTests = (props: {\n  // getActiveTests: (active: boolean) => Promise<any>;\n  activeTests: ITest[];\n  updateTheTests: (testID: string) => void;\n  fetchAllTests: () => Promise<void>;\n}) => {\n  const responsive = {\n    superLargeDesktop: {\n      // the naming can be any, depends on you.\n      breakpoint: { max: 4000, min: 3000 },\n      items: 5,\n    },\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 4,\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 2,\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 1,\n    },\n  };\n\n  const router: NextRouter = useRouter();\n\n  const handleAddTestClick = () => {\n    alert(\"Test addition should be happening right about now.\");\n    router.push(`/TMS/create_test`);\n  };\n\n  return (\n    <div className={styles.ActiveTestsContainer}>\n      <h1>Active tests</h1>\n      <Carousel\n        responsive={responsive}\n        ssr\n        containerClass={styles.Carousel}\n        itemClass={styles.Item}\n        customLeftArrow={<CustomRightArrow />}\n        // showDots\n        // dotListClass={styles.customDotListStyle}\n      >\n        {addATest(handleAddTestClick)}\n        {props.activeTests.map((test: ITest, iterator: number) => (\n          <TestCard\n            key={iterator}\n            iterator={iterator}\n            colour=\"white\"\n            _id={test._id || \"NA\"}\n            active={true}\n            nameInRu={test.ru.name}\n            // parentComponentTestFetcher={getTests}\n            // mainTestFetcher={props.updateTheTests}\n            updateTests={props.updateTheTests}\n            fetchAllTests={props.fetchAllTests}\n          />\n        ))}\n      </Carousel>\n    </div>\n  );\n};\n\nexport default ActiveTests;\nfunction addATest(handleAddTestClick: () => void) {\n  return (\n    <div\n      onClick={handleAddTestClick}\n      id=\"AddTest\"\n      className={styles.AddTestCard}\n    >\n      <span>+</span>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}