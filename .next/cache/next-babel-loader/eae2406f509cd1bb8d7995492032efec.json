{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/LangBtnController.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport LanguageBtn from \"./LanguageBtn\";\nimport compStyle from \"./styles/LangBtnController.module.scss\";\n\nvar LangBtnController = function LangBtnController(props) {\n  _s();\n\n  var _useState = useState(),\n      activeBtnPosition = _useState[0],\n      setActiveBtnPosition = _useState[1];\n\n  var _useState2 = useState([]),\n      flatBtns = _useState2[0],\n      setFlatBtns = _useState2[1];\n\n  var forceUpdate = React.useReducer(function () {\n    return {};\n  }, {})[1];\n\n  if (flatBtns.length !== props.BtnArray.length) {\n    var tmp = props.BtnArray.map(function (btn) {\n      if (btn === props.active) {\n        console.log(\"returning true\");\n        return true;\n      } else {\n        return false;\n      }\n    });\n    setFlatBtns(tmp);\n  }\n\n  function activeBtnSwitcher() {\n    flatBtns.pop();\n\n    if (activeBtnPosition == flatBtns.length) {\n      flatBtns.unshift(true);\n    } else {\n      flatBtns.unshift(false);\n    }\n\n    console.log(flatBtns, \"after manipulation\"); // Btns.forEach((btn, index) => (btn[1] = flatBtns[index]));\n\n    setActiveBtnPosition(flatBtns.indexOf(true));\n    forceUpdate();\n  }\n\n  var _useState3 = useState(props.active),\n      activeBtn = _useState3[0],\n      setActiveBtn = _useState3[1];\n  /**\n   * Sets currently active button.\n   * @param id of a button\n   */\n\n\n  var activeBtnSetter = function activeBtnSetter(id) {\n    return setActiveBtn(id);\n  }; // * Grabbing arrow in the modal which selects next element.\n  // * Assings a click listener to the grabbed element.\n\n\n  var arrowBtn;\n  useEffect(function () {\n    var _arrowBtn;\n\n    console.log(document.getElementById(\"arrowButton\"), \"found it\");\n    arrowBtn = document.getElementById(\"arrowButton\");\n    (_arrowBtn = arrowBtn) === null || _arrowBtn === void 0 ? void 0 : _arrowBtn.addEventListener(\"click\", handleArrowClick);\n    return function () {\n      var _arrowBtn2;\n\n      return (_arrowBtn2 = arrowBtn) === null || _arrowBtn2 === void 0 ? void 0 : _arrowBtn2.removeEventListener(\"click\", handleArrowClick);\n    };\n  });\n\n  var handleArrowClick = function handleArrowClick() {\n    activeBtnSwitcher();\n  }; // * Cleans other buttons from the pressed class.\n  //   useEffect(() => {\n  //     Btns.forEach((button) => {\n  //       console.log(button[0].props.btnID);\n  //       if (button[0].props.btnID !== activeBtn) {\n  //         button[1] = false;\n  //       }\n  //     });\n  //   }, []);\n\n\n  return __jsx(\"div\", {\n    className: compStyle.LangSelect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 10\n    }\n  }, props.BtnArray.map(function (button, key) {\n    return __jsx(LanguageBtn, {\n      btnID: button,\n      btnText: button.toUpperCase,\n      key: key,\n      langSelect: props.langSelector,\n      inputEnabler: props.inputEnabler,\n      handleBtnClick: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\n_s(LangBtnController, \"YMucGgZf78So7CkXaiI7TQ63HVY=\");\n\n_c = LangBtnController;\nexport default LangBtnController;\n\nvar _c;\n\n$RefreshReg$(_c, \"LangBtnController\");","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/LangBtnController.tsx"],"names":["React","useEffect","useState","LanguageBtn","compStyle","LangBtnController","props","activeBtnPosition","setActiveBtnPosition","flatBtns","setFlatBtns","forceUpdate","useReducer","length","BtnArray","tmp","map","btn","active","console","log","activeBtnSwitcher","pop","unshift","indexOf","activeBtn","setActiveBtn","activeBtnSetter","id","arrowBtn","document","getElementById","addEventListener","handleArrowClick","removeEventListener","LangSelect","button","key","toUpperCase","langSelector","inputEnabler"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport LanguageBtn from \"./LanguageBtn\";\nimport compStyle from \"./styles/LangBtnController.module.scss\";\n\nconst LangBtnController = (props) => {\n  type TBtnArrayWithPressedState = {\n    btns: [JSX.Element, boolean];\n  };\n\n  const [activeBtnPosition, setActiveBtnPosition] = useState<Number>();\n  const [flatBtns, setFlatBtns] = useState<Array<boolean>>([]);\n  const forceUpdate = React.useReducer(() => ({}), {})[1] as () => void;\n\n  if (flatBtns.length !== props.BtnArray.length) {\n    const tmp: boolean[] = props.BtnArray.map((btn) => {\n      if (btn === props.active) {\n        console.log(\"returning true\");\n        return true;\n      } else {\n        return false;\n      }\n    });\n    setFlatBtns(tmp);\n  }\n\n  function activeBtnSwitcher() {\n    flatBtns.pop();\n    if (activeBtnPosition == flatBtns.length) {\n      flatBtns.unshift(true);\n    } else {\n      flatBtns.unshift(false);\n    }\n    console.log(flatBtns, \"after manipulation\");\n    // Btns.forEach((btn, index) => (btn[1] = flatBtns[index]));\n    setActiveBtnPosition(flatBtns.indexOf(true));\n    forceUpdate();\n  }\n\n  const [activeBtn, setActiveBtn] = useState<string>(props.active);\n  /**\n   * Sets currently active button.\n   * @param id of a button\n   */\n  const activeBtnSetter = (id: string) => setActiveBtn(id);\n\n  // * Grabbing arrow in the modal which selects next element.\n  // * Assings a click listener to the grabbed element.\n  let arrowBtn: HTMLElement | null;\n  useEffect(() => {\n    console.log(document.getElementById(\"arrowButton\"), \"found it\");\n    arrowBtn = document.getElementById(\"arrowButton\");\n    arrowBtn?.addEventListener(\"click\", handleArrowClick);\n    return () => arrowBtn?.removeEventListener(\"click\", handleArrowClick);\n  });\n\n  const handleArrowClick = (): void => {\n    activeBtnSwitcher();\n  };\n\n  // * Cleans other buttons from the pressed class.\n  //   useEffect(() => {\n  //     Btns.forEach((button) => {\n  //       console.log(button[0].props.btnID);\n  //       if (button[0].props.btnID !== activeBtn) {\n  //         button[1] = false;\n  //       }\n  //     });\n  //   }, []);\n\n  return <div className={compStyle.LangSelect}>\n      {props.BtnArray.map((button, key) => \n        <LanguageBtn \n            btnID={button}\n            btnText={button.toUpperCase}\n            key={key}\n            langSelect={props.langSelector}  \n            inputEnabler={props.inputEnabler}\n            handleBtnClick\n        />\n      )}\n  </div>;\n};\n\nexport default LangBtnController;\n"]},"metadata":{},"sourceType":"module"}