{"ast":null,"code":"var _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/pages/TMS/main.tsx\";\nvar __jsx = React.createElement;\nimport Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport ActiveTests from \"../../components/ActiveTests\";\nimport { devURL } from \"../../components/constants\";\nimport Gallery from \"../../components/Gallery\";\nimport styles from \"../styles/main.module.scss\";\n\nconst main = () => {\n  const getTestsByActive = async isTestActive => {\n    try {\n      const tests = await Axios.get(`http://localhost:4000/tests/getTest?active=${isTestActive}`);\n      return tests.data;\n    } catch (error) {\n      alert(error);\n      return [];\n    }\n  };\n\n  const {\n    0: tests,\n    1: setTests\n  } = useState({\n    activeTests: [],\n    inActiveTests: []\n  });\n\n  const getAllTests = async () => {\n    const serverResponse = await Axios.get(`${devURL}tests/allTests`);\n    console.log(serverResponse);\n    return serverResponse.data;\n  };\n\n  const filterTests = (activeTests, inActiveTests, arrToFilter) => {\n    arrToFilter.forEach(test => {\n      test.active ? activeTests.push(test) : inActiveTests.push(test);\n    });\n  };\n\n  useEffect(() => {\n    const allTests = getAllTests(); // console.log(allTests.then((value: any) => filterTests(activeTests, inActiveTests ,value)));\n\n    let tmpactiveTests = [];\n    let tmpinActiveTests = [];\n    filterTests(tmpactiveTests, tmpinActiveTests, allTests);\n    setTests({\n      activeTests: tmpactiveTests,\n      inActiveTests: tmpinActiveTests\n    });\n  }, []);\n\n  const toggleTestActiveState = async () => {\n    try {} catch (error) {\n      console.error(error);\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: styles.MainContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, __jsx(ActiveTests, {\n    getActiveTests: getTestsByActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), __jsx(Gallery, {\n    getInactiveTests: getTestsByActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default main;","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/pages/TMS/main.tsx"],"names":["Axios","React","useEffect","useState","ActiveTests","devURL","Gallery","styles","main","getTestsByActive","isTestActive","tests","get","data","error","alert","setTests","activeTests","inActiveTests","getAllTests","serverResponse","console","log","filterTests","arrToFilter","forEach","test","active","push","allTests","tmpactiveTests","tmpinActiveTests","toggleTestActiveState","MainContainer"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAASC,MAAT,QAAuB,4BAAvB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AACA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,gBAAgB,GAAG,MAAOC,YAAP,IAA+C;AACtE,QAAI;AACF,YAAMC,KAAK,GAAG,MAAMX,KAAK,CAACY,GAAN,CACjB,8CAA6CF,YAAa,EADzC,CAApB;AAGA,aAAOC,KAAK,CAACE,IAAb;AACD,KALD,CAKE,OAAOC,KAAP,EAAc;AACdC,MAAAA,KAAK,CAACD,KAAD,CAAL;AACA,aAAO,EAAP;AACD;AACF,GAVD;;AAYA,QAAM;AAAA,OAACH,KAAD;AAAA,OAAQK;AAAR,MAAoBb,QAAQ,CAG/B;AACDc,IAAAA,WAAW,EAAE,EADZ;AAEDC,IAAAA,aAAa,EAAE;AAFd,GAH+B,CAAlC;;AAQA,QAAMC,WAAW,GAAG,YAAY;AAC9B,UAAMC,cAAc,GAAG,MAAMpB,KAAK,CAACY,GAAN,CAAW,GAAEP,MAAO,gBAApB,CAA7B;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AACA,WAAOA,cAAc,CAACP,IAAtB;AACD,GAJD;;AAMA,QAAMU,WAAW,GAAG,CAClBN,WADkB,EAElBC,aAFkB,EAGlBM,WAHkB,KAIf;AACHA,IAAAA,WAAW,CAACC,OAAZ,CAAqBC,IAAD,IAAiB;AACnCA,MAAAA,IAAI,CAACC,MAAL,GAAcV,WAAW,CAACW,IAAZ,CAAiBF,IAAjB,CAAd,GAAuCR,aAAa,CAACU,IAAd,CAAmBF,IAAnB,CAAvC;AACD,KAFD;AAGD,GARD;;AAUAxB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM2B,QAAa,GAAGV,WAAW,EAAjC,CADc,CAEd;;AACA,QAAIW,cAA4B,GAAG,EAAnC;AACA,QAAIC,gBAA8B,GAAG,EAArC;AACAR,IAAAA,WAAW,CAACO,cAAD,EAAiBC,gBAAjB,EAAmCF,QAAnC,CAAX;AACAb,IAAAA,QAAQ,CAAC;AACPC,MAAAA,WAAW,EAAEa,cADN;AAEPZ,MAAAA,aAAa,EAAEa;AAFR,KAAD,CAAR;AAID,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMC,qBAAqB,GAAG,YAAY;AACxC,QAAI,CACH,CADD,CACE,OAAOlB,KAAP,EAAc;AACdO,MAAAA,OAAO,CAACP,KAAR,CAAcA,KAAd;AACD;AACF,GALD;;AAOA,SACE;AAAK,IAAA,SAAS,EAAEP,MAAM,CAAC0B,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,WAAD;AAAa,IAAA,cAAc,EAAExB,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,OAAD;AAAS,IAAA,gBAAgB,EAAEA,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CA9DD;;AAgEA,eAAeD,IAAf","sourcesContent":["import Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { ITest } from \"../../@types/test\";\nimport ActiveTests from \"../../components/ActiveTests\";\nimport { devURL } from \"../../components/constants\";\nimport Gallery from \"../../components/Gallery\";\nimport styles from \"../styles/main.module.scss\";\nconst main = () => {\n  const getTestsByActive = async (isTestActive: boolean): Promise<any> => {\n    try {\n      const tests = await Axios.get(\n        `http://localhost:4000/tests/getTest?active=${isTestActive}`\n      );\n      return tests.data as ITest[];\n    } catch (error) {\n      alert(error);\n      return [];\n    }\n  };\n\n  const [tests, setTests] = useState<{\n    activeTests: ITest[];\n    inActiveTests: ITest[];\n  }>({\n    activeTests: [],\n    inActiveTests: [],\n  });\n\n  const getAllTests = async () => {\n    const serverResponse = await Axios.get(`${devURL}tests/allTests`);\n    console.log(serverResponse);\n    return serverResponse.data;\n  };\n\n  const filterTests = (\n    activeTests: ITest[],\n    inActiveTests: ITest[],\n    arrToFilter: ITest[]\n  ) => {\n    arrToFilter.forEach((test: ITest) => {\n      test.active ? activeTests.push(test) : inActiveTests.push(test);\n    });\n  };\n\n  useEffect(() => {\n    const allTests: any = getAllTests();\n    // console.log(allTests.then((value: any) => filterTests(activeTests, inActiveTests ,value)));\n    let tmpactiveTests: Array<ITest> = [];\n    let tmpinActiveTests: Array<ITest> = [];\n    filterTests(tmpactiveTests, tmpinActiveTests, allTests);\n    setTests({\n      activeTests: tmpactiveTests,\n      inActiveTests: tmpinActiveTests,\n    });\n  }, []);\n\n  const toggleTestActiveState = async () => {\n    try {\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className={styles.MainContainer}>\n      <ActiveTests getActiveTests={getTestsByActive} />\n      <Gallery getInactiveTests={getTestsByActive} />\n    </div>\n  );\n};\n\nexport default main;\n"]},"metadata":{},"sourceType":"module"}