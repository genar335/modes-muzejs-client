{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yberfox/Documents/personal-projects/modes-muzejs-client/pages/tms/main.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Axios from \"axios\"; //const jwt = document.cookie.slice(document.cookie.indexOf('=') + 1);\n\nimport React, { useEffect, useState } from \"react\";\nimport ActiveTests from \"../../components/ActiveTests\";\nimport { productionURL } from \"../../components/constants\";\nimport Gallery from \"../../components/Gallery\";\nimport { motion } from \"framer-motion\";\nimport styles from \"../styles/main.module.scss\";\nimport { pageAppearance } from \"./create_test\";\nimport PleaseWaitModal from \"../../components/PleaseWaitModal\";\nimport FMLogo from \"../../components/FMlogo\";\nimport checkJWT from \"../../components/jwtChecker\";\nimport { useRouter } from \"next/router\";\nimport { EmailDownloadBtn } from \"../../components/EmailDownloadBtn\";\n\nvar main = function main() {\n  _s();\n\n  var router = useRouter();\n\n  var getTestsByActive = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(isTestActive) {\n      var _tests;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return Axios.get(\"http://192.168.8.100:4000/tests/getTest?active=\".concat(isTestActive));\n\n            case 3:\n              _tests = _context.sent;\n              console.log(_tests.data, \"received tests\");\n              return _context.abrupt(\"return\", _tests.data);\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(Object.keys(_context.t0), _context.t0.message);\n              return _context.abrupt(\"return\", []);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function getTestsByActive(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var _useState = useState(false),\n      hasEverythingFetched = _useState[0],\n      setHasEverythingFetched = _useState[1];\n\n  var _useState2 = useState({\n    activeTests: [],\n    inActiveTests: []\n  }),\n      tests = _useState2[0],\n      setTests = _useState2[1];\n\n  var getAllTests = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var serverResponse, data, tmpactiveTests, tmpinActiveTests;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setHasEverythingFetched(false);\n              _context2.prev = 1;\n              _context2.next = 4;\n              return Axios.get(\"\".concat(productionURL, \"tests/allTests\"));\n\n            case 4:\n              serverResponse = _context2.sent;\n              data = serverResponse.data;\n              setHasEverythingFetched(true);\n              tmpactiveTests = [];\n              tmpinActiveTests = [];\n              filterTests(tmpactiveTests, tmpinActiveTests, data);\n              setTests({\n                activeTests: tmpactiveTests,\n                inActiveTests: tmpinActiveTests\n              });\n              _context2.next = 16;\n              break;\n\n            case 13:\n              _context2.prev = 13;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(Object.keys(_context2.t0), _context2.t0.message);\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 13]]);\n    }));\n\n    return function getAllTests() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var filterTests = function filterTests(activeTests, inActiveTests, arrToFilter) {\n    arrToFilter.forEach(function (test) {\n      if (test.active !== undefined) {\n        test.active ? activeTests.push(test) : inActiveTests.push(test);\n      }\n    });\n  };\n\n  var toggleTest = function toggleTest(testID) {\n    var tmpActive = tests.activeTests;\n    var tmpInactive = tests.inActiveTests;\n    var combinedTests = [].concat(_toConsumableArray(tests.activeTests), _toConsumableArray(tests.inActiveTests));\n    combinedTests.forEach(function (test) {\n      if (test._id === testID) {\n        if (combinedTests.indexOf(test) < tmpActive.length) {\n          tmpActive.splice(tmpActive.indexOf(test), 1);\n          tmpInactive.push(_objectSpread(_objectSpread({}, test), {}, {\n            active: !test.active\n          }));\n        } else {\n          tmpInactive.splice(tmpInactive.indexOf(test), 1);\n          tmpActive.push(_objectSpread(_objectSpread({}, test), {}, {\n            active: !test.active\n          }));\n        }\n      }\n    });\n    setTests({\n      activeTests: tmpActive,\n      inActiveTests: tmpInactive\n    });\n  };\n\n  useEffect(function () {\n    // Axios.defaults.headers.common[\"Authorization\"] =\n    //   \"Bearer \" + store.get(\"jwt\");\n    if (!checkJWT()) {// router.replace(`${productionHost}/tms/auth`);\n    }\n\n    getAllTests();\n  }, []);\n  return __jsx(motion.div, {\n    className: styles.MainContainer,\n    variants: pageAppearance,\n    initial: \"hidden\",\n    animate: \"visible\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles.FMLogo,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, __jsx(FMLogo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  })), __jsx(PleaseWaitModal, {\n    isDisplayed: !hasEverythingFetched,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), __jsx(ActiveTests // getActiveTests={getTestsByActive}\n  , {\n    tests: tests,\n    activeTests: tests.activeTests,\n    updateTheTests: toggleTest,\n    fetchAllTests: getAllTests,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }), __jsx(Gallery // getInactiveTests={getTestsByActive}\n  , {\n    testsToRender: tests.inActiveTests,\n    updateTheTests: toggleTest,\n    fetchAllTests: getAllTests,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), __jsx(EmailDownloadBtn, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }));\n};\n\n_s(main, \"PTlpvLfphRDT6Gde+xuO3dGIzzs=\", false, function () {\n  return [useRouter];\n});\n\nexport default main;","map":{"version":3,"sources":["/Users/yberfox/Documents/personal-projects/modes-muzejs-client/pages/tms/main.tsx"],"names":["Axios","React","useEffect","useState","ActiveTests","productionURL","Gallery","motion","styles","pageAppearance","PleaseWaitModal","FMLogo","checkJWT","useRouter","EmailDownloadBtn","main","router","getTestsByActive","isTestActive","get","tests","console","log","data","Object","keys","message","hasEverythingFetched","setHasEverythingFetched","activeTests","inActiveTests","setTests","getAllTests","serverResponse","tmpactiveTests","tmpinActiveTests","filterTests","arrToFilter","forEach","test","active","undefined","push","toggleTest","testID","tmpActive","tmpInactive","combinedTests","_id","indexOf","length","splice","MainContainer"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\n//const jwt = document.cookie.slice(document.cookie.indexOf('=') + 1);\nimport React, {useEffect, useState} from \"react\";\nimport {ITest} from \"../../@types/test\";\nimport ActiveTests from \"../../components/ActiveTests\";\nimport {productionURL,} from \"../../components/constants\";\nimport Gallery from \"../../components/Gallery\";\nimport {motion} from \"framer-motion\";\nimport styles from \"../styles/main.module.scss\";\nimport {pageAppearance} from \"./create_test\";\nimport PleaseWaitModal from \"../../components/PleaseWaitModal\";\nimport FMLogo from \"../../components/FMlogo\";\nimport checkJWT from \"../../components/jwtChecker\";\nimport {NextRouter, useRouter} from \"next/router\";\nimport {EmailDownloadBtn} from \"../../components/EmailDownloadBtn\";\n\nconst main = () => {\n    const router: NextRouter = useRouter();\n    const getTestsByActive = async (isTestActive: boolean): Promise<any> => {\n        try {\n            const tests = await Axios.get(\n                `http://192.168.8.100:4000/tests/getTest?active=${isTestActive}`\n            );\n            console.log(tests.data, \"received tests\");\n            return tests.data as ITest[];\n        } catch (error) {\n            console.log(Object.keys(error), error.message);\n            return [];\n        }\n    };\n    const [hasEverythingFetched, setHasEverythingFetched] =\n        useState<boolean>(false);\n    const [tests, setTests] = useState<{\n        activeTests: ITest[];\n        inActiveTests: ITest[];\n    }>({\n        activeTests: [],\n        inActiveTests: [],\n    });\n\n    const getAllTests = async () => {\n        setHasEverythingFetched(false);\n\n        try {\n            const serverResponse = await Axios.get(`${productionURL}tests/allTests`);\n            const data = serverResponse.data;\n\n            setHasEverythingFetched(true);\n            let tmpactiveTests: Array<ITest> = [];\n            let tmpinActiveTests: Array<ITest> = [];\n            filterTests(tmpactiveTests, tmpinActiveTests, data);\n            setTests({\n                activeTests: tmpactiveTests,\n                inActiveTests: tmpinActiveTests,\n            });\n        } catch (error) {\n            console.log(Object.keys(error), error.message);\n        }\n    };\n\n    const filterTests = (\n        activeTests: ITest[],\n        inActiveTests: ITest[],\n        arrToFilter: ITest[]\n    ) => {\n        arrToFilter.forEach((test: ITest) => {\n            if (test.active !== undefined) {\n                test.active ? activeTests.push(test) : inActiveTests.push(test);\n            }\n        });\n    };\n\n    const toggleTest = (testID: string) => {\n        let tmpActive = tests.activeTests;\n        let tmpInactive = tests.inActiveTests;\n        let combinedTests = [...tests.activeTests, ...tests.inActiveTests];\n\n        combinedTests.forEach((test: ITest) => {\n            if (test._id === testID) {\n                if (combinedTests.indexOf(test) < tmpActive.length) {\n                    tmpActive.splice(tmpActive.indexOf(test), 1);\n                    tmpInactive.push({\n                        ...test,\n                        active: !test.active,\n                    });\n                } else {\n                    tmpInactive.splice(tmpInactive.indexOf(test), 1);\n                    tmpActive.push({\n                        ...test,\n                        active: !test.active,\n                    });\n                }\n            }\n        });\n\n        setTests({\n            activeTests: tmpActive,\n            inActiveTests: tmpInactive,\n        });\n    };\n\n    useEffect(() => {\n        // Axios.defaults.headers.common[\"Authorization\"] =\n        //   \"Bearer \" + store.get(\"jwt\");\n\n        if (!checkJWT()) {\n            // router.replace(`${productionHost}/tms/auth`);\n        }\n        getAllTests();\n    }, []);\n\n    return (\n        <motion.div\n            className={styles.MainContainer}\n            variants={pageAppearance}\n            initial=\"hidden\"\n            animate=\"visible\"\n        >\n            <div className={styles.FMLogo}>\n                <FMLogo/>\n            </div>\n            <PleaseWaitModal isDisplayed={!hasEverythingFetched}/>\n            <ActiveTests\n                // getActiveTests={getTestsByActive}\n                tests={tests}\n                activeTests={tests.activeTests}\n                updateTheTests={toggleTest}\n                fetchAllTests={getAllTests}\n            />\n            <Gallery\n                // getInactiveTests={getTestsByActive}\n                testsToRender={tests.inActiveTests}\n                updateTheTests={toggleTest}\n                fetchAllTests={getAllTests}\n            />\n            <EmailDownloadBtn/>\n        </motion.div>\n    );\n};\n\nexport default main;\n"]},"metadata":{},"sourceType":"module"}