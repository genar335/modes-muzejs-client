{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/LangBtnController.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport LanguageBtn from \"./LanguageBtn\";\nimport compStyle from \"./styles/LangBtnController.module.scss\";\n\nvar LangBtnController = function LangBtnController(props) {\n  _s();\n\n  var _useState = useState([]),\n      flatBtns = _useState[0],\n      setFlatBtns = _useState[1];\n\n  var _useState2 = useState(),\n      activeBtnPosition = _useState2[0],\n      setActiveBtnPosition = _useState2[1];\n\n  console.log(props.active, \"Active from a button\");\n  var forceUpdate = React.useReducer(function () {\n    return {};\n  }, {})[1]; // * Creates an array with values corresponding to parsed buttons activated value.\n  // * Happens on first render\n\n  if (flatBtns.length !== props.BtnArray.length) {\n    var tmp = props.BtnArray.map(function (btn) {\n      if (btn === props.active) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n    setActiveBtnPosition(tmp.indexOf(true));\n    setFlatBtns(tmp);\n  }\n\n  var activeBtnPositionSetter = function activeBtnPositionSetter(id) {\n    setFlatBtns(flatBtns.map(function (btn, index) {\n      return index === id ? btn = true : btn = false;\n    }));\n    setActiveBtnPosition(id);\n    forceUpdate();\n  };\n\n  function activeBtnSwitcher() {\n    var tmp = flatBtns;\n    tmp.unshift(tmp[tmp.length - 1]);\n    tmp.pop();\n    setFlatBtns(tmp);\n    activeBtnPositionSetter(flatBtns.indexOf(true));\n    props.langSelector(props.BtnArray[flatBtns.indexOf(true)]); // forceUpdate();\n  } // * Grabbing arrow in the modal which selects next element.\n  // * Assings a click listener to the grabbed element.\n\n\n  var arrowBtn;\n  useEffect(function () {\n    var _arrowBtn;\n\n    arrowBtn = document.getElementById(\"arrowBtn\");\n    (_arrowBtn = arrowBtn) === null || _arrowBtn === void 0 ? void 0 : _arrowBtn.addEventListener(\"click\", handleArrowClick);\n    return function () {\n      var _arrowBtn2;\n\n      return (_arrowBtn2 = arrowBtn) === null || _arrowBtn2 === void 0 ? void 0 : _arrowBtn2.removeEventListener(\"click\", handleArrowClick);\n    };\n  });\n\n  var handleArrowClick = function handleArrowClick() {\n    activeBtnSwitcher();\n  };\n\n  return __jsx(\"div\", {\n    className: compStyle.LangSelect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, props.BtnArray.map(function (button, key) {\n    return __jsx(LanguageBtn, {\n      btnID: button,\n      btnText: button.toUpperCase(),\n      key: key,\n      langSelect: props.langSelector,\n      inputEnabler: props.inputEnabler,\n      setActiveBtn: activeBtnPositionSetter,\n      pressed: flatBtns[key],\n      accessKey: key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\n_s(LangBtnController, \"eLg3zwL2hy7smFPBDGSw1UOcGlg=\");\n\n_c = LangBtnController;\nexport default LangBtnController;\n\nvar _c;\n\n$RefreshReg$(_c, \"LangBtnController\");","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/LangBtnController.tsx"],"names":["React","useEffect","useState","LanguageBtn","compStyle","LangBtnController","props","flatBtns","setFlatBtns","activeBtnPosition","setActiveBtnPosition","console","log","active","forceUpdate","useReducer","length","BtnArray","tmp","map","btn","indexOf","activeBtnPositionSetter","id","index","activeBtnSwitcher","unshift","pop","langSelector","arrowBtn","document","getElementById","addEventListener","handleArrowClick","removeEventListener","LangSelect","button","key","toUpperCase","inputEnabler"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { TLangOption } from \"../@types/test\";\nimport LanguageBtn from \"./LanguageBtn\";\nimport compStyle from \"./styles/LangBtnController.module.scss\";\n\nconst LangBtnController = (props: {\n  /**\n   * @BtnArray array containng button names\n   */\n  BtnArray: Array<string>;\n  /**\n   * @active Determines which button will appear highlighted in the beginning.\n   */\n  active: string;\n  langSelector: (chooseLanguage: TLangOption[\"value\"]) => void;\n  inputEnabler: (bool: boolean) => void;\n}) => {\n  const [flatBtns, setFlatBtns] = useState<Array<boolean>>([]);\n  const [activeBtnPosition, setActiveBtnPosition] = useState<Number>();\n\n  console.log(props.active, \"Active from a button\");\n  const forceUpdate = React.useReducer(() => ({}), {})[1] as () => void;\n\n  // * Creates an array with values corresponding to parsed buttons activated value.\n  // * Happens on first render\n  if (flatBtns.length !== props.BtnArray.length) {\n    const tmp: boolean[] = props.BtnArray.map((btn: string) => {\n      if (btn === props.active) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n    setActiveBtnPosition(tmp.indexOf(true));\n    setFlatBtns(tmp);\n  }\n\n  const activeBtnPositionSetter = (id: number) => {\n    setFlatBtns(\n      flatBtns.map((btn, index) =>\n        index === id ? (btn = true) : (btn = false)\n      )\n    );\n    setActiveBtnPosition(id);\n    forceUpdate();\n  };\n\n  function activeBtnSwitcher() {\n    let tmp = flatBtns;\n    tmp.unshift(tmp[tmp.length - 1]);\n    tmp.pop();\n    setFlatBtns(tmp);\n    activeBtnPositionSetter(flatBtns.indexOf(true));\n    props.langSelector(\n      props.BtnArray[flatBtns.indexOf(true)] as TLangOption[\"value\"]\n    );\n    // forceUpdate();\n  }\n\n  // * Grabbing arrow in the modal which selects next element.\n  // * Assings a click listener to the grabbed element.\n  let arrowBtn: HTMLElement | null;\n  useEffect(() => {\n    arrowBtn = document.getElementById(\"arrowBtn\");\n    arrowBtn?.addEventListener(\"click\", handleArrowClick);\n    return () => arrowBtn?.removeEventListener(\"click\", handleArrowClick);\n  });\n\n  const handleArrowClick = (): void => {\n    activeBtnSwitcher();\n  };\n\n  return (\n    <div className={compStyle.LangSelect}>\n      {props.BtnArray.map((button: string, key: number) => (\n        <LanguageBtn\n          btnID={button}\n          btnText={button.toUpperCase()}\n          key={key}\n          langSelect={props.langSelector}\n          inputEnabler={props.inputEnabler}\n          setActiveBtn={activeBtnPositionSetter}\n          pressed={flatBtns[key]}\n          accessKey={key}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default LangBtnController;\n"]},"metadata":{},"sourceType":"module"}