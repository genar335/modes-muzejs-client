{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/PhotoManager.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useRef, useState } from \"react\";\nimport styles from \"../pages/styles/create_test.module.scss\";\nimport stylish from \"./styles/PhotoManager.module.scss\";\nimport uploadIcon from \"../GAssets/upload_data.svg\";\n\nvar PhotoManager = function PhotoManager(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  function readUploadedIMG(_x) {\n    return _readUploadedIMG.apply(this, arguments);\n  }\n\n  function _readUploadedIMG() {\n    _readUploadedIMG = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(inputFile) {\n      var tmpFileReader;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              tmpFileReader = new FileReader();\n              return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n                tmpFileReader.onerror = function () {\n                  tmpFileReader.abort();\n                  reject(new DOMException(\"Problem parsing input file.\"));\n                };\n\n                tmpFileReader.onload = function () {\n                  resolve(tmpFileReader.result);\n                };\n\n                tmpFileReader.readAsDataURL(inputFile);\n              }));\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _readUploadedIMG.apply(this, arguments);\n  }\n\n  var handleUpload = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var file, fileContents;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              file = event.target.files[0];\n              _context.prev = 1;\n              _context.next = 4;\n              return readUploadedIMG(file);\n\n            case 4:\n              fileContents = _context.sent;\n              console.log(fileContents);\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              console.warn(_context.t0.message);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n\n    return function handleUpload(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var _useState = useState(),\n      uploadedImg = _useState[0],\n      setUploadedImg = _useState[1];\n\n  var _useState2 = useState([]),\n      upIMGs = _useState2[0],\n      setUpIMGs = _useState2[1];\n\n  function handleFileInput(_x3) {\n    return _handleFileInput.apply(this, arguments);\n  }\n\n  function _handleFileInput() {\n    _handleFileInput = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n      var tmp, fileIndex, _fileInput$current$fi, fileContents;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              event.preventDefault();\n              tmp = [];\n\n              if (!(fileInput.current !== null && fileInput.current.files !== null)) {\n                _context3.next = 19;\n                break;\n              }\n\n              fileIndex = 0;\n\n            case 4:\n              if (!(fileIndex < ((_fileInput$current$fi = fileInput.current.files) === null || _fileInput$current$fi === void 0 ? void 0 : _fileInput$current$fi.length))) {\n                _context3.next = 18;\n                break;\n              }\n\n              _context3.prev = 5;\n              _context3.next = 8;\n              return readUploadedIMG(fileInput.current.files[fileIndex]);\n\n            case 8:\n              fileContents = _context3.sent;\n              tmp.push(fileContents); // setUploadedImg(fileContents);\n\n              _context3.next = 15;\n              break;\n\n            case 12:\n              _context3.prev = 12;\n              _context3.t0 = _context3[\"catch\"](5);\n              alert(_context3.t0);\n\n            case 15:\n              fileIndex++;\n              _context3.next = 4;\n              break;\n\n            case 18:\n              setUpIMGs(tmp);\n\n            case 19:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[5, 12]]);\n    }));\n    return _handleFileInput.apply(this, arguments);\n  }\n\n  var fileInput = useRef(null);\n  return __jsx(\"div\", {\n    className: styles.PhotoManager,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: stylish.headerIconContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Uploaded photos\"), __jsx(\"label\", {\n    htmlFor: \"photoUpload\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"photoUpload\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), __jsx(\"img\", {\n    src: uploadIcon,\n    alt: \"Upload\",\n    className: stylish.uploadIcon,\n    onClick: function onClick(e) {\n      return console.log(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }))), __jsx(\"div\", {\n    className: stylish.PhotosContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleFileInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Upload image\"), __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    accept: \"image/*\",\n    ref: fileInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Placeholder for image upload\"), upIMGs.map(function (image) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, __jsx(\"img\", {\n      src: image,\n      alt: \"Oops\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, \"image\"));\n  })))));\n};\n\n_s(PhotoManager, \"iEZx89oVDyrYcqObh+VEAX9hzig=\");\n\n_c = PhotoManager;\nexport default PhotoManager;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhotoManager\");","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/PhotoManager.tsx"],"names":["React","useRef","useState","styles","stylish","uploadIcon","PhotoManager","readUploadedIMG","inputFile","tmpFileReader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","result","readAsDataURL","handleUpload","event","file","target","files","fileContents","console","log","warn","message","uploadedImg","setUploadedImg","upIMGs","setUpIMGs","handleFileInput","preventDefault","tmp","fileInput","current","fileIndex","length","push","alert","headerIconContainer","e","PhotosContainer","map","image"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport styles from \"../pages/styles/create_test.module.scss\";\nimport stylish from \"./styles/PhotoManager.module.scss\";\nimport uploadIcon from \"../GAssets/upload_data.svg\";\n\nconst PhotoManager = ({}) => {\n  async function readUploadedIMG(inputFile) {\n    const tmpFileReader = new FileReader();\n\n    return new Promise((resolve, reject) => {\n      tmpFileReader.onerror = () => {\n        tmpFileReader.abort();\n        reject(new DOMException(\"Problem parsing input file.\"));\n      };\n\n      tmpFileReader.onload = () => {\n        resolve(tmpFileReader.result);\n      };\n      tmpFileReader.readAsDataURL(inputFile);\n    });\n  }\n\n  const handleUpload = async (event) => {\n    const file = event.target.files[0];\n\n    try {\n      const fileContents = await readUploadedIMG(file);\n      console.log(fileContents);\n    } catch (e) {\n      console.warn(e.message);\n    }\n  };\n\n  const [uploadedImg, setUploadedImg] = useState();\n  const [upIMGs, setUpIMGs] = useState<Array<any>>([]);\n  async function handleFileInput(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    let tmp = [];\n    if (fileInput.current !== null && fileInput.current.files !== null) {\n      for (\n        let fileIndex = 0;\n        fileIndex < fileInput.current.files?.length;\n        fileIndex++\n      ) {\n        try {\n          const fileContents = await readUploadedIMG(\n            fileInput.current.files[fileIndex]\n          );\n          tmp.push(fileContents);\n          // setUploadedImg(fileContents);\n        } catch (error) {\n          alert(error);\n        }\n      }\n      setUpIMGs(tmp);\n    }\n  }\n  const fileInput = useRef<HTMLInputElement>(null);\n\n  return (\n    <div className={styles.PhotoManager}>\n      <div className={stylish.headerIconContainer}>\n        <h3>Uploaded photos</h3>\n        <label htmlFor=\"photoUpload\">\n          <input type=\"file\" name=\"photoUpload\" />\n          <img\n            src={uploadIcon}\n            alt=\"Upload\"\n            className={stylish.uploadIcon}\n            onClick={(e) => console.log(e)}\n          />\n        </label>\n      </div>\n      <div className={stylish.PhotosContainer}>\n        <div>\n          <form onSubmit={handleFileInput}>\n            <label>Upload image</label>\n            <input type=\"file\" multiple accept=\"image/*\" ref={fileInput} />\n            <input type=\"submit\" value=\"Submit\" />\n            <p>Placeholder for image upload</p>\n            {upIMGs.map((image) => (\n              <div>\n                <img src={image} alt=\"Oops\" />\n                <p>image</p>\n              </div>\n            ))}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PhotoManager;\n"]},"metadata":{},"sourceType":"module"}