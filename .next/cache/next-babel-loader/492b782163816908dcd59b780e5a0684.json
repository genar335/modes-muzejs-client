{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Documents/GitHub/modes-muzejs-client/components/OptionBottom.tsx\";\nvar __jsx = React.createElement;\nimport React, { useRef } from \"react\";\nimport interact from 'interactjs';\nimport bottomFrame from \"../GAssets/tests/BottomFrame.svg\";\nimport styles from \"./styles/OptionBottom.module.scss\";\n\nconst OptionBottom = props => {\n  const draggable = useRef(null); // console.log(draggable.current.classList.value)\n\n  if (draggable.current) {\n    interact(draggable.current.classList.value).draggable({\n      onmove: function (event) {\n        console.log('qweqwe');\n        const target = event.target;\n        const dataX = target.getAttribute('data-x');\n        const dataY = target.getAttribute('data-y');\n        const initialX = parseFloat(dataX) || 0;\n        const initialY = parseFloat(dataY) || 0;\n        const deltaX = event.dx;\n        const deltaY = event.dy;\n        const newX = initialX + deltaX;\n        const newY = initialY + deltaY;\n        target.style.transform = `translate(${newX}px, ${newY}px)`;\n        target.setAttribute('data-x', newX);\n        target.setAttribute('data-y', newY);\n      }\n    });\n  }\n\n  return __jsx(\"div\", {\n    className: styles.optionContainer,\n    ref: draggable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: bottomFrame,\n    alt: \"bottom frame\",\n    id: styles.bottomFrame,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default OptionBottom;","map":{"version":3,"sources":["/Users/daniel/Documents/GitHub/modes-muzejs-client/components/OptionBottom.tsx"],"names":["React","useRef","interact","bottomFrame","styles","OptionBottom","props","draggable","current","classList","value","onmove","event","console","log","target","dataX","getAttribute","dataY","initialX","parseFloat","initialY","deltaX","dx","deltaY","dy","newX","newY","style","transform","setAttribute","optionContainer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAgB;AACjC,QAAMC,SAAS,GAAIN,MAAM,CAAC,IAAD,CAAzB,CADiC,CAGjC;;AACA,MAAIM,SAAS,CAACC,OAAd,EAAuB;AAGvBN,IAAAA,QAAQ,CAACK,SAAS,CAACC,OAAV,CAAkBC,SAAlB,CAA4BC,KAA7B,CAAR,CACKH,SADL,CACe;AACPI,MAAAA,MAAM,EAAE,UAASC,KAAT,EAAqB;AACzBC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,cAAMC,MAAM,GAAGH,KAAK,CAACG,MAArB;AAEA,cAAMC,KAAK,GAAGD,MAAM,CAACE,YAAP,CAAoB,QAApB,CAAd;AACA,cAAMC,KAAK,GAAGH,MAAM,CAACE,YAAP,CAAoB,QAApB,CAAd;AACA,cAAME,QAAQ,GAAGC,UAAU,CAACJ,KAAD,CAAV,IAAqB,CAAtC;AACA,cAAMK,QAAQ,GAAGD,UAAU,CAACF,KAAD,CAAV,IAAqB,CAAtC;AAEA,cAAMI,MAAM,GAAGV,KAAK,CAACW,EAArB;AACA,cAAMC,MAAM,GAAGZ,KAAK,CAACa,EAArB;AAEA,cAAMC,IAAI,GAAGP,QAAQ,GAAGG,MAAxB;AACA,cAAMK,IAAI,GAAGN,QAAQ,GAAGG,MAAxB;AAEAT,QAAAA,MAAM,CACDa,KADL,CAEKC,SAFL,GAEkB,aAAYH,IAAK,OAAMC,IAAK,KAF9C;AAIAZ,QAAAA,MAAM,CAACe,YAAP,CAAoB,QAApB,EAA8BJ,IAA9B;AACAX,QAAAA,MAAM,CAACe,YAAP,CAAoB,QAApB,EAA8BH,IAA9B;AACH;AAtBM,KADf;AAyBC;;AACD,SACI;AAAK,IAAA,SAAS,EAAEvB,MAAM,CAAC2B,eAAvB;AAAwC,IAAA,GAAG,EAAExB,SAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEJ,WAAV;AAAuB,IAAA,GAAG,EAAC,cAA3B;AAA0C,IAAA,EAAE,EAAEC,MAAM,CAACD,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAMH,CAvCD;;AAyCA,eAAeE,YAAf","sourcesContent":["import React, { useRef } from \"react\";\nimport interact from 'interactjs';\nimport bottomFrame from \"../GAssets/tests/BottomFrame.svg\"\nimport styles from \"./styles/OptionBottom.module.scss\"\n\nconst OptionBottom = (props: any) => {\n    const draggable =  useRef(null)\n\n    // console.log(draggable.current.classList.value)\n    if (draggable.current) {\n\n    \n    interact(draggable.current.classList.value)\n        .draggable({\n            onmove: function(event: any) {\n                console.log('qweqwe')\n                const target = event.target     \n\n                const dataX = target.getAttribute('data-x');\n                const dataY = target.getAttribute('data-y');\n                const initialX = parseFloat(dataX) || 0;\n                const initialY = parseFloat(dataY) || 0;\n\n                const deltaX = event.dx;\n                const deltaY = event.dy;\n\n                const newX = initialX + deltaX;\n                const newY = initialY + deltaY;\n\n                target\n                    .style\n                    .transform = `translate(${newX}px, ${newY}px)`;\n\n                target.setAttribute('data-x', newX);\n                target.setAttribute('data-y', newY);\n            }\n        })\n    }\n    return(\n        <div className={styles.optionContainer} ref={draggable} >\n            <img src={bottomFrame} alt=\"bottom frame\" id={styles.bottomFrame}></img>\n            {/*<p className={styles.text}>fashion</p>*/}\n        </div>\n    );\n}\n\nexport default OptionBottom"]},"metadata":{},"sourceType":"module"}