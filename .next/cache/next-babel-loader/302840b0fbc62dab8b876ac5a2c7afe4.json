{"ast":null,"code":"var _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/PhotoManager.tsx\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useRef, useState } from \"react\";\nimport stylish from \"./styles/PhotoManager.module.scss\";\nimport uploadIcon from \"../GAssets/upload_data.svg\";\nimport Carousel from \"react-multi-carousel\";\nimport { responsive } from \"./constants\";\nimport Axios from \"axios\";\n\nconst PhotoManager = props => {\n  async function readUploadedIMG(inputFile) {\n    const tmpFileReader = new FileReader();\n    return new Promise((resolve, reject) => {\n      tmpFileReader.onerror = () => {\n        tmpFileReader.abort();\n        reject(new DOMException(\"Problem parsing input file.\"));\n      };\n\n      tmpFileReader.onload = () => {\n        resolve(tmpFileReader.result);\n      };\n\n      tmpFileReader.readAsDataURL(inputFile);\n    });\n  }\n\n  const handleUpload = async event => {\n    const file = event.target.files[0];\n\n    try {\n      const fileContents = await readUploadedIMG(file);\n      console.log(fileContents);\n    } catch (e) {\n      console.warn(e.message);\n    }\n  };\n\n  const {\n    0: upIMGs,\n    1: setUpIMGs\n  } = useState([]);\n  const {\n    0: recievedIMGLocations,\n    1: setRecievedIMGLocation\n  } = useState([]);\n\n  async function handleFileInput(event) {\n    event.preventDefault();\n    let tmp = [];\n\n    if (fileInput.current !== null && fileInput.current.files !== null) {\n      for (let fileIndex = 0; fileIndex < ((_fileInput$current$fi = fileInput.current.files) === null || _fileInput$current$fi === void 0 ? void 0 : _fileInput$current$fi.length); fileIndex++) {\n        var _fileInput$current$fi;\n\n        try {\n          const fileContents = await readUploadedIMG(fileInput.current.files[fileIndex]);\n          tmp.push(fileContents); // setUploadedImg(fileContents);\n        } catch (error) {\n          alert(error);\n        }\n      }\n\n      setUpIMGs(tmp);\n    }\n\n    console.log(upIMGs);\n    Axios.post(\"http://localhost:4000/tests/testIMG\", upIMGs).then(function (response) {\n      console.log(response.data);\n      setRecievedIMGLocation(response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  const fileInput = useRef(null);\n\n  const CustomRightArrow = (_ref) => {\n    let {\n      onClick\n    } = _ref,\n        rest = _objectWithoutProperties(_ref, [\"onClick\"]);\n\n    const {\n      onMove,\n      carouselState: {\n        currentSlide,\n        deviceType\n      }\n    } = rest; // onMove means if dragging or swiping in progress.\n\n    return __jsx(\"button\", {\n      className: stylish.carRightArrow,\n      onClick: () => onClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, Arrow());\n  };\n\n  const CustomLeftArrow = (_ref2) => {\n    let {\n      onClick\n    } = _ref2,\n        rest = _objectWithoutProperties(_ref2, [\"onClick\"]);\n\n    const {\n      onMove,\n      carouselState: {\n        currentSlide,\n        deviceType\n      }\n    } = rest;\n    return __jsx(\"button\", {\n      onClick: () => onClick(),\n      className: stylish.carLeftArrow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, Arrow());\n  };\n\n  function renderSelectedImages(recievedIMGLocations) {\n    let renderedImagesArray = [];\n    console.log(renderedImagesArray.length);\n\n    if (recievedIMGLocations.length !== 0) {\n      for (let i = 0; i < recievedIMGLocations.length; i = +2) {\n        // console.log(renderedImagesArray[i]);\n        renderedImagesArray.push(__jsx(\"div\", {\n          className: stylish.imgContainer,\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 11\n          }\n        }, __jsx(\"img\", {\n          key: i,\n          className: stylish.tmpIMG,\n          src: recievedIMGLocations[i],\n          alt: \"Here be the image\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }\n        }), __jsx(\"img\", {\n          src: recievedIMGLocations[i],\n          alt: \"here be the second one\",\n          className: stylish.tmpIMG,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }\n        })));\n      }\n\n      console.log(renderedImagesArray);\n      return renderedImagesArray.map(el => el);\n    } else {\n      return undefined;\n    } // return recievedIMGLocations.map((image, index) => (\n    //   <div\n    //     className={stylish.imgContainer}\n    //     id={`imageDiv_${index}`}\n    //     key={index}\n    //   >\n    //     <img\n    //       key={index}\n    //       className={stylish.tmpIMG}\n    //       src={recievedIMGLocations[index]}\n    //       alt=\"Oops\"\n    //     />\n    //   </div>\n    // ));\n\n  }\n\n  return __jsx(\"div\", {\n    className: `${stylish.PhotosContainer} ${!props.displayed ? undefined : stylish.Hidden}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: stylish.Contents,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: stylish.headerIconContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 11\n    }\n  }, \"Uploaded photos\"), __jsx(\"label\", {\n    htmlFor: \"photoUpload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"photoUpload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }), __jsx(\"img\", {\n    src: uploadIcon,\n    alt: \"Upload\",\n    className: stylish.uploadIcon,\n    onClick: e => console.log(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }))), __jsx(\"div\", {\n    className: stylish.IMGPreview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleFileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, \"Upload image\"), __jsx(\"input\", {\n    name: \"testio\",\n    type: \"file\",\n    multiple: true,\n    accept: \"image/*\",\n    ref: fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, \"Placeholder for image upload\"), __jsx(Carousel, {\n    ssr: true,\n    containerClass: stylish.Carousel,\n    itemClass: stylish.Item,\n    responsive: responsive,\n    showDots: true,\n    customRightArrow: __jsx(CustomRightArrow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 33\n      }\n    }),\n    customLeftArrow: __jsx(CustomLeftArrow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 32\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }, renderSelectedImages(recievedIMGLocations))))));\n};\n\nexport default PhotoManager;\n\nconst Arrow = () => __jsx(\"svg\", {\n  width: \"15\",\n  height: \"26\",\n  viewBox: \"0 0 15 26\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 3\n  }\n}, __jsx(\"path\", {\n  d: \"M2 24L13 13L2 2\",\n  stroke: \"#2F4858\",\n  \"stroke-width\": \"3\",\n  \"stroke-linecap\": \"round\",\n  \"stroke-linejoin\": \"round\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }\n}));","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/PhotoManager.tsx"],"names":["React","useRef","useState","stylish","uploadIcon","Carousel","responsive","Axios","PhotoManager","props","readUploadedIMG","inputFile","tmpFileReader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","result","readAsDataURL","handleUpload","event","file","target","files","fileContents","console","log","e","warn","message","upIMGs","setUpIMGs","recievedIMGLocations","setRecievedIMGLocation","handleFileInput","preventDefault","tmp","fileInput","current","fileIndex","length","push","error","alert","post","then","response","data","catch","CustomRightArrow","onClick","rest","onMove","carouselState","currentSlide","deviceType","carRightArrow","Arrow","CustomLeftArrow","carLeftArrow","renderSelectedImages","renderedImagesArray","i","imgContainer","tmpIMG","map","el","undefined","PhotosContainer","displayed","Hidden","Contents","headerIconContainer","IMGPreview","Item"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport styles from \"../pages/styles/create_test.module.scss\";\nimport stylish from \"./styles/PhotoManager.module.scss\";\nimport uploadIcon from \"../GAssets/upload_data.svg\";\nimport Carousel from \"react-multi-carousel\";\nimport { responsive } from \"./constants\";\nimport Axios from \"axios\";\nimport { error } from \"console\";\n\nconst PhotoManager = (props: { displayed: boolean }) => {\n  async function readUploadedIMG(inputFile: Blob) {\n    const tmpFileReader = new FileReader();\n\n    return new Promise((resolve, reject) => {\n      tmpFileReader.onerror = () => {\n        tmpFileReader.abort();\n        reject(new DOMException(\"Problem parsing input file.\"));\n      };\n\n      tmpFileReader.onload = () => {\n        resolve(tmpFileReader.result);\n      };\n      tmpFileReader.readAsDataURL(inputFile);\n    });\n  }\n\n  const handleUpload = async (event: { target: { files: any[] } }) => {\n    const file = event.target.files[0];\n    try {\n      const fileContents = await readUploadedIMG(file);\n      console.log(fileContents);\n    } catch (e) {\n      console.warn(e.message);\n    }\n  };\n\n  const [upIMGs, setUpIMGs] = useState<Array<any>>([]);\n\n  const [recievedIMGLocations, setRecievedIMGLocation] = useState<\n    Array<string>\n  >([]);\n\n  async function handleFileInput(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    let tmp = [];\n    if (fileInput.current !== null && fileInput.current.files !== null) {\n      for (\n        let fileIndex = 0;\n        fileIndex < fileInput.current.files?.length;\n        fileIndex++\n      ) {\n        try {\n          const fileContents = await readUploadedIMG(\n            fileInput.current.files[fileIndex]\n          );\n          tmp.push(fileContents);\n          // setUploadedImg(fileContents);\n        } catch (error) {\n          alert(error);\n        }\n      }\n      setUpIMGs(tmp);\n    }\n    console.log(upIMGs);\n    Axios.post(\"http://localhost:4000/tests/testIMG\", upIMGs)\n      .then(function (response) {\n        console.log(response.data);\n        setRecievedIMGLocation(response.data);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }\n  const fileInput = useRef<HTMLInputElement>(null);\n\n  const CustomRightArrow = ({ onClick, ...rest }) => {\n    const {\n      onMove,\n      carouselState: { currentSlide, deviceType },\n    } = rest;\n    // onMove means if dragging or swiping in progress.\n    return (\n      <button className={stylish.carRightArrow} onClick={() => onClick()}>\n        {Arrow()}\n      </button>\n    );\n  };\n\n  const CustomLeftArrow = ({ onClick, ...rest }) => {\n    const {\n      onMove,\n      carouselState: { currentSlide, deviceType },\n    } = rest;\n    return (\n      <button onClick={() => onClick()} className={stylish.carLeftArrow}>\n        {Arrow()}\n      </button>\n    );\n  };\n\n  function renderSelectedImages(recievedIMGLocations: string[]): any {\n    let renderedImagesArray = [];\n    console.log(renderedImagesArray.length);\n    if (recievedIMGLocations.length !== 0) {\n      for (let i = 0; i < recievedIMGLocations.length; i = +2) {\n        // console.log(renderedImagesArray[i]);\n        renderedImagesArray.push(\n          <div className={stylish.imgContainer} key={i}>\n            <img\n              key={i}\n              className={stylish.tmpIMG}\n              src={recievedIMGLocations[i]}\n              alt=\"Here be the image\"\n            />\n            <img\n              src={recievedIMGLocations[i]}\n              alt=\"here be the second one\"\n              className={stylish.tmpIMG}\n            />\n          </div>\n        );\n      }\n      console.log(renderedImagesArray);\n      return renderedImagesArray.map((el) => el);\n    } else {\n      return undefined;\n    }\n    // return recievedIMGLocations.map((image, index) => (\n    //   <div\n    //     className={stylish.imgContainer}\n    //     id={`imageDiv_${index}`}\n    //     key={index}\n    //   >\n    //     <img\n    //       key={index}\n    //       className={stylish.tmpIMG}\n    //       src={recievedIMGLocations[index]}\n    //       alt=\"Oops\"\n    //     />\n    //   </div>\n    // ));\n  }\n\n  return (\n    <div\n      className={`${stylish.PhotosContainer} ${\n        !props.displayed ? undefined : stylish.Hidden\n      }`}\n    >\n      <div className={stylish.Contents}>\n        <div className={stylish.headerIconContainer}>\n          <h3>Uploaded photos</h3>\n          <label htmlFor=\"photoUpload\">\n            <input type=\"file\" name=\"photoUpload\" />\n            <img\n              src={uploadIcon}\n              alt=\"Upload\"\n              className={stylish.uploadIcon}\n              onClick={(e) => console.log(e)}\n            />\n          </label>\n        </div>\n        <div className={stylish.IMGPreview}>\n          <form onSubmit={handleFileInput}>\n            <label>Upload image</label>\n            <input\n              name=\"testio\"\n              type=\"file\"\n              multiple\n              accept=\"image/*\"\n              ref={fileInput}\n            />\n            <input type=\"submit\" value=\"Submit\" />\n            <p>Placeholder for image upload</p>\n            <Carousel\n              ssr\n              containerClass={stylish.Carousel}\n              itemClass={stylish.Item}\n              responsive={responsive}\n              showDots\n              customRightArrow={<CustomRightArrow />}\n              customLeftArrow={<CustomLeftArrow />}\n            >\n              {renderSelectedImages(recievedIMGLocations)}\n            </Carousel>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PhotoManager;\nconst Arrow = () => (\n  <svg\n    width=\"15\"\n    height=\"26\"\n    viewBox=\"0 0 15 26\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M2 24L13 13L2 2\"\n      stroke=\"#2F4858\"\n      stroke-width=\"3\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n);\n"]},"metadata":{},"sourceType":"module"}