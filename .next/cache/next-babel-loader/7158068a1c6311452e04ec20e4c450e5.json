{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/LangBtnController.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport LanguageBtn from \"./LanguageBtn\";\nimport compStyle from \"./styles/LangBtnController.module.scss\";\n\nvar LangBtnController = function LangBtnController(props) {\n  _s();\n\n  var _useState = useState(props.active),\n      activeBtn = _useState[0],\n      setActiveBtn = _useState[1];\n  /**\n   * \n   * @param id \n   */\n\n\n  var activeBtnSetter = function activeBtnSetter(id) {\n    return setActiveBtn(id);\n  };\n\n  var Btns = props.BtnArray.map(function (button, key) {\n    return [__jsx(LanguageBtn, {\n      btnID: button,\n      btnText: button.toUpperCase(),\n      handleBtnClick: props.clickHandler,\n      inputEnabler: props.setIsNameEntryEnabled,\n      pressed: button === activeBtn ? true : false,\n      key: key,\n      langSelect: props.langSelector,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }), button === activeBtn ? true : false];\n  });\n\n  var ChangeBtnState = function ChangeBtnState(btnID) {\n    Btns.forEach(function (element) {\n      console.log(element[1]);\n      if (element[1]) props.inputEnabler(true);\n    });\n  };\n\n  console.log(Btns);\n  ChangeBtnState(Btns);\n  return __jsx(\"div\", {\n    className: compStyle.LangSelect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, Btns.map(function (ele) {\n    return ele;\n  }));\n};\n\n_s(LangBtnController, \"KbOnGgGu1+rZ7GQti2ghzWXeE7Y=\");\n\n_c = LangBtnController;\nexport default LangBtnController;\n\nvar _c;\n\n$RefreshReg$(_c, \"LangBtnController\");","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/LangBtnController.tsx"],"names":["React","useState","LanguageBtn","compStyle","LangBtnController","props","active","activeBtn","setActiveBtn","activeBtnSetter","id","Btns","BtnArray","map","button","key","toUpperCase","clickHandler","setIsNameEntryEnabled","langSelector","ChangeBtnState","btnID","forEach","element","console","log","inputEnabler","LangSelect","ele"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,wCAAtB;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,KAAD,EAAW;AAAA;;AAAA,kBAKDJ,QAAQ,CAASI,KAAK,CAACC,MAAf,CALP;AAAA,MAK5BC,SAL4B;AAAA,MAKjBC,YALiB;AAMnC;;;;;;AAIA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,EAAD;AAAA,WAAQF,YAAY,CAACE,EAAD,CAApB;AAAA,GAAxB;;AAEA,MAAMC,IAAsC,GAAGN,KAAK,CAACO,QAAN,CAAeC,GAAf,CAC7C,UAACC,MAAD,EAASC,GAAT,EAAiB;AACf,WAAO,CACL,MAAC,WAAD;AACE,MAAA,KAAK,EAAED,MADT;AAEE,MAAA,OAAO,EAAEA,MAAM,CAACE,WAAP,EAFX;AAGE,MAAA,cAAc,EAAEX,KAAK,CAACY,YAHxB;AAIE,MAAA,YAAY,EAAEZ,KAAK,CAACa,qBAJtB;AAKE,MAAA,OAAO,EAAEJ,MAAM,KAAKP,SAAX,GAAuB,IAAvB,GAA8B,KALzC;AAME,MAAA,GAAG,EAAEQ,GANP;AAOE,MAAA,UAAU,EAAEV,KAAK,CAACc,YAPpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,EAULL,MAAM,KAAKP,SAAX,GAAuB,IAAvB,GAA8B,KAVzB,CAAP;AAYD,GAd4C,CAA/C;;AAgBA,MAAMa,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAChCV,IAAAA,IAAI,CAACW,OAAL,CAAa,UAACC,OAAD,EAAkB;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAAC,CAAD,CAAnB;AACA,UAAIA,OAAO,CAAC,CAAD,CAAX,EAAgBlB,KAAK,CAACqB,YAAN,CAAmB,IAAnB;AACjB,KAHD;AAID,GALD;;AAMAF,EAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ;AACAS,EAAAA,cAAc,CAACT,IAAD,CAAd;AACA,SACE;AAAK,IAAA,SAAS,EAAER,SAAS,CAACwB,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,IAAI,CAACE,GAAL,CAAS,UAACe,GAAD,EAAc;AACtB,WAAOA,GAAP;AACD,GAFA,CADH,CADF;AAOD,CA3CD;;GAAMxB,iB;;KAAAA,iB;AA6CN,eAAeA,iBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport LanguageBtn from \"./LanguageBtn\";\nimport compStyle from \"./styles/LangBtnController.module.scss\";\n\nconst LangBtnController = (props) => {\n  type TBtnArrayWithPressedState = {\n    btns: [JSX.Element, boolean];\n  };\n\n  const [activeBtn, setActiveBtn] = useState<string>(props.active)\n  /**\n   * \n   * @param id \n   */\n  const activeBtnSetter = (id) => setActiveBtn(id)\n\n  const Btns: Array<TBtnArrayWithPressedState> = props.BtnArray.map(\n    (button, key) => {\n      return [\n        <LanguageBtn\n          btnID={button}\n          btnText={button.toUpperCase()}\n          handleBtnClick={props.clickHandler}\n          inputEnabler={props.setIsNameEntryEnabled}\n          pressed={button === activeBtn ? true : false}\n          key={key}\n          langSelect={props.langSelector}\n        />,\n        button === activeBtn ? true : false,\n      ];\n    }\n  );\n  const ChangeBtnState = (btnID) => {\n    Btns.forEach((element: any) => {\n      console.log(element[1]);\n      if (element[1]) props.inputEnabler(true);\n    });\n  };\n  console.log(Btns);\n  ChangeBtnState(Btns);\n  return (\n    <div className={compStyle.LangSelect}>\n      {Btns.map((ele: any) => {\n        return ele;\n      })}\n    </div>\n  );\n};\n\nexport default LangBtnController;\n"]},"metadata":{},"sourceType":"module"}