{"ast":null,"code":"var _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/TestCard.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport editIcon from \"../GAssets/create_icon_big.png\";\nimport styles from \"./styles/TestCard.module.scss\";\nimport Switch from \"react-switch\";\nimport Axios from \"axios\";\nimport { devURL } from \"./constants\";\nimport { useRouter } from \"next/router\";\nimport { motion, useAnimation } from \"framer-motion\";\n\nconst klil = require('../OtherAssets/klik.mp3');\n\nimport useSound from 'use-sound';\n\nconst TestCard = props => {\n  const CardStyle = {\n    background: `rgb(${props.colour})`\n  };\n  const [playClick] = useSound();\n  const router = useRouter();\n\n  const forwardToTestEdit = testID => {\n    router.push(`/TMS/create_test?testToEdit=${testID}`);\n  }; // console.log(props, \"card props\");\n\n\n  const {\n    0: isTestActive,\n    1: setIsTestActive\n  } = useState(props.active);\n  useEffect(() => {\n    setIsTestActive(props.active);\n  }, []); // const [switchIsActive, setSwichIsActive] = useState<boolean>(props.active);\n\n  const changeTestState = async (testID, isActive) => {\n    let changedTest;\n\n    try {\n      const responseFromServer = await Axios.post(`${devURL}tests/toggleTestActiveState`, {\n        testID,\n        isActive\n      });\n      changedTest = responseFromServer.data; // setSwichIsActive(!switchIsActive);\n      // setIsTestActive(changedTest.active);\n\n      console.log(changedTest, \"recieved a response\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleActiveChange = async () => {\n    // setSwichIsActive(!switchIsActive);\n    await changeTestState(props._id, !isTestActive);\n    console.log(\"Calling all tests\");\n    setTimeout(() => {\n      props.updateTests(props._id);\n    }, 10);\n  };\n\n  const handleEditIconClick = async () => {\n    alert(\"Sending you to edit a test\");\n    forwardToTestEdit(props._id);\n  };\n\n  const handleDeleteIconClick = async () => {\n    //* animating opacity from 1 to 0 in 0.3 seconds\n    await cardControls.start({\n      opacity: 0,\n      transition: {\n        duration: 0.3\n      }\n    });\n    Axios.get(`${devURL}tests/deleteTestByID?testToDelete=${props._id}`).catch(error => alert(error)).then(response => {\n      console.log(response);\n      props.fetchAllTests();\n    });\n  };\n\n  const cardControls = useAnimation();\n  return __jsx(\"div\", {\n    className: styles.TestCardBackground,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, __jsx(motion.div, {\n    //* Animation\n    animate: cardControls //*\n    ,\n    key: props._id,\n    id: props._id,\n    className: styles.TestCard,\n    style: CardStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, __jsx(Switch, {\n    onChange: handleActiveChange,\n    checked: isTestActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), __jsx(\"img\", {\n    onClick: handleEditIconClick,\n    src: editIcon,\n    alt: \"Edit icon\",\n    className: styles.EditIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }), __jsx(\"h3\", {\n    onClick: handleActiveChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"Test title in ru: \", props.nameInRu), __jsx(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"Test id: \", props._id), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, \"Main question of test\"), __jsx(\"h1\", {\n    onClick: handleDeleteIconClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, \"\\u2716\\uFE0E\")));\n};\n\nexport default TestCard;","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/TestCard.tsx"],"names":["React","useEffect","useState","editIcon","styles","Switch","Axios","devURL","useRouter","motion","useAnimation","klil","require","useSound","TestCard","props","CardStyle","background","colour","playClick","router","forwardToTestEdit","testID","push","isTestActive","setIsTestActive","active","changeTestState","isActive","changedTest","responseFromServer","post","data","console","log","error","handleActiveChange","_id","setTimeout","updateTests","handleEditIconClick","alert","handleDeleteIconClick","cardControls","start","opacity","transition","duration","get","catch","then","response","fetchAllTests","TestCardBackground","EditIcon","nameInRu"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport editIcon from \"../GAssets/create_icon_big.png\";\nimport styles from \"./styles/TestCard.module.scss\";\nimport Switch from \"react-switch\";\nimport Axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { devURL } from \"./constants\";\nimport { ITest } from \"../@types/test\";\nimport { NextRouter, useRouter } from \"next/router\";\nimport { motion, useAnimation } from \"framer-motion\";\nconst klil = require('../OtherAssets/klik.mp3')\nimport useSound from 'use-sound';\n\nconst TestCard = (props: {\n  iterator: number;\n  colour: string;\n  _id: string;\n  nameInRu: string;\n  active: boolean;\n  // parentComponentTestFetcher: () => Promise<void>;\n  // mainTestFetcher: () => Promise<void>;\n  updateTests: (testID: string) => void;\n  fetchAllTests: () => Promise<void>;\n}) => {\n  const CardStyle: Object = {\n    background: `rgb(${props.colour})`,\n  };\n\n  const [playClick] = useSound()\n  const router: NextRouter = useRouter();\n  const forwardToTestEdit = (testID: string) => {\n    router.push(`/TMS/create_test?testToEdit=${testID}`);\n  };\n\n  // console.log(props, \"card props\");\n  const [isTestActive, setIsTestActive] = useState<boolean>(props.active);\n  useEffect(() => {\n    setIsTestActive(props.active);\n  }, []);\n\n  // const [switchIsActive, setSwichIsActive] = useState<boolean>(props.active);\n\n  const changeTestState = async (testID: string, isActive: boolean) => {\n    let changedTest: ITest;\n    try {\n      const responseFromServer = await Axios.post(\n        `${devURL}tests/toggleTestActiveState`,\n        {\n          testID,\n          isActive,\n        }\n      );\n      changedTest = responseFromServer.data;\n      // setSwichIsActive(!switchIsActive);\n      // setIsTestActive(changedTest.active);\n      console.log(changedTest, \"recieved a response\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleActiveChange = async () => {\n    // setSwichIsActive(!switchIsActive);\n    await changeTestState(props._id, !isTestActive);\n    console.log(\"Calling all tests\");\n    setTimeout(() => {\n      props.updateTests(props._id);\n    }, 10);\n  };\n\n  const handleEditIconClick = async () => {\n    alert(\"Sending you to edit a test\");\n\n    forwardToTestEdit(props._id);\n  };\n\n  const handleDeleteIconClick = async () => {\n    //* animating opacity from 1 to 0 in 0.3 seconds\n    await cardControls.start({\n      opacity: 0,\n      transition: { duration: 0.3 },\n    });\n    Axios.get(`${devURL}tests/deleteTestByID?testToDelete=${props._id}`)\n      .catch((error: AxiosError) => alert(error))\n      .then((response) => {\n        console.log(response);\n        props.fetchAllTests();\n      });\n  };\n\n  const cardControls = useAnimation();\n\n  return (\n    <div className={styles.TestCardBackground}>\n      <motion.div\n        //* Animation\n        animate={cardControls}\n        //*\n        key={props._id}\n        id={props._id}\n        className={styles.TestCard}\n        style={CardStyle}\n      >\n        <Switch onChange={handleActiveChange} checked={isTestActive} />\n        {/* \n      //! Need to figure out how to time the switch\n    */}\n        <img\n          onClick={handleEditIconClick}\n          src={editIcon}\n          alt=\"Edit icon\"\n          className={styles.EditIcon}\n        />\n        <h3 onClick={handleActiveChange}>Test title in ru: {props.nameInRu}</h3>\n        <h4>Test id: {props._id}</h4>\n        <span>Main question of test</span>\n        <h1 onClick={handleDeleteIconClick}>✖︎</h1>\n      </motion.div>\n    </div>\n  );\n};\n\nexport default TestCard;\n"]},"metadata":{},"sourceType":"module"}