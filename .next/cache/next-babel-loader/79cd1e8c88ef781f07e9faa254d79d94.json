{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/ActiveTests.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Carousel from \"react-multi-carousel\";\nimport styles from \"./styles/ActiveTests.module.scss\";\nimport { useRouter } from \"next/router\";\n\nvar ActiveTests = /*#__PURE__*/function () {\n  var _s = $RefreshSig$();\n\n  var _ref = _asyncToGenerator(_s( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n    var responsive, router, handleAddTestClick;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _s();\n\n            _context.t0 = console;\n            _context.next = 4;\n            return props.getActiveTests;\n\n          case 4:\n            _context.t1 = _context.sent;\n\n            _context.t0.log.call(_context.t0, _context.t1);\n\n            responsive = {\n              superLargeDesktop: {\n                // the naming can be any, depends on you.\n                breakpoint: {\n                  max: 4000,\n                  min: 3000\n                },\n                items: 5\n              },\n              desktop: {\n                breakpoint: {\n                  max: 3000,\n                  min: 1024\n                },\n                items: 4\n              },\n              tablet: {\n                breakpoint: {\n                  max: 1024,\n                  min: 464\n                },\n                items: 2\n              },\n              mobile: {\n                breakpoint: {\n                  max: 464,\n                  min: 0\n                },\n                items: 1\n              }\n            };\n            router = useRouter();\n\n            handleAddTestClick = function handleAddTestClick() {\n              alert(\"Test addition should be happening right about now.\");\n              router.push(\"/TMS/create_test\");\n            };\n\n            return _context.abrupt(\"return\", __jsx(\"div\", {\n              className: styles.ActiveTestsContainer,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 5\n              }\n            }, __jsx(\"h1\", {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 7\n              }\n            }, \"Active tests\"), __jsx(Carousel, {\n              responsive: responsive,\n              ssr: true,\n              className: styles.Carousel,\n              showDots: true,\n              dotListClass: styles.customDotListStyle,\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 7\n              }\n            }, addATest(handleAddTestClick))));\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }), \"hiS8qxSQ4/p4gtIvOT37RqZ02j0=\", false, function () {\n    return [useRouter];\n  }));\n\n  return function ActiveTests(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\n_c = ActiveTests;\nexport default ActiveTests;\n\nfunction addATest(handleAddTestClick) {\n  return __jsx(\"div\", {\n    onClick: handleAddTestClick,\n    id: \"AddTest\",\n    className: styles.AddTestCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, \"+\"));\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ActiveTests\");","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/ActiveTests.tsx"],"names":["React","Carousel","styles","useRouter","ActiveTests","props","console","getActiveTests","log","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","router","handleAddTestClick","alert","push","ActiveTestsContainer","customDotListStyle","addATest","AddTestCard"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,OAAOC,MAAP,MAAmB,kCAAnB;AAEA,SAAqBC,SAArB,QAAsC,aAAtC;;AAIA,IAAMC,WAAW;AAAA;;AAAA,yEAAG,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,0BAGlBC,OAHkB;AAAA;AAAA,mBAGAD,KAAK,CAACE,cAHN;;AAAA;AAAA;;AAAA,wBAGVC,GAHU;;AAKZC,YAAAA,UALY,GAKC;AACjBC,cAAAA,iBAAiB,EAAE;AACjB;AACAC,gBAAAA,UAAU,EAAE;AAAEC,kBAAAA,GAAG,EAAE,IAAP;AAAaC,kBAAAA,GAAG,EAAE;AAAlB,iBAFK;AAGjBC,gBAAAA,KAAK,EAAE;AAHU,eADF;AAMjBC,cAAAA,OAAO,EAAE;AACPJ,gBAAAA,UAAU,EAAE;AAAEC,kBAAAA,GAAG,EAAE,IAAP;AAAaC,kBAAAA,GAAG,EAAE;AAAlB,iBADL;AAEPC,gBAAAA,KAAK,EAAE;AAFA,eANQ;AAUjBE,cAAAA,MAAM,EAAE;AACNL,gBAAAA,UAAU,EAAE;AAAEC,kBAAAA,GAAG,EAAE,IAAP;AAAaC,kBAAAA,GAAG,EAAE;AAAlB,iBADN;AAENC,gBAAAA,KAAK,EAAE;AAFD,eAVS;AAcjBG,cAAAA,MAAM,EAAE;AACNN,gBAAAA,UAAU,EAAE;AAAEC,kBAAAA,GAAG,EAAE,GAAP;AAAYC,kBAAAA,GAAG,EAAE;AAAjB,iBADN;AAENC,gBAAAA,KAAK,EAAE;AAFD;AAdS,aALD;AAyBZI,YAAAA,MAzBY,GAyBSf,SAAS,EAzBlB;;AA2BZgB,YAAAA,kBA3BY,GA2BS,SAArBA,kBAAqB,GAAM;AAC/BC,cAAAA,KAAK,CAAC,oDAAD,CAAL;AACAF,cAAAA,MAAM,CAACG,IAAP;AACD,aA9BiB;;AAAA,6CAiChB;AAAK,cAAA,SAAS,EAAEnB,MAAM,CAACoB,oBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE,MAAC,QAAD;AACE,cAAA,UAAU,EAAEb,UADd;AAEE,cAAA,GAAG,EAAE,IAFP;AAGE,cAAA,SAAS,EAAEP,MAAM,CAACD,QAHpB;AAIE,cAAA,QAAQ,EAAE,IAJZ;AAKE,cAAA,YAAY,EAAEC,MAAM,CAACqB,kBALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAOGC,QAAQ,CAACL,kBAAD,CAPX,CAFF,CAjCgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;AAAA,YAyBYhB,SAzBZ;AAAA;;AAAA,kBAAXC,WAAW;AAAA;AAAA;AAAA,GAAjB;;KAAMA,W;AAgDN,eAAeA,WAAf;;AACA,SAASoB,QAAT,CAAkBL,kBAAlB,EAAkD;AAChD,SACE;AACE,IAAA,OAAO,EAAEA,kBADX;AAEE,IAAA,EAAE,EAAC,SAFL;AAGE,IAAA,SAAS,EAAEjB,MAAM,CAACuB,WAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SALF,CADF;AASD","sourcesContent":["import React, { useEffect } from \"react\";\nimport Carousel from \"react-multi-carousel\";\nimport TestCard from \"./TestCard\";\nimport styles from \"./styles/ActiveTests.module.scss\";\nimport { brown } from \"./constants\";\nimport { NextRouter, useRouter } from \"next/router\";\nimport { NextApiHandler } from \"next\";\nimport { ITest } from \"../@types/test\";\n\nconst ActiveTests = async (props: {\n  getActiveTests: (active: boolean) => Promise<any>;\n}) => {\n  console.log(await props.getActiveTests);\n\n  const responsive = {\n    superLargeDesktop: {\n      // the naming can be any, depends on you.\n      breakpoint: { max: 4000, min: 3000 },\n      items: 5,\n    },\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 4,\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 2,\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 1,\n    },\n  };\n\n  const router: NextRouter = useRouter();\n\n  const handleAddTestClick = () => {\n    alert(\"Test addition should be happening right about now.\");\n    router.push(`/TMS/create_test`);\n  };\n\n  return (\n    <div className={styles.ActiveTestsContainer}>\n      <h1>Active tests</h1>\n      <Carousel\n        responsive={responsive}\n        ssr={true}\n        className={styles.Carousel}\n        showDots={true}\n        dotListClass={styles.customDotListStyle}\n      >\n        {addATest(handleAddTestClick)}\n      </Carousel>\n    </div>\n  );\n};\n\nexport default ActiveTests;\nfunction addATest(handleAddTestClick: () => void) {\n  return (\n    <div\n      onClick={handleAddTestClick}\n      id=\"AddTest\"\n      className={styles.AddTestCard}\n    >\n      <span>+</span>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}