{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/QACard.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from \"react\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\nimport addCompStyles from \"./styles/TestNamer.module.scss\";\nimport { closeBtn, SaveBtn } from \"./TestNamer\";\nimport { URLCheckForLocalHost } from \"./constants\";\n\nvar QACard = function QACard(props) {\n  _s();\n\n  var charLimit = 90;\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1]; // console.log(props.cardContents);\n  // console.log(\"Test for page contents\", props.pageContents);\n\n\n  var textPreviewer = function textPreviewer(text) {\n    // console.log(\"Hello from text preview\");\n    if (text.match(URLCheckForLocalHost) !== null) {\n      console.log(\"Hello there from URL checker\");\n      return \"There was an image before\";\n    }\n\n    if (text.length < 1) return __jsx(\"div\", {\n      className: compStyles.emptyText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 33\n      }\n    }, \"T\");\n\n    if (text.length > charLimit) {\n      return text.slice(0, 65) + \"...\";\n    } else {\n      return text;\n    }\n  };\n\n  var QACardRefIMG = useRef(null); // useEffect(() => {\n  //   console.log(\"Yayyy\");\n  // }, [QACardRef.current]);\n\n  var handleCardReference = function handleCardReference() {\n    props.setCurrentCard(QACardRefIMG); // props.togglePhotoManager(false, `${props.cardType}_${props.iterator}`);\n  }; //! Image upload portion\n  // const [recievedIMGLocations, setRecievedIMGLocation] = useState<\n  //   Array<string>\n  // >([]);\n\n\n  var _useState2 = useState(),\n      readIMG = _useState2[0],\n      setReadIMG = _useState2[1];\n\n  var fileInputRef = useRef(null);\n\n  var readAnImage = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(imageToBeRead) {\n      var tmpFileReader;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              tmpFileReader = new FileReader();\n              return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                tmpFileReader.onerror = function () {\n                  tmpFileReader.abort();\n                  reject(new DOMException(\"Problem occured when reading the file.\"));\n                };\n\n                tmpFileReader.onload = function () {\n                  resolve(tmpFileReader.result);\n                };\n\n                tmpFileReader.readAsDataURL(imageToBeRead);\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function readAnImage(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleFileinput = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n      var _fileInputRef$current;\n\n      var tmp, chosenFile, fileContents;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              tmp = [];\n              event.preventDefault();\n              console.log(fileInputRef.current.files[0]);\n\n              if (!(((_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.files) !== null)) {\n                _context2.next = 19;\n                break;\n              }\n\n              chosenFile = fileInputRef.current.files[0];\n\n              if (!fileInputRef.current) {\n                _context2.next = 17;\n                break;\n              }\n\n              _context2.prev = 6;\n              _context2.next = 9;\n              return readAnImage(chosenFile);\n\n            case 9:\n              fileContents = _context2.sent;\n              setReadIMG(fileContents); // console.log(fileContents);\n              // tmp.push(fileContents);\n\n              props.saveIMG(props.iterator, fileContents, props.cardType); // console.log(QACardRefIMG.current.src, \"OI\");\n\n              _context2.next = 17;\n              break;\n\n            case 14:\n              _context2.prev = 14;\n              _context2.t0 = _context2[\"catch\"](6);\n              alert(\"There was an error reading the file. Please try again, or choose a differenet file\");\n\n            case 17:\n              _context2.next = 20;\n              break;\n\n            case 19:\n              alert(\"No file has been chosen.\");\n\n            case 20:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[6, 14]]);\n    }));\n\n    return function handleFileinput(_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    var _fileInputRef$current2;\n\n    console.log(\"Input has \", (_fileInputRef$current2 = fileInputRef.current) === null || _fileInputRef$current2 === void 0 ? void 0 : _fileInputRef$current2.files);\n  }, [fileInputRef.current]);\n  return __jsx(\"div\", {\n    className: \"\".concat(compStyles[props.cardType]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    // ref={QACardRef}\n    id: \"\".concat(props.cardType, \"_\").concat(props.iterator),\n    className: \"\".concat(addCompStyles.ModalContainerBG, \" \").concat(!isOpen ? addCompStyles.Hidden : null),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: addCompStyles.ModalContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, closeBtn(setIsOpen), __jsx(\"div\", {\n    className: addCompStyles.Modal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: addCompStyles.NameForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, props.cardContents === \"text\" && props.q_a_TextEntry(props.cardType, props.iterator)), __jsx(\"button\", {\n    onClick: function onClick(e) {\n      return setIsOpen(!isOpen);\n    },\n    className: addCompStyles.SaveBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, SaveBtn())))), __jsx(\"div\", {\n    className: compStyles.QADescription,\n    onClick: function onClick(e) {\n      props.cardContents === \"img\" ? handleCardReference() : setIsOpen(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, props.cardContents === \"text\" ? __jsx(\"p\", {\n    className: compStyles.textInACard,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 11\n    }\n  }, textPreviewer(props.qna[props.cardType])) : __jsx(\"form\", {\n    onSubmit: handleFileinput,\n    className: compStyles.IMGForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    id: \"\".concat(props.cardType, \"_\").concat(props.iterator, \"_page-\").concat(props.pageNumber) // onChange={(e) => console.log(\"YAyyy\")}\n    ,\n    className: compStyles.SelectedIMGPreview,\n    src: props.pageContents // src={props.pageContents.match(URLCheck) ? props.pageContents : \"\"}\n    ,\n    alt: \"No image\",\n    ref: QACardRefIMG,\n    onClick: function onClick(e) {\n      return fileInputRef.current.click();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    className: compStyles.FileChooser,\n    type: \"file\",\n    accept: \"image/*\",\n    ref: fileInputRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    className: compStyles.FileSubmiter,\n    type: \"submit\",\n    value: \"Upload the image\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }))));\n};\n\n_s(QACard, \"XX/Dmwq9Yd3JAqZbIN1DBfeWGJU=\");\n\n_c = QACard;\nexport default QACard;\n\nvar _c;\n\n$RefreshReg$(_c, \"QACard\");","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/QACard.tsx"],"names":["React","useEffect","useRef","useState","compStyles","addCompStyles","closeBtn","SaveBtn","URLCheckForLocalHost","QACard","props","charLimit","isOpen","setIsOpen","textPreviewer","text","match","console","log","length","emptyText","slice","QACardRefIMG","handleCardReference","setCurrentCard","readIMG","setReadIMG","fileInputRef","readAnImage","imageToBeRead","tmpFileReader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","result","readAsDataURL","handleFileinput","event","tmp","preventDefault","current","files","chosenFile","fileContents","saveIMG","iterator","cardType","alert","ModalContainerBG","Hidden","ModalContainer","Modal","NameForm","cardContents","q_a_TextEntry","e","QADescription","textInACard","qna","IMGForm","pageNumber","SelectedIMGPreview","pageContents","click","FileChooser","FileSubmiter"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { IQnA, TLangOption } from \"../@types/test\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\nimport addCompStyles from \"./styles/TestNamer.module.scss\";\nimport { closeBtn, CreateLangSwitchers, SaveBtn } from \"./TestNamer\";\nimport { URLCheck, URLCheckForLocalHost } from \"./constants\";\nimport { resolve } from \"path\";\nimport { sendTheDataToTheServer } from \"./PhotoManager\";\n\nconst QACard = (props: {\n  cardType: \"answer\" | \"question\";\n  cardContents: \"img\" | \"text\";\n  // saveData: (data) => void;\n  iterator: number;\n  setSelectedLanguage: (chooseLanguage: TLangOption[\"value\"]) => void;\n  inputEnabler: () => void;\n  qna: IQnA;\n  testType: any;\n  q_a_TextEntry: (type: \"answer\" | \"question\", id: number) => JSX.Element;\n  togglePhotoManager: (toggle: boolean, cardID: string) => void;\n  setCurrentCard: React.Dispatch<React.SetStateAction<undefined>>;\n  pageContents: string;\n  currentLang: TLangOption[\"value\"];\n  pageNumber: number;\n  saveIMG: (\n    qid: number,\n    data: string,\n    whatToSave: \"answer\" | \"question\"\n  ) => void;\n}) => {\n  const charLimit = 90;\n  const [isOpen, setIsOpen] = useState(false);\n  // console.log(props.cardContents);\n  // console.log(\"Test for page contents\", props.pageContents);\n\n  const textPreviewer = (text: string) => {\n    // console.log(\"Hello from text preview\");\n    if (text.match(URLCheckForLocalHost) !== null) {\n      console.log(\"Hello there from URL checker\");\n      return \"There was an image before\";\n    }\n    if (text.length < 1) return <div className={compStyles.emptyText}>T</div>;\n    if (text.length > charLimit) {\n      return text.slice(0, 65) + \"...\";\n    } else {\n      return text;\n    }\n  };\n\n  const QACardRefIMG = useRef(null);\n\n  // useEffect(() => {\n  //   console.log(\"Yayyy\");\n  // }, [QACardRef.current]);\n\n  const handleCardReference = () => {\n    props.setCurrentCard(QACardRefIMG);\n    // props.togglePhotoManager(false, `${props.cardType}_${props.iterator}`);\n  };\n\n  //! Image upload portion\n\n  // const [recievedIMGLocations, setRecievedIMGLocation] = useState<\n  //   Array<string>\n  // >([]);\n  const [readIMG, setReadIMG] = useState<string>();\n  const fileInputRef = useRef(null);\n\n  const readAnImage = async (imageToBeRead: Blob) => {\n    const tmpFileReader: FileReader = new FileReader();\n\n    return new Promise((resolve, reject) => {\n      tmpFileReader.onerror = () => {\n        tmpFileReader.abort();\n        reject(new DOMException(\"Problem occured when reading the file.\"));\n      };\n\n      tmpFileReader.onload = () => {\n        resolve(tmpFileReader.result);\n      };\n      tmpFileReader.readAsDataURL(imageToBeRead);\n    });\n  };\n\n  const handleFileinput = async (event: React.FormEvent<HTMLFormElement>) => {\n    let tmp = [];\n    event.preventDefault();\n    console.log(fileInputRef.current.files[0]);\n    if (fileInputRef.current?.files !== null) {\n      const chosenFile: File = fileInputRef!.current!.files[0];\n      if (fileInputRef.current) {\n        try {\n          const fileContents: string = (await readAnImage(\n            chosenFile\n          )) as string;\n          setReadIMG(fileContents);\n          // console.log(fileContents);\n          // tmp.push(fileContents);\n          props.saveIMG(props.iterator, fileContents, props.cardType);\n          // console.log(QACardRefIMG.current.src, \"OI\");\n        } catch (error) {\n          alert(\n            \"There was an error reading the file. Please try again, or choose a differenet file\"\n          );\n        }\n      }\n    } else {\n      alert(\"No file has been chosen.\");\n    }\n    // sendTheDataToTheServer(tmp, setRecievedIMGLocation);\n\n    // tmp.pop();\n    // setRecievedIMGLocation([]);\n  };\n\n  useEffect(() => {\n    console.log(\"Input has \", fileInputRef.current?.files);\n  }, [fileInputRef.current]);\n\n  return (\n    <div className={`${compStyles[props.cardType]}`}>\n      <div\n        // ref={QACardRef}\n        id={`${props.cardType}_${props.iterator}`}\n        className={`${addCompStyles.ModalContainerBG} ${\n          !isOpen ? addCompStyles.Hidden : null\n        }`}\n      >\n        <div className={addCompStyles.ModalContainer}>\n          {closeBtn(setIsOpen)}\n          <div className={addCompStyles.Modal}>\n            {/* {CreateLangSwitchers(\n              props.setSelectedLanguage,\n              props.inputEnabler,\n              props.currentLang\n            )} */}\n            <div className={addCompStyles.NameForm}>\n              {props.cardContents === \"text\" &&\n                props.q_a_TextEntry(props.cardType, props.iterator)}\n            </div>\n            <button\n              onClick={(e) => setIsOpen(!isOpen)}\n              className={addCompStyles.SaveBtn}\n            >\n              {SaveBtn()}\n            </button>\n          </div>\n        </div>\n      </div>\n      <div\n        className={compStyles.QADescription}\n        onClick={(e) => {\n          props.cardContents === \"img\"\n            ? handleCardReference()\n            : setIsOpen(true);\n        }}\n      >\n        {props.cardContents === \"text\" ? (\n          <p className={compStyles.textInACard}>\n            {textPreviewer(props.qna[props.cardType])}\n          </p>\n        ) : (\n          <form onSubmit={handleFileinput} className={compStyles.IMGForm}>\n            <img\n              id={`${props.cardType}_${props.iterator}_page-${props.pageNumber}`}\n              // onChange={(e) => console.log(\"YAyyy\")}\n              className={compStyles.SelectedIMGPreview}\n              src={props.pageContents}\n              // src={props.pageContents.match(URLCheck) ? props.pageContents : \"\"}\n              alt=\"No image\"\n              ref={QACardRefIMG}\n              onClick={(e) => fileInputRef.current.click()}\n            />\n            <input\n              className={compStyles.FileChooser}\n              type=\"file\"\n              accept=\"image/*\"\n              ref={fileInputRef}\n            />\n            <input\n              className={compStyles.FileSubmiter}\n              type=\"submit\"\n              value=\"Upload the image\"\n            />\n          </form>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default QACard;\n"]},"metadata":{},"sourceType":"module"}