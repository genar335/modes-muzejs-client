{"ast":null,"code":"var _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/TestPreview.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport styles from \"../pages/styles/create_test.module.scss\";\nimport FMLogo from \"./FMlogo\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\n\nconst TestPreview = props => {\n  console.log(props.pageToRender); // function handleTextAreaQuestionChange(\n  //   event: React.ChangeEvent<HTMLTextAreaElement>\n  // ) {\n  //   // let tmpArray =\n  //   //   props.currentTestState[props.currentLanguage!].pages[props.activePage]\n  //   //     .QnAPairs;\n  //   // console.log(\"tmp\", tmpArray);\n  //   // tmpArray.forEach((ele) => console.log(ele));\n  //   const tmpArray = props.currentTestState[props.currentLanguage!].pages;\n  //   // console.log(tmpArray);\n  //   // console.log(tmpArray[props.activePage]);\n  //   // console.log(tmpArray[props.activePage].QnAPairs[event.currentTarget.id]);\n  //   tmpArray[props.activePage].QnAPairs[event.currentTarget.id].question =\n  //     event.currentTarget.value;\n  //   // console.log(tmpArray);\n  //   props.saveChanges({\n  //     ...props.currentTestState,\n  //     [props.currentLanguage!]: {\n  //       ...props.currentTestState[props.currentLanguage!],\n  //       pages: tmpArray,\n  //     },\n  //   });\n  // }\n\n  function questionRenderController(currentItem, currentPair) {\n    switch (props.testType) {\n      case 'TT':\n        return;\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  const pageBody = () => {// return (\n    //   <div className={compStyles.pageBody}>\n    //     {props.currentTestState[props.currentLanguage || \"ru\"].pages[\n    //       props.activePage\n    //     ].QnAPairs.map((qnaPair: IQnA, index: number) => (\n    //       <div className={compStyles.qnaPair} id={String(index)}>\n    //         <div className={compStyles.Question}>\n    //           {questionRenderController(index, qnaPair)}\n    //         </div>\n    //         <div className={compStyles.Answer}>Answer: {qnaPair.answer}</div>\n    //       </div>\n    //     ))}\n    //   </div>\n    // );\n  };\n\n  useEffect(() => {\n    pageBody();\n  }, [props.currentTestState]);\n  return __jsx(\"div\", {\n    className: styles.TestPreview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, \"Page: \", props.activePage + 1), __jsx(\"div\", {\n    className: compStyles.TestBGContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, __jsx(FMLogo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }), pageBody()));\n};\n\nexport default TestPreview;","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/TestPreview.tsx"],"names":["React","useEffect","styles","FMLogo","compStyles","TestPreview","props","console","log","pageToRender","questionRenderController","currentItem","currentPair","testType","pageBody","currentTestState","activePage","TestBGContainer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAQA,OAAOC,MAAP,MAAmB,yCAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAOd;AACJC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,YAAlB,EADI,CAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAASC,wBAAT,CAAkCC,WAAlC,EAAuDC,WAAvD,EAA0E;AACxE,YAAQN,KAAK,CAACO,QAAd;AACE,WAAK,IAAL;AACE;AACA;;AAEF;AACE;AANJ;AAQD;;AACD,QAAMC,QAAQ,GAAG,MAAM,CACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAfD;;AAiBAb,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,QAAQ;AACT,GAFQ,EAEN,CAACR,KAAK,CAACS,gBAAP,CAFM,CAAT;AAIA,SACE;AAAK,IAAA,SAAS,EAAEb,MAAM,CAACG,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWC,KAAK,CAACU,UAAN,GAAmB,CAA9B,CADF,EAEE;AAAK,IAAA,SAAS,EAAEZ,UAAU,CAACa,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGH,QAAQ,EAFX,CAFF,CADF;AASD,CA1ED;;AA4EA,eAAeT,WAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport {\n  IQnA,\n  IQnAPairs,\n  ITest,\n  TLangOption,\n  TTestTypes,\n} from \"../@types/test\";\nimport styles from \"../pages/styles/create_test.module.scss\";\nimport FMLogo from \"./FMlogo\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\n\nconst TestPreview = (props: {\n  activePage: number;\n  currentLanguage: TLangOption[\"value\"] | undefined;\n  // currentTestState: ITest;\n  pageToRender: any;\n  testType: ITest['type'];\n  saveChanges: (test: ITest) => void;\n}) => {\n  console.log(props.pageToRender);\n\n  // function handleTextAreaQuestionChange(\n  //   event: React.ChangeEvent<HTMLTextAreaElement>\n  // ) {\n  //   // let tmpArray =\n  //   //   props.currentTestState[props.currentLanguage!].pages[props.activePage]\n  //   //     .QnAPairs;\n  //   // console.log(\"tmp\", tmpArray);\n  //   // tmpArray.forEach((ele) => console.log(ele));\n  //   const tmpArray = props.currentTestState[props.currentLanguage!].pages;\n  //   // console.log(tmpArray);\n  //   // console.log(tmpArray[props.activePage]);\n  //   // console.log(tmpArray[props.activePage].QnAPairs[event.currentTarget.id]);\n  //   tmpArray[props.activePage].QnAPairs[event.currentTarget.id].question =\n  //     event.currentTarget.value;\n  //   // console.log(tmpArray);\n  //   props.saveChanges({\n  //     ...props.currentTestState,\n  //     [props.currentLanguage!]: {\n  //       ...props.currentTestState[props.currentLanguage!],\n  //       pages: tmpArray,\n  //     },\n  //   });\n  // }\n\n  function questionRenderController(currentItem: number, currentPair: IQnA) {\n    switch (props.testType) {\n      case 'TT':\n        return\n        break;\n    \n      default:\n        break;\n    }\n  }\n  const pageBody = () => {\n    // return (\n    //   <div className={compStyles.pageBody}>\n    //     {props.currentTestState[props.currentLanguage || \"ru\"].pages[\n    //       props.activePage\n    //     ].QnAPairs.map((qnaPair: IQnA, index: number) => (\n    //       <div className={compStyles.qnaPair} id={String(index)}>\n    //         <div className={compStyles.Question}>\n    //           {questionRenderController(index, qnaPair)}\n    //         </div>\n    //         <div className={compStyles.Answer}>Answer: {qnaPair.answer}</div>\n    //       </div>\n    //     ))}\n    //   </div>\n    // );\n  };\n\n  useEffect(() => {\n    pageBody();\n  }, [props.currentTestState]);\n\n  return (\n    <div className={styles.TestPreview}>\n      <h3>Page: {props.activePage + 1}</h3>\n      <div className={compStyles.TestBGContainer}>\n        <FMLogo />\n        {pageBody()}\n      </div>\n    </div>\n  );\n};\n\nexport default TestPreview;\n"]},"metadata":{},"sourceType":"module"}