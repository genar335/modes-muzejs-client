{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/QACard.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from \"react\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\nimport addCompStyles from \"./styles/TestNamer.module.scss\";\nimport { closeBtn } from \"./TestNamer\";\n\nvar QACard = function QACard(props) {\n  _s();\n\n  var charLimit = 90;\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  console.log(props.cardContents);\n  console.log(\"Test for page contents\", props.pageContents);\n\n  var textPreviewer = function textPreviewer(text) {\n    if (text.length < 1) return __jsx(\"div\", {\n      className: compStyles.emptyText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 33\n      }\n    }, \"T\");\n\n    if (text.length > charLimit) {\n      return text.slice(0, 90) + \"...\";\n    } else {\n      return text;\n    }\n  };\n\n  var QACardRef = useRef(null);\n  useEffect(function () {\n    console.log(\"Yayyy\");\n  }, [QACardRef.current]);\n\n  var handleCardReference = function handleCardReference() {\n    props.setCurrentCard(QACardRef);\n    props.togglePhotoManager(false);\n  };\n\n  return __jsx(\"div\", {\n    className: \"\".concat(compStyles[props.cardType]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    // ref={QACardRef}\n    id: \"\".concat(props.cardType, \"_\").concat(props.iterator),\n    className: \"\".concat(addCompStyles.ModalContainerBG, \" \").concat(!isOpen ? addCompStyles.Hidden : null),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: addCompStyles.ModalContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, closeBtn(setIsOpen), __jsx(\"div\", {\n    className: addCompStyles.Modal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: addCompStyles.NameForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, props.cardContents === \"text\" ? props.q_a_TextEntry(props.cardType, props.iterator) : __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"Hello\"))))), __jsx(\"div\", {\n    className: compStyles.QADescription,\n    onClick: function onClick(e) {\n      props.cardContents === \"img\" ? handleCardReference() : setIsOpen(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, props.cardContents === \"text\" ? textPreviewer(props.qna[props.cardType]) : __jsx(\"img\", {\n    id: \"\".concat(props.cardType, \"_\").concat(props.iterator) // onChange={(e) => console.log(\"YAyyy\")}\n    ,\n    className: compStyles.SelectedIMGPreview,\n    src: props.pageContents || \"\" // src={props.pageContents.match(URLCheck) ? props.pageContents : \"\"}\n    ,\n    alt: \"No image\",\n    ref: QACardRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  })));\n};\n\n_s(QACard, \"HtCLSq9revb4Z3fYujAh9uoWGp4=\");\n\n_c = QACard;\nexport default QACard;\n\nvar _c;\n\n$RefreshReg$(_c, \"QACard\");","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/QACard.tsx"],"names":["React","useEffect","useRef","useState","compStyles","addCompStyles","closeBtn","QACard","props","charLimit","isOpen","setIsOpen","console","log","cardContents","pageContents","textPreviewer","text","length","emptyText","slice","QACardRef","current","handleCardReference","setCurrentCard","togglePhotoManager","cardType","iterator","ModalContainerBG","Hidden","ModalContainer","Modal","NameForm","q_a_TextEntry","QADescription","e","qna","SelectedIMGPreview"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { IQnA, TLangOption } from \"../@types/test\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\nimport addCompStyles from \"./styles/TestNamer.module.scss\";\nimport { closeBtn, CreateLangSwitchers } from \"./TestNamer\";\nimport { URLCheck } from \"./constants\";\n\nconst QACard = (props: {\n  cardType: \"answer\" | \"question\";\n  cardContents: \"img\" | \"text\";\n  // saveData: (data) => void;\n  iterator: number;\n  setSelectedLanguage: (chooseLanguage: TLangOption[\"value\"]) => void;\n  inputEnabler: () => void;\n  qna: IQnA;\n  testType: any;\n  q_a_TextEntry: (type: \"answer\" | \"question\", id: number) => JSX.Element;\n  togglePhotoManager: (toggle: boolean) => void;\n  setCurrentCard: React.Dispatch<React.SetStateAction<undefined>>;\n  pageContents: string;\n  currentLang: TLangOption[\"value\"];\n}) => {\n  const charLimit = 90;\n  const [isOpen, setIsOpen] = useState(false);\n  console.log(props.cardContents);\n  console.log(\"Test for page contents\", props.pageContents);\n  const textPreviewer = (text: string) => {\n    if (text.length < 1) return <div className={compStyles.emptyText}>T</div>;\n    if (text.length > charLimit) {\n      return text.slice(0, 90) + \"...\";\n    } else {\n      return text;\n    }\n  };\n\n  const QACardRef = useRef(null);\n\n  useEffect(() => {\n    console.log(\"Yayyy\");\n  }, [QACardRef.current]);\n\n  const handleCardReference = () => {\n    props.setCurrentCard(QACardRef);\n    props.togglePhotoManager(false);\n  };\n\n  return (\n    <div className={`${compStyles[props.cardType]}`}>\n      <div\n        // ref={QACardRef}\n        id={`${props.cardType}_${props.iterator}`}\n        className={`${addCompStyles.ModalContainerBG} ${\n          !isOpen ? addCompStyles.Hidden : null\n        }`}\n      >\n        <div className={addCompStyles.ModalContainer}>\n          {closeBtn(setIsOpen)}\n          <div className={addCompStyles.Modal}>\n            {/* {CreateLangSwitchers(\n              props.setSelectedLanguage,\n              props.inputEnabler,\n              props.currentLang\n            )} */}\n            <div className={addCompStyles.NameForm}>\n              {props.cardContents === \"text\" ? (\n                props.q_a_TextEntry(props.cardType, props.iterator)\n              ) : (\n                <p>Hello</p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        className={compStyles.QADescription}\n        onClick={(e) => {\n          props.cardContents === \"img\"\n            ? handleCardReference()\n            : setIsOpen(true);\n        }}\n      >\n        {props.cardContents === \"text\" ? (\n          textPreviewer(props.qna[props.cardType])\n        ) : (\n          <img\n            id={`${props.cardType}_${props.iterator}`}\n            // onChange={(e) => console.log(\"YAyyy\")}\n            className={compStyles.SelectedIMGPreview}\n            src={props.pageContents || \"\"}\n            // src={props.pageContents.match(URLCheck) ? props.pageContents : \"\"}\n            alt=\"No image\"\n            ref={QACardRef}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\nexport default QACard;\n"]},"metadata":{},"sourceType":"module"}