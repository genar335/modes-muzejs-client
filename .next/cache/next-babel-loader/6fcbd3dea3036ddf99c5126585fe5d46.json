{"ast":null,"code":"var _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/QACard.tsx\";\nvar __jsx = React.createElement;\nimport React, { useRef, useState } from \"react\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\nimport addCompStyles from \"./styles/TestNamer.module.scss\";\nimport { closeBtn, CreateLangSwitchers, SaveBtn } from \"./TestNamer\";\nimport { URLCheckForLocalHost } from \"./constants\";\n\nconst QACard = props => {\n  const charLimit = 90;\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false); // console.log(props.cardContents);\n  // console.log(\"Test for page contents\", props.pageContents);\n\n  const textPreviewer = text => {\n    // console.log(\"Hello from text preview\");\n    if (text.match(URLCheckForLocalHost) !== null) {\n      console.log(\"Hello there from URL checker\");\n      return \"There was an image before\";\n    }\n\n    if (text.length < 1) return __jsx(\"div\", {\n      className: compStyles.emptyText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 33\n      }\n    }, \"T\");\n\n    if (text.length > charLimit) {\n      return __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 14\n        }\n      }, \"text.slice(0, 90) + \\\"...\\\"\");\n    } else {\n      return __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 14\n        }\n      }, \"text\");\n    }\n  };\n\n  const QACardRef = useRef(null); // useEffect(() => {\n  //   console.log(\"Yayyy\");\n  // }, [QACardRef.current]);\n\n  const handleCardReference = () => {\n    props.setCurrentCard(QACardRef);\n    props.togglePhotoManager(false, `${props.cardType}_${props.iterator}`);\n  };\n\n  return __jsx(\"div\", {\n    className: `${compStyles[props.cardType]}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    // ref={QACardRef}\n    id: `${props.cardType}_${props.iterator}`,\n    className: `${addCompStyles.ModalContainerBG} ${!isOpen ? addCompStyles.Hidden : null}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: addCompStyles.ModalContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, closeBtn(setIsOpen), __jsx(\"div\", {\n    className: addCompStyles.Modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, CreateLangSwitchers(props.setSelectedLanguage, props.inputEnabler, props.currentLang), __jsx(\"div\", {\n    className: addCompStyles.NameForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, props.cardContents === \"text\" && props.q_a_TextEntry(props.cardType, props.iterator)), __jsx(\"button\", {\n    onClick: e => setIsOpen(!isOpen),\n    className: addCompStyles.SaveBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, SaveBtn())))), __jsx(\"div\", {\n    className: compStyles.QADescription,\n    onClick: e => {\n      props.cardContents === \"img\" ? handleCardReference() : setIsOpen(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, props.cardContents === \"text\" ? textPreviewer(props.qna[props.cardType]) : __jsx(\"img\", {\n    id: `${props.cardType}_${props.iterator}_page-${props.pageNumber}` // onChange={(e) => console.log(\"YAyyy\")}\n    ,\n    className: compStyles.SelectedIMGPreview,\n    src: props.pageContents || \"\" // src={props.pageContents.match(URLCheck) ? props.pageContents : \"\"}\n    ,\n    alt: \"No image\",\n    ref: QACardRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default QACard;","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/QACard.tsx"],"names":["React","useRef","useState","compStyles","addCompStyles","closeBtn","CreateLangSwitchers","SaveBtn","URLCheckForLocalHost","QACard","props","charLimit","isOpen","setIsOpen","textPreviewer","text","match","console","log","length","emptyText","QACardRef","handleCardReference","setCurrentCard","togglePhotoManager","cardType","iterator","ModalContainerBG","Hidden","ModalContainer","Modal","setSelectedLanguage","inputEnabler","currentLang","NameForm","cardContents","q_a_TextEntry","e","QADescription","qna","pageNumber","SelectedIMGPreview","pageContents"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { IQnA, TLangOption } from \"../@types/test\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\nimport addCompStyles from \"./styles/TestNamer.module.scss\";\nimport { closeBtn, CreateLangSwitchers, SaveBtn } from \"./TestNamer\";\nimport { URLCheck, URLCheckForLocalHost } from \"./constants\";\n\nconst QACard = (props: {\n  cardType: \"answer\" | \"question\";\n  cardContents: \"img\" | \"text\";\n  // saveData: (data) => void;\n  iterator: number;\n  setSelectedLanguage: (chooseLanguage: TLangOption[\"value\"]) => void;\n  inputEnabler: () => void;\n  qna: IQnA;\n  testType: any;\n  q_a_TextEntry: (type: \"answer\" | \"question\", id: number) => JSX.Element;\n  togglePhotoManager: (toggle: boolean, cardID: string) => void;\n  setCurrentCard: React.Dispatch<React.SetStateAction<undefined>>;\n  pageContents: string;\n  currentLang: TLangOption[\"value\"];\n  pageNumber: number;\n}) => {\n  const charLimit = 90;\n  const [isOpen, setIsOpen] = useState(false);\n  // console.log(props.cardContents);\n  // console.log(\"Test for page contents\", props.pageContents);\n\n  const textPreviewer = (text: string) => {\n    // console.log(\"Hello from text preview\");\n    if (text.match(URLCheckForLocalHost) !== null) {\n      console.log(\"Hello there from URL checker\");\n      return \"There was an image before\";\n    }\n    if (text.length < 1) return <div className={compStyles.emptyText}>T</div>;\n    if (text.length > charLimit) {\n      return <p>text.slice(0, 90) + \"...\"</p>;\n    } else {\n      return <p>text</p>;\n    }\n  };\n\n  const QACardRef = useRef(null);\n\n  // useEffect(() => {\n  //   console.log(\"Yayyy\");\n  // }, [QACardRef.current]);\n\n  const handleCardReference = () => {\n    props.setCurrentCard(QACardRef);\n    props.togglePhotoManager(false, `${props.cardType}_${props.iterator}`);\n  };\n\n  return (\n    <div className={`${compStyles[props.cardType]}`}>\n      <div\n        // ref={QACardRef}\n        id={`${props.cardType}_${props.iterator}`}\n        className={`${addCompStyles.ModalContainerBG} ${\n          !isOpen ? addCompStyles.Hidden : null\n        }`}\n      >\n        <div className={addCompStyles.ModalContainer}>\n          {closeBtn(setIsOpen)}\n          <div className={addCompStyles.Modal}>\n            {CreateLangSwitchers(\n              props.setSelectedLanguage,\n              props.inputEnabler,\n              props.currentLang\n            )}\n            <div className={addCompStyles.NameForm}>\n              {props.cardContents === \"text\" &&\n                props.q_a_TextEntry(props.cardType, props.iterator)}\n            </div>\n            <button\n              onClick={(e) => setIsOpen(!isOpen)}\n              className={addCompStyles.SaveBtn}\n            >\n              {SaveBtn()}\n            </button>\n          </div>\n        </div>\n      </div>\n      <div\n        className={compStyles.QADescription}\n        onClick={(e) => {\n          props.cardContents === \"img\"\n            ? handleCardReference()\n            : setIsOpen(true);\n        }}\n      >\n        {props.cardContents === \"text\" ? (\n          textPreviewer(props.qna[props.cardType])\n        ) : (\n          <img\n            id={`${props.cardType}_${props.iterator}_page-${props.pageNumber}`}\n            // onChange={(e) => console.log(\"YAyyy\")}\n            className={compStyles.SelectedIMGPreview}\n            src={props.pageContents || \"\"}\n            // src={props.pageContents.match(URLCheck) ? props.pageContents : \"\"}\n            alt=\"No image\"\n            ref={QACardRef}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\nexport default QACard;\n"]},"metadata":{},"sourceType":"module"}