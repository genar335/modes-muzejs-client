{"ast":null,"code":"var _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/QACard.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\nimport addCompStyles from \"./styles/TestNamer.module.scss\";\nimport { closeBtn, CreateLangSwitchers } from \"./TestNamer\";\n\nconst QACard = props => {\n  const charLimit = 90;\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  console.log(props.cardContents);\n\n  const textPreviewer = text => {\n    if (text.length < 1) return __jsx(\"div\", {\n      className: compStyles.emptyText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 33\n      }\n    }, \"T\");\n\n    if (text.length > charLimit) {\n      return text.slice(0, 90) + \"...\";\n    } else {\n      return text;\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: `${compStyles[props.cardType]}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    id: String(props.iterator),\n    className: `${addCompStyles.ModalContainerBG} ${!isOpen ? addCompStyles.Hidden : null}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: addCompStyles.ModalContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, closeBtn(setIsOpen), __jsx(\"div\", {\n    className: addCompStyles.Modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, CreateLangSwitchers(props.setSelectedLanguage, props.inputEnabler), __jsx(\"div\", {\n    className: addCompStyles.NameForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, props.cardContents === \"text\" ? __jsx(\"div\", {\n    onClick: e => setIsOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, \"props.q_a_TextEntry(props.cardType, props.iterator)\") : __jsx(\"div\", {\n    id: \"test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, \"Hello\"))))), __jsx(\"p\", {\n    className: compStyles.QADescription,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, props.cardContents === \"text\" ? textPreviewer(props.qna[props.cardType]) : __jsx(\"p\", {\n    onClick: e => {\n      props.togglePhotoManager(false);\n      console.log(\"Open the photos\");\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"+\")));\n};\n\nexport default QACard;","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/QACard.tsx"],"names":["React","useState","compStyles","addCompStyles","closeBtn","CreateLangSwitchers","QACard","props","charLimit","isOpen","setIsOpen","console","log","cardContents","textPreviewer","text","length","emptyText","slice","cardType","String","iterator","ModalContainerBG","Hidden","ModalContainer","Modal","setSelectedLanguage","inputEnabler","NameForm","e","QADescription","qna","togglePhotoManager"],"mappings":";;AAAA,OAAOA,KAAP,IAAmCC,QAAnC,QAAmD,OAAnD;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,SAASC,QAAT,EAAmBC,mBAAnB,QAA8C,aAA9C;;AAGA,MAAMC,MAAM,GAAIC,KAAD,IAWT;AACJ,QAAMC,SAAS,GAAG,EAAlB;AACA,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAAC,KAAD,CAApC;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACM,YAAlB;;AACA,QAAMC,aAAa,GAAIC,IAAD,IAAkB;AACtC,QAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB,OAAO;AAAK,MAAA,SAAS,EAAEd,UAAU,CAACe,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;;AACrB,QAAIF,IAAI,CAACC,MAAL,GAAcR,SAAlB,EAA6B;AAC3B,aAAOO,IAAI,CAACG,KAAL,CAAW,CAAX,EAAc,EAAd,IAAoB,KAA3B;AACD,KAFD,MAEO;AACL,aAAOH,IAAP;AACD;AACF,GAPD;;AASA,SACE;AAAK,IAAA,SAAS,EAAG,GAAEb,UAAU,CAACK,KAAK,CAACY,QAAP,CAAiB,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,EAAE,EAAEC,MAAM,CAACb,KAAK,CAACc,QAAP,CADZ;AAEE,IAAA,SAAS,EAAG,GAAElB,aAAa,CAACmB,gBAAiB,IAC3C,CAACb,MAAD,GAAUN,aAAa,CAACoB,MAAxB,GAAiC,IAClC,EAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAK,IAAA,SAAS,EAAEpB,aAAa,CAACqB,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,QAAQ,CAACM,SAAD,CADX,EAEE;AAAK,IAAA,SAAS,EAAEP,aAAa,CAACsB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,mBAAmB,CAACE,KAAK,CAACmB,mBAAP,EAA4BnB,KAAK,CAACoB,YAAlC,CADtB,EAEE;AAAK,IAAA,SAAS,EAAExB,aAAa,CAACyB,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrB,KAAK,CAACM,YAAN,KAAuB,MAAvB,GACC;AAAK,IAAA,OAAO,EAAGgB,CAAD,IAAOnB,SAAS,CAAC,IAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DADD,GAKC;AAAK,IAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANJ,CAFF,CAFF,CANF,CADF,EAuBE;AAAG,IAAA,SAAS,EAAER,UAAU,CAAC4B,aAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGvB,KAAK,CAACM,YAAN,KAAuB,MAAvB,GACCC,aAAa,CAACP,KAAK,CAACwB,GAAN,CAAUxB,KAAK,CAACY,QAAhB,CAAD,CADd,GAGC;AACE,IAAA,OAAO,EAAGU,CAAD,IAAO;AACdtB,MAAAA,KAAK,CAACyB,kBAAN,CAAyB,KAAzB;AACArB,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ,CAvBF,CADF;AAwCD,CAhED;;AAiEA,eAAeN,MAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { IQnA, TLangOption } from \"../@types/test\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\nimport addCompStyles from \"./styles/TestNamer.module.scss\";\nimport { closeBtn, CreateLangSwitchers } from \"./TestNamer\";\nimport PhotoManager from \"./PhotoManager\";\n\nconst QACard = (props: {\n  cardType: \"answer\" | \"question\";\n  cardContents: \"img\" | \"text\";\n  // saveData: (data) => void;\n  iterator: number;\n  setSelectedLanguage: (chooseLanguage: TLangOption[\"value\"]) => void;\n  inputEnabler: () => void;\n  qna: IQnA;\n  testType: any;\n  q_a_TextEntry: (type: \"answer\" | \"question\", id: number) => JSX.Element;\n  togglePhotoManager: (toggle: boolean) => void;\n}) => {\n  const charLimit = 90;\n  const [isOpen, setIsOpen] = useState(false);\n  console.log(props.cardContents);\n  const textPreviewer = (text: string) => {\n    if (text.length < 1) return <div className={compStyles.emptyText}>T</div>;\n    if (text.length > charLimit) {\n      return text.slice(0, 90) + \"...\";\n    } else {\n      return text;\n    }\n  };\n\n  return (\n    <div className={`${compStyles[props.cardType]}`}>\n      <div\n        id={String(props.iterator)}\n        className={`${addCompStyles.ModalContainerBG} ${\n          !isOpen ? addCompStyles.Hidden : null\n        }`}\n      >\n        <div className={addCompStyles.ModalContainer}>\n          {closeBtn(setIsOpen)}\n          <div className={addCompStyles.Modal}>\n            {CreateLangSwitchers(props.setSelectedLanguage, props.inputEnabler)}\n            <div className={addCompStyles.NameForm}>\n              {props.cardContents === \"text\" ? (\n                <div onClick={(e) => setIsOpen(true)}>\n                  props.q_a_TextEntry(props.cardType, props.iterator)\n                </div>\n              ) : (\n                <div id=\"test\">Hello</div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      <p className={compStyles.QADescription}>\n        {props.cardContents === \"text\" ? (\n          textPreviewer(props.qna[props.cardType])\n        ) : (\n          <p\n            onClick={(e) => {\n              props.togglePhotoManager(false);\n              console.log(\"Open the photos\");\n            }}\n          >\n            +\n          </p>\n        )}\n      </p>\n    </div>\n  );\n};\nexport default QACard;\n"]},"metadata":{},"sourceType":"module"}