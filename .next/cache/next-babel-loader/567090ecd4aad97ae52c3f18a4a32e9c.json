{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/QACard.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useRef, useState } from \"react\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\nimport addCompStyles from \"./styles/TestNamer.module.scss\";\nimport { closeBtn, CreateLangSwitchers } from \"./TestNamer\";\n\nvar QACard = function QACard(props) {\n  _s();\n\n  var charLimit = 90;\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  console.log(props.cardContents);\n\n  var textPreviewer = function textPreviewer(text) {\n    if (text.length < 1) return __jsx(\"div\", {\n      className: compStyles.emptyText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 33\n      }\n    }, \"T\");\n\n    if (text.length > charLimit) {\n      return text.slice(0, 90) + \"...\";\n    } else {\n      return text;\n    }\n  };\n\n  function readUploadedIMG(_x) {\n    return _readUploadedIMG.apply(this, arguments);\n  }\n\n  function _readUploadedIMG() {\n    _readUploadedIMG = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(inputFile) {\n      var tmpFileReader;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              tmpFileReader = new FileReader();\n              return _context2.abrupt(\"return\", new Promise(function (resolve, reject) {\n                tmpFileReader.onerror = function () {\n                  tmpFileReader.abort();\n                  reject(new DOMException(\"Problem parsing input file.\"));\n                };\n\n                tmpFileReader.onload = function () {\n                  resolve(tmpFileReader.result);\n                };\n\n                tmpFileReader.readAsDataURL(inputFile);\n              }));\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _readUploadedIMG.apply(this, arguments);\n  }\n\n  var handleUpload = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      var file, fileContents;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              file = event.target.files[0];\n              _context.prev = 1;\n              _context.next = 4;\n              return readUploadedIMG(file);\n\n            case 4:\n              fileContents = _context.sent;\n              console.log(fileContents);\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              console.warn(_context.t0.message);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 8]]);\n    }));\n\n    return function handleUpload(_x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var _useState2 = useState(),\n      uploadedImg = _useState2[0],\n      setUploadedImg = _useState2[1];\n\n  var _useState3 = useState([]),\n      upIMGs = _useState3[0],\n      setUpIMGs = _useState3[1];\n\n  function handleFileInput(_x3) {\n    return _handleFileInput.apply(this, arguments);\n  }\n\n  function _handleFileInput() {\n    _handleFileInput = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(event) {\n      var tmp, fileIndex, _fileInput$current$fi, fileContents;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              event.preventDefault();\n              tmp = [];\n\n              if (!(fileInput.current !== null)) {\n                _context3.next = 19;\n                break;\n              }\n\n              fileIndex = 0;\n\n            case 4:\n              if (!(fileIndex < ((_fileInput$current$fi = fileInput.current.files) === null || _fileInput$current$fi === void 0 ? void 0 : _fileInput$current$fi.length))) {\n                _context3.next = 18;\n                break;\n              }\n\n              _context3.prev = 5;\n              _context3.next = 8;\n              return readUploadedIMG(fileInput.current.files[fileIndex]);\n\n            case 8:\n              fileContents = _context3.sent;\n              tmp.push(fileContents); // setUploadedImg(fileContents);\n\n              _context3.next = 15;\n              break;\n\n            case 12:\n              _context3.prev = 12;\n              _context3.t0 = _context3[\"catch\"](5);\n              alert(_context3.t0);\n\n            case 15:\n              fileIndex++;\n              _context3.next = 4;\n              break;\n\n            case 18:\n              setUpIMGs(tmp);\n\n            case 19:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[5, 12]]);\n    }));\n    return _handleFileInput.apply(this, arguments);\n  }\n\n  var fileInput = useRef(null);\n  return __jsx(\"div\", {\n    className: \"\".concat(compStyles[props.cardType]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    id: String(props.iterator),\n    className: \"\".concat(addCompStyles.ModalContainerBG, \" \").concat(!isOpen ? addCompStyles.Hidden : null),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: addCompStyles.ModalContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, closeBtn(setIsOpen), __jsx(\"div\", {\n    className: addCompStyles.Modal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, CreateLangSwitchers(props.setSelectedLanguage, props.inputEnabler), __jsx(\"div\", {\n    className: addCompStyles.NameForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, props.cardContents === \"text\" ? props.q_a_TextEntry(props.cardType, props.iterator) : __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleFileInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, \"Upload image\"), __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    accept: \"image/*\",\n    ref: fileInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }), __jsx(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 21\n    }\n  }, \"Placeholder for image upload\"), upIMGs.forEach(function (image) {\n    return __jsx(\"img\", {\n      src: image,\n      alt: \"Oops\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 23\n      }\n    });\n  }))))))), __jsx(\"p\", {\n    className: compStyles.QADescription,\n    onClick: function onClick(e) {\n      return setIsOpen(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, props.cardContents === \"text\" ? textPreviewer(props.qna[props.cardType]) : __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, \"+\")));\n};\n\n_s(QACard, \"REYt+2PtuMiiNbjdh2zk4/Q+aWs=\");\n\n_c = QACard;\nexport default QACard;\n\nvar _c;\n\n$RefreshReg$(_c, \"QACard\");","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/QACard.tsx"],"names":["React","useRef","useState","compStyles","addCompStyles","closeBtn","CreateLangSwitchers","QACard","props","charLimit","isOpen","setIsOpen","console","log","cardContents","textPreviewer","text","length","emptyText","slice","readUploadedIMG","inputFile","tmpFileReader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","result","readAsDataURL","handleUpload","event","file","target","files","fileContents","warn","message","uploadedImg","setUploadedImg","upIMGs","setUpIMGs","handleFileInput","preventDefault","tmp","fileInput","current","fileIndex","push","alert","cardType","String","iterator","ModalContainerBG","Hidden","ModalContainer","Modal","setSelectedLanguage","inputEnabler","NameForm","q_a_TextEntry","forEach","image","QADescription","e","qna"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,SAASC,QAAT,EAAmBC,mBAAnB,QAA8C,aAA9C;;AAIA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAUT;AAAA;;AACJ,MAAMC,SAAS,GAAG,EAAlB;;AADI,kBAEwBP,QAAQ,CAAC,KAAD,CAFhC;AAAA,MAEGQ,MAFH;AAAA,MAEWC,SAFX;;AAGJC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACM,YAAlB;;AACA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAkB;AACtC,QAAIA,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB,OAAO;AAAK,MAAA,SAAS,EAAEd,UAAU,CAACe,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;;AACrB,QAAIF,IAAI,CAACC,MAAL,GAAcR,SAAlB,EAA6B;AAC3B,aAAOO,IAAI,CAACG,KAAL,CAAW,CAAX,EAAc,EAAd,IAAoB,KAA3B;AACD,KAFD,MAEO;AACL,aAAOH,IAAP;AACD;AACF,GAPD;;AAJI,WAaWI,eAbX;AAAA;AAAA;;AAAA;AAAA,gFAaJ,kBAA+BC,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AACQC,cAAAA,aADR,GACwB,IAAIC,UAAJ,EADxB;AAAA,gDAGS,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCJ,gBAAAA,aAAa,CAACK,OAAd,GAAwB,YAAM;AAC5BL,kBAAAA,aAAa,CAACM,KAAd;AACAF,kBAAAA,MAAM,CAAC,IAAIG,YAAJ,CAAiB,6BAAjB,CAAD,CAAN;AACD,iBAHD;;AAKAP,gBAAAA,aAAa,CAACQ,MAAd,GAAuB,YAAM;AAC3BL,kBAAAA,OAAO,CAACH,aAAa,CAACS,MAAf,CAAP;AACD,iBAFD;;AAGAT,gBAAAA,aAAa,CAACU,aAAd,CAA4BX,SAA5B;AACD,eAVM,CAHT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAbI;AAAA;AAAA;;AA6BJ,MAAMY,YAAY;AAAA,wEAAG,iBAAOC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,cAAAA,IADa,GACND,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CADM;AAAA;AAAA;AAAA,qBAIUjB,eAAe,CAACe,IAAD,CAJzB;;AAAA;AAIXG,cAAAA,YAJW;AAKjB1B,cAAAA,OAAO,CAACC,GAAR,CAAYyB,YAAZ;AALiB;AAAA;;AAAA;AAAA;AAAA;AAOjB1B,cAAAA,OAAO,CAAC2B,IAAR,CAAa,YAAEC,OAAf;;AAPiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAZP,YAAY;AAAA;AAAA;AAAA,KAAlB;;AA7BI,mBAwCkC/B,QAAQ,EAxC1C;AAAA,MAwCGuC,WAxCH;AAAA,MAwCgBC,cAxChB;;AAAA,mBAyCwBxC,QAAQ,CAAa,EAAb,CAzChC;AAAA,MAyCGyC,MAzCH;AAAA,MAyCWC,SAzCX;;AAAA,WA0CWC,eA1CX;AAAA;AAAA;;AAAA;AAAA,gFA0CJ,kBAA+BX,KAA/B;AAAA;;AAAA;AAAA;AAAA;AAAA;AACEA,cAAAA,KAAK,CAACY,cAAN;AACIC,cAAAA,GAFN,GAEY,EAFZ;;AAAA,oBAGMC,SAAS,CAACC,OAAV,KAAsB,IAH5B;AAAA;AAAA;AAAA;;AAKUC,cAAAA,SALV,GAKsB,CALtB;;AAAA;AAAA,oBAMMA,SAAS,6BAAGF,SAAS,CAACC,OAAV,CAAkBZ,KAArB,0DAAG,sBAAyBpB,MAA5B,CANf;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,qBAUmCG,eAAe,CACxC4B,SAAS,CAACC,OAAV,CAAkBZ,KAAlB,CAAwBa,SAAxB,CADwC,CAVlD;;AAAA;AAUcZ,cAAAA,YAVd;AAaQS,cAAAA,GAAG,CAACI,IAAJ,CAASb,YAAT,EAbR,CAcQ;;AAdR;AAAA;;AAAA;AAAA;AAAA;AAgBQc,cAAAA,KAAK,cAAL;;AAhBR;AAOMF,cAAAA,SAAS,EAPf;AAAA;AAAA;;AAAA;AAmBIN,cAAAA,SAAS,CAACG,GAAD,CAAT;;AAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA1CI;AAAA;AAAA;;AAgEJ,MAAMC,SAAS,GAAG/C,MAAM,CAAmB,IAAnB,CAAxB;AAEA,SACE;AAAK,IAAA,SAAS,YAAKE,UAAU,CAACK,KAAK,CAAC6C,QAAP,CAAf,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,EAAE,EAAEC,MAAM,CAAC9C,KAAK,CAAC+C,QAAP,CADZ;AAEE,IAAA,SAAS,YAAKnD,aAAa,CAACoD,gBAAnB,cACP,CAAC9C,MAAD,GAAUN,aAAa,CAACqD,MAAxB,GAAiC,IAD1B,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAK,IAAA,SAAS,EAAErD,aAAa,CAACsD,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrD,QAAQ,CAACM,SAAD,CADX,EAEE;AAAK,IAAA,SAAS,EAAEP,aAAa,CAACuD,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGrD,mBAAmB,CAACE,KAAK,CAACoD,mBAAP,EAA4BpD,KAAK,CAACqD,YAAlC,CADtB,EAEE;AAAK,IAAA,SAAS,EAAEzD,aAAa,CAAC0D,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtD,KAAK,CAACM,YAAN,KAAuB,MAAvB,GACCN,KAAK,CAACuD,aAAN,CAAoBvD,KAAK,CAAC6C,QAA1B,EAAoC7C,KAAK,CAAC+C,QAA1C,CADD,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAEV,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,QAAQ,MAFV;AAGE,IAAA,MAAM,EAAC,SAHT;AAIE,IAAA,GAAG,EAAEG,SAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCATF,EAUGL,MAAM,CAACqB,OAAP,CAAe,UAACC,KAAD;AAAA,WACd;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAiB,MAAA,GAAG,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADc;AAAA,GAAf,CAVH,CADF,CAJJ,CAFF,CAFF,CANF,CADF,EAoCE;AAAG,IAAA,SAAS,EAAE9D,UAAU,CAAC+D,aAAzB;AAAwC,IAAA,OAAO,EAAE,iBAACC,CAAD;AAAA,aAAOxD,SAAS,CAAC,IAAD,CAAhB;AAAA,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACM,YAAN,KAAuB,MAAvB,GACCC,aAAa,CAACP,KAAK,CAAC4D,GAAN,CAAU5D,KAAK,CAAC6C,QAAhB,CAAD,CADd,GAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ,CApCF,CADF;AA8CD,CA1HD;;GAAM9C,M;;KAAAA,M;AA2HN,eAAeA,MAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { IQnA, TLangOption } from \"../@types/test\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\nimport addCompStyles from \"./styles/TestNamer.module.scss\";\nimport { closeBtn, CreateLangSwitchers } from \"./TestNamer\";\nimport { read } from \"fs\";\nimport { readFile } from \"fs/promises\";\n\nconst QACard = (props: {\n  cardType: \"answer\" | \"question\";\n  cardContents: \"img\" | \"text\";\n  // saveData: (data) => void;\n  iterator: number;\n  setSelectedLanguage: (chooseLanguage: TLangOption[\"value\"]) => void;\n  inputEnabler: () => void;\n  qna: IQnA;\n  testType: any;\n  q_a_TextEntry: (type: \"answer\" | \"question\", id: number) => JSX.Element;\n}) => {\n  const charLimit = 90;\n  const [isOpen, setIsOpen] = useState(false);\n  console.log(props.cardContents);\n  const textPreviewer = (text: string) => {\n    if (text.length < 1) return <div className={compStyles.emptyText}>T</div>;\n    if (text.length > charLimit) {\n      return text.slice(0, 90) + \"...\";\n    } else {\n      return text;\n    }\n  };\n\n  async function readUploadedIMG(inputFile) {\n    const tmpFileReader = new FileReader();\n\n    return new Promise((resolve, reject) => {\n      tmpFileReader.onerror = () => {\n        tmpFileReader.abort();\n        reject(new DOMException(\"Problem parsing input file.\"));\n      };\n\n      tmpFileReader.onload = () => {\n        resolve(tmpFileReader.result);\n      };\n      tmpFileReader.readAsDataURL(inputFile);\n    });\n  }\n\n  const handleUpload = async (event) => {\n    const file = event.target.files[0];\n\n    try {\n      const fileContents = await readUploadedIMG(file);\n      console.log(fileContents);\n    } catch (e) {\n      console.warn(e.message);\n    }\n  };\n\n  const [uploadedImg, setUploadedImg] = useState();\n  const [upIMGs, setUpIMGs] = useState<Array<any>>([]);\n  async function handleFileInput(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    let tmp = [];\n    if (fileInput.current !== null) {\n      for (\n        let fileIndex = 0;\n        fileIndex < fileInput.current.files?.length;\n        fileIndex++\n      ) {\n        try {\n          const fileContents = await readUploadedIMG(\n            fileInput.current.files[fileIndex]\n          );\n          tmp.push(fileContents);\n          // setUploadedImg(fileContents);\n        } catch (error) {\n          alert(error);\n        }\n      }\n      setUpIMGs(tmp);\n    }\n  }\n  const fileInput = useRef<HTMLInputElement>(null);\n\n  return (\n    <div className={`${compStyles[props.cardType]}`}>\n      <div\n        id={String(props.iterator)}\n        className={`${addCompStyles.ModalContainerBG} ${\n          !isOpen ? addCompStyles.Hidden : null\n        }`}\n      >\n        <div className={addCompStyles.ModalContainer}>\n          {closeBtn(setIsOpen)}\n          <div className={addCompStyles.Modal}>\n            {CreateLangSwitchers(props.setSelectedLanguage, props.inputEnabler)}\n            <div className={addCompStyles.NameForm}>\n              {props.cardContents === \"text\" ? (\n                props.q_a_TextEntry(props.cardType, props.iterator)\n              ) : (\n                <div>\n                  <form onSubmit={handleFileInput}>\n                    <label>Upload image</label>\n                    <input\n                      type=\"file\"\n                      multiple\n                      accept=\"image/*\"\n                      ref={fileInput}\n                    />\n                    <input type=\"submit\" value=\"Submit\" />\n                    <p>Placeholder for image upload</p>\n                    {upIMGs.forEach((image) => (\n                      <img src={image} alt=\"Oops\" />\n                    ))}\n                  </form>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      <p className={compStyles.QADescription} onClick={(e) => setIsOpen(true)}>\n        {props.cardContents === \"text\" ? (\n          textPreviewer(props.qna[props.cardType])\n        ) : (\n          <p>+</p>\n        )}\n      </p>\n    </div>\n  );\n};\nexport default QACard;\n"]},"metadata":{},"sourceType":"module"}