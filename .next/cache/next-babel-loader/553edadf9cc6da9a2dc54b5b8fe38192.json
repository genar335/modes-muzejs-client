{"ast":null,"code":"var _jsxFileName = \"/Users/yberfox/Documents/personal-projects/modes-muzejs-client/components/TestCardClient.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport store from \"store\";\nimport styles from \"./styles/TestCardClient.module.scss\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { parseTestTypeValueToLabel } from \"./TestCard\";\n\nconst TestCardClient = props => {\n  const url = `/client/languages?testid=${props.testData._id}`;\n  const router = useRouter();\n\n  const handleClick = e => {\n    store.set(\"theTest\", props.testData);\n    router.push(url);\n  };\n\n  return __jsx(AnimatePresence, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, __jsx(motion.div, {\n    initial: {\n      opacity: 0\n    },\n    animate: {\n      opacity: 1\n    },\n    className: styles.testCardContainer,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, parseTestTypeValueToLabel(props.testData.type)), __jsx(\"h2\", {\n    className: styles.testName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \"\\\"\", props.title, \"\\\"\"), __jsx(\"p\", {\n    className: styles.TestLastEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, new Date(props.testData.updatedAt).toLocaleDateString().replaceAll(/\\//g, \".\"))));\n};\n\nexport default TestCardClient;","map":{"version":3,"sources":["/Users/yberfox/Documents/personal-projects/modes-muzejs-client/components/TestCardClient.tsx"],"names":["React","useRouter","store","styles","AnimatePresence","motion","parseTestTypeValueToLabel","TestCardClient","props","url","testData","_id","router","handleClick","e","set","push","opacity","testCardContainer","type","testName","title","TestLastEdit","Date","updatedAt","toLocaleDateString","replaceAll"],"mappings":";;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,SAAqBC,SAArB,QAAsC,aAAtC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,SAASC,eAAT,EAA0BC,MAA1B,QAAwC,eAAxC;AACA,SAASC,yBAAT,QAA0C,YAA1C;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAA+C;AACpE,QAAMC,GAAG,GAAI,4BAA2BD,KAAK,CAACE,QAAN,CAAeC,GAAI,EAA3D;AACA,QAAMC,MAAkB,GAAGX,SAAS,EAApC;;AAEA,QAAMY,WAAW,GAAIC,CAAD,IAAY;AAC9BZ,IAAAA,KAAK,CAACa,GAAN,CAAU,SAAV,EAAqBP,KAAK,CAACE,QAA3B;AACAE,IAAAA,MAAM,CAACI,IAAP,CAAYP,GAAZ;AACD,GAHD;;AAKA,SACE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD,CAAQ,GAAR;AACE,IAAA,OAAO,EAAE;AAAEQ,MAAAA,OAAO,EAAE;AAAX,KADX;AAEE,IAAA,OAAO,EAAE;AAAEA,MAAAA,OAAO,EAAE;AAAX,KAFX;AAGE,IAAA,SAAS,EAAEd,MAAM,CAACe,iBAHpB;AAIE,IAAA,OAAO,EAAEL,WAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIP,yBAAyB,CAACE,KAAK,CAACE,QAAN,CAAeS,IAAhB,CAA7B,CANF,EAOE;AAAI,IAAA,SAAS,EAAEhB,MAAM,CAACiB,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkCZ,KAAK,CAACa,KAAxC,OAPF,EAQE;AAAG,IAAA,SAAS,EAAElB,MAAM,CAACmB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,IAAIC,IAAJ,CAASf,KAAK,CAACE,QAAN,CAAec,SAAxB,EACEC,kBADF,GAEEC,UAFF,CAEa,KAFb,EAEoB,GAFpB,CADH,CARF,CADF,CADF;AAkBD,CA3BD;;AA6BA,eAAenB,cAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { NextRouter, useRouter } from \"next/router\";\nimport { ITest } from \"../@types/test\";\nimport store from \"store\";\nimport styles from \"./styles/TestCardClient.module.scss\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { parseTestTypeValueToLabel } from \"./TestCard\";\n\nconst TestCardClient = (props: { title: string; testData: ITest }) => {\n  const url = `/client/languages?testid=${props.testData._id}`;\n  const router: NextRouter = useRouter();\n\n  const handleClick = (e: any) => {\n    store.set(\"theTest\", props.testData);\n    router.push(url);\n  };\n\n  return (\n    <AnimatePresence>\n      <motion.div\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        className={styles.testCardContainer}\n        onClick={handleClick}\n      >\n        <p>{parseTestTypeValueToLabel(props.testData.type)}</p>\n        <h2 className={styles.testName}>\"{props.title}\"</h2>\n        <p className={styles.TestLastEdit}>\n          {new Date(props.testData.updatedAt as string)\n            .toLocaleDateString()\n            .replaceAll(/\\//g, \".\")}\n        </p>\n      </motion.div>\n    </AnimatePresence>\n  );\n};\n\nexport default TestCardClient;\n"]},"metadata":{},"sourceType":"module"}