{"ast":null,"code":"var _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/LangBtnController.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport compStyle from \"./styles/LangBtnController.module.scss\";\n\nconst LangBtnController = props => {\n  const {\n    0: activeBtnPosition,\n    1: setActiveBtnPosition\n  } = useState();\n  const {\n    0: flatBtns,\n    1: setFlatBtns\n  } = useState([]);\n  console.log(activeBtnPosition);\n  const forceUpdate = React.useReducer(() => ({}), {})[1];\n\n  function activeBtnSwitcher(Btns) {\n    let flatBtns = Btns.flat().filter(ele => typeof ele != \"object\");\n    setFlatBtns(flatBtns);\n    console.log(flatBtns);\n    setActiveBtnPosition(flatBtns.indexOf(true));\n    flatBtns.pop();\n\n    if (activeBtnPosition == flatBtns.length) {\n      flatBtns.unshift(true);\n    } else {\n      flatBtns.unshift(false);\n    }\n\n    console.log(flatBtns, \"after manipulation\");\n    Btns.forEach((btn, index) => btn[1] = flatBtns[index]);\n    forceUpdate();\n  }\n\n  useEffect(() => {\n    console.log(\"Heello from arrow\");\n    Btns.forEach((button, index) => {\n      button[1] = flatBtns[index];\n    });\n  }, [activeBtnPosition]);\n  const {\n    0: activeBtn,\n    1: setActiveBtn\n  } = useState(props.active);\n  /**\n   * Sets currently active button.\n   * @param id of a button\n   */\n\n  const activeBtnSetter = id => setActiveBtn(id);\n\n  const handleArrowClick = () => {\n    activeBtnSwitcher(Btns);\n  };\n\n  let arrowBtn;\n  useEffect(() => {\n    var _arrowBtn;\n\n    console.log(document.getElementById(\"arrowButton\"), \"found it\");\n    arrowBtn = document.getElementById(\"arrowButton\");\n    (_arrowBtn = arrowBtn) === null || _arrowBtn === void 0 ? void 0 : _arrowBtn.addEventListener(\"click\", handleArrowClick);\n    return () => {\n      var _arrowBtn2;\n\n      return (_arrowBtn2 = arrowBtn) === null || _arrowBtn2 === void 0 ? void 0 : _arrowBtn2.removeEventListener(\"click\", handleArrowClick);\n    };\n  }); // * Cleans other buttons from the pressed class.\n\n  useEffect(() => {\n    Btns.forEach(button => {\n      console.log(button[0].props.btnID);\n\n      if (button[0].props.btnID !== activeBtn) {\n        button[1] = false;\n      }\n    });\n  }, []);\n  return __jsx(\"div\", {\n    className: compStyle.LangSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, Btns.map(ele => ele));\n};\n\nexport default LangBtnController;","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/LangBtnController.tsx"],"names":["React","useEffect","useState","compStyle","LangBtnController","props","activeBtnPosition","setActiveBtnPosition","flatBtns","setFlatBtns","console","log","forceUpdate","useReducer","activeBtnSwitcher","Btns","flat","filter","ele","indexOf","pop","length","unshift","forEach","btn","index","button","activeBtn","setActiveBtn","active","activeBtnSetter","id","handleArrowClick","arrowBtn","document","getElementById","addEventListener","removeEventListener","btnID","LangSelect","map"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport LanguageBtn from \"./LanguageBtn\";\nimport compStyle from \"./styles/LangBtnController.module.scss\";\n\nconst LangBtnController = (props) => {\n  type TBtnArrayWithPressedState = {\n    btns: [JSX.Element, boolean];\n  };\n\n  const [activeBtnPosition, setActiveBtnPosition] = useState<Number>();\n  const [flatBtns, setFlatBtns] = useState<Array<boolean>>([]);\n  console.log(activeBtnPosition);\n  const forceUpdate = React.useReducer(() => ({}), {})[1] as () => void;\n\n  function activeBtnSwitcher(Btns: { btns: [JSX.Element, boolean] }[]) {\n    let flatBtns = Btns.flat().filter((ele) => typeof ele != \"object\");\n    setFlatBtns(flatBtns);\n    console.log(flatBtns);\n    setActiveBtnPosition(flatBtns.indexOf(true));\n    flatBtns.pop();\n    if (activeBtnPosition == flatBtns.length) {\n      flatBtns.unshift(true);\n    } else {\n      flatBtns.unshift(false);\n    }\n    console.log(flatBtns, \"after manipulation\");\n    Btns.forEach((btn, index) => (btn[1] = flatBtns[index]));\n    forceUpdate();\n  }\n\n  useEffect(() => {\n    console.log(\"Heello from arrow\");\n    Btns.forEach((button, index) => {\n      button[1] = flatBtns[index];\n    });\n  }, [activeBtnPosition]);\n\n  const [activeBtn, setActiveBtn] = useState<string>(props.active);\n  /**\n   * Sets currently active button.\n   * @param id of a button\n   */\n  const activeBtnSetter = (id: string) => setActiveBtn(id);\n\n  const handleArrowClick = () => {\n    activeBtnSwitcher(Btns);\n  };\n  let arrowBtn: HTMLElement | null;\n  useEffect(() => {\n    console.log(document.getElementById(\"arrowButton\"), \"found it\");\n    arrowBtn = document.getElementById(\"arrowButton\");\n    arrowBtn?.addEventListener(\"click\", handleArrowClick);\n    return () => arrowBtn?.removeEventListener(\"click\", handleArrowClick);\n  });\n\n  // * Cleans other buttons from the pressed class.\n  useEffect(() => {\n    Btns.forEach((button) => {\n      console.log(button[0].props.btnID);\n      if (button[0].props.btnID !== activeBtn) {\n        button[1] = false;\n      }\n    });\n  }, []);\n  \n  return (\n    <div className={compStyle.LangSelect}>{Btns.map((ele: any) => ele)}</div>\n  );\n};\n\nexport default LangBtnController;\n"]},"metadata":{},"sourceType":"module"}