{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/TestPreview.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport styles from \"../pages/styles/create_test.module.scss\";\nimport FMLogo from \"./FMlogo\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\n\nvar TestPreview = function TestPreview(props) {\n  console.log(props.pageToRender);\n  console.log(props.pageToRender.QnAPairs);\n  var tmp = props.activePage;\n\n  var saveQuestion = function saveQuestion(qid, data) {};\n\n  var handleQuestionKeyPress = function handleQuestionKeyPress(event) {\n    event.key === \"Enter\" ? console.log(\"Efnter\") : undefined;\n  };\n\n  function textQuestion(iterator, // handleQuestionChange: (event: React.ChangeEvent<HTMLTextAreaElement>) => void,\n  qna) {\n    return __jsx(\"textarea\", {\n      id: String(iterator),\n      onChange: handleQuestionChange,\n      className: compStyles.Question,\n      onKeyPress: handleQuestionKeyPress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, qna.question);\n  }\n\n  function textAnswer(iterator, qna) {\n    return __jsx(\"textarea\", {\n      id: String(iterator) // onChange={handleAnswerChange}\n      ,\n      className: compStyles.Answer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, qna.answer);\n  }\n\n  function imgQuestion(iterator, // handleQuestionChange: (\n  // event: React.ChangeEvent<HTMLTextAreaElement>\n  // ) => void,\n  qna) {\n    return __jsx(\"div\", {\n      id: String(iterator),\n      className: compStyles.Question,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \"\\uFF0B\"));\n  }\n\n  function imgAnswer(iterator, // handleQuestionChange: (\n  //   event: React.ChangeEvent<HTMLTextAreaElement>\n  // ) => void,\n  qna) {\n    return __jsx(\"div\", {\n      id: String(iterator),\n      className: compStyles.Question,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, \"\\uFF0B\"));\n  }\n\n  var handleQuestionChange = function handleQuestionChange(event) {\n    console.log(\"\".concat(event.currentTarget.id, \":\"), event.currentTarget.value);\n  };\n\n  var pageBody = function pageBody() {\n    return props.pageToRender.QnAPairs.map(function (qna, iterator) {\n      return __jsx(\"div\", {\n        key: iterator,\n        id: String(iterator),\n        className: compStyles.qnaPair,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }\n      }, props.testType === \"TT\" ? textQuestion(iterator, qna) : null, props.testType === \"PP\" || props.testType === \"PT\" ? imgQuestion(iterator, qna) : null, props.testType === \"TT\" || props.testType === \"PT\" ? textAnswer(iterator, qna) : null, props.testType === \"PP\" ? imgAnswer(iterator, qna) : null);\n    });\n  };\n\n  props.testType === \"\" ? console.log(\"no test type\") : console.log(props.testType);\n  return __jsx(\"div\", {\n    className: styles.TestPreview,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, \"Page: \", props.activePage + 1), __jsx(\"div\", {\n    className: \"\".concat(compStyles.TestBGContainer),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, __jsx(FMLogo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: compStyles.pageBody,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, props.testType === \"\" ? __jsx(\"div\", {\n    className: compStyles.tTypeWarning,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, \"Please choose a test type\")) : pageBody())));\n};\n\n_c = TestPreview;\nexport default TestPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestPreview\");","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/TestPreview.tsx"],"names":["React","styles","FMLogo","compStyles","TestPreview","props","console","log","pageToRender","QnAPairs","tmp","activePage","saveQuestion","qid","data","handleQuestionKeyPress","event","key","undefined","textQuestion","iterator","qna","String","handleQuestionChange","Question","question","textAnswer","Answer","answer","imgQuestion","imgAnswer","currentTarget","id","value","pageBody","map","qnaPair","testType","TestBGContainer","tTypeWarning"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { containerCSS } from \"react-select/src/components/containers\";\nimport {\n  IQnA,\n  IQnAPairs,\n  ITest,\n  TLangOption,\n  TTestTypes,\n} from \"../@types/test\";\nimport styles from \"../pages/styles/create_test.module.scss\";\nimport FMLogo from \"./FMlogo\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\n\nconst TestPreview = (props: {\n  activePage: number;\n  currentLanguage: TLangOption[\"value\"] | undefined;\n  // currentTestState: ITest;\n  pageToRender: any;\n  testType: ITest[\"type\"];\n  saveChanges: (test: ITest) => void;\n}) => {\n  console.log(props.pageToRender);\n  console.log(props.pageToRender.QnAPairs);\n\n  let tmp = props.activePage\n\n  const saveQuestion = (qid: number, data) => {\n    \n  }\n\n  const handleQuestionKeyPress = (\n    event: React.KeyboardEvent<HTMLTextAreaElement>\n  ) => {\n    event.key === \"Enter\" ? console.log(\"Efnter\") : undefined;\n  };\n\n  function textQuestion(\n    iterator: number,\n    // handleQuestionChange: (event: React.ChangeEvent<HTMLTextAreaElement>) => void,\n    qna: IQnA\n  ) {\n    return (\n      <textarea\n        id={String(iterator)}\n        onChange={handleQuestionChange}\n        className={compStyles.Question}\n        onKeyPress={handleQuestionKeyPress}\n      >\n        {qna.question}\n      </textarea>\n    );\n  }\n\n  function textAnswer(iterator: number, qna: IQnA) {\n    return (\n      <textarea\n        id={String(iterator)}\n        // onChange={handleAnswerChange}\n        className={compStyles.Answer}\n      >\n        {qna.answer}\n      </textarea>\n    );\n  }\n\n  function imgQuestion(\n    iterator: number,\n    // handleQuestionChange: (\n    // event: React.ChangeEvent<HTMLTextAreaElement>\n    // ) => void,\n    qna: IQnA\n  ) {\n    return (\n      <div id={String(iterator)} className={compStyles.Question}>\n        <span>＋</span>\n      </div>\n    );\n  }\n  function imgAnswer(\n    iterator: number,\n    // handleQuestionChange: (\n    //   event: React.ChangeEvent<HTMLTextAreaElement>\n    // ) => void,\n    qna: IQnA\n  ) {\n    return (\n      <div id={String(iterator)} className={compStyles.Question}>\n        <span>＋</span>\n      </div>\n    );\n  }\n\n  const handleQuestionChange = (\n    event: React.ChangeEvent<HTMLTextAreaElement>\n  ) => {\n    console.log(`${event.currentTarget.id}:`, event.currentTarget.value);\n  };\n\n  const pageBody = () =>\n    props.pageToRender.QnAPairs.map((qna: IQnA, iterator: number) => (\n      <div key={iterator} id={String(iterator)} className={compStyles.qnaPair}>\n        {/* For question rendering */}\n        {props.testType === \"TT\" ? textQuestion(iterator, qna) : null}\n        {props.testType === \"PP\" || props.testType === \"PT\"\n          ? imgQuestion(iterator, qna)\n          : null}\n        {/* For answer rendering */}\n        {props.testType === \"TT\" || props.testType === \"PT\"\n          ? textAnswer(iterator, qna)\n          : null}\n        {props.testType === \"PP\" ? imgAnswer(iterator, qna) : null}\n      </div>\n    ));\n\n  props.testType === \"\"\n    ? console.log(\"no test type\")\n    : console.log(props.testType);\n\n  return (\n    <div className={styles.TestPreview}>\n      <h3>Page: {props.activePage + 1}</h3>\n\n      <div className={`${compStyles.TestBGContainer}`}>\n        <FMLogo />\n        <div className={compStyles.pageBody}>\n          {props.testType === \"\" ? (\n            <div className={compStyles.tTypeWarning}>\n              <h1>Please choose a test type</h1>\n            </div>\n          ) : (\n            pageBody()\n          )}\n          {/* {pageBody()} */}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TestPreview;\n"]},"metadata":{},"sourceType":"module"}