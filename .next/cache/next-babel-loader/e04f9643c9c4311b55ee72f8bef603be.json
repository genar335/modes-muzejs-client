{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport { PlusSign } from \"./ActiveTests\";\nimport Switch from \"react-switch\";\nimport styles from \"../pages/styles/create_test.module.scss\";\nimport { SaveBtn } from \"./TestNamer\";\nimport { finalPageBodyLimit, finalPageHeaderLimit } from \"./constants\";\n\nconst FinalPageEditor = props => {\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const ModalOpenerContainerStyle = {\n    backgroundColor: \"#efddd1\",\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: \"16.5px\",\n    padding: \"1rem\",\n    boxSizing: \"border-box\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\"\n  };\n  const MOCHeader = {\n    justifySelf: \"flex-start\",\n    fontSize: \"24px\",\n    textAlign: \"center\",\n    width: \"100%\",\n    margin: \"0rem 0 1.6rem 0\"\n  };\n  const HeaderBtnContainer = {\n    width: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"space-between\",\n    alignItems: \"flex-start\"\n  };\n  const BTNOpenModel = {\n    gridColumn: \"3\",\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    boxSizing: \"border-box\",\n    // padding: \"0 1rem 0\",\n    width: \"100%\",\n    backgroundColor: \"rgba(0, 0, 0, 0)\",\n    border: \"2px solid rgba(224, 188, 163, 0.94)\",\n    borderRadius: \"16.5px\",\n    fontFamily: \"Montserrat\"\n  };\n  const EmailContainer = {\n    display: \"flex\",\n    // marginTop: \"0.5rem\",\n    margin: \"-0.5rem 0 0 0.5rem\",\n    alignItems: \"center\"\n  };\n\n  const handleInputChange = event => {\n    const langID = event.currentTarget.id.slice(undefined, event.currentTarget.id.indexOf(\"_\")); // console.log(langID);\n\n    props.saveTest(_objectSpread(_objectSpread({}, props.test), {}, {\n      [langID]: _objectSpread(_objectSpread({}, props.test[langID]), {}, {\n        [`finalPageText${event.currentTarget.name}`]: event.currentTarget.value\n      })\n    }));\n  };\n\n  const InputStyle = {\n    textAlign: \"center\",\n    border: \"2px solid #2f4858\",\n    boxSizing: \"border-box\",\n    borderRadius: \"32px\",\n    width: \"80%\",\n    height: \"100%\",\n    marginBottom: \"1rem\",\n    fontSize: \"larger\",\n    padding: \"0 1rem\"\n  };\n  const PTagStyle = {\n    background: \"#e0bca3\",\n    borderRadius: \"31.5px\",\n    color: \"rgba(47,72,88,1)\",\n    width: \"8%\",\n    height: \"30%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: \"larger\",\n    padding: \"0 1rem\"\n  };\n  return __jsx(\"div\", {\n    className: styles.FPEditorMainContainer\n  }, __jsx(\"div\", {\n    className: \"ModalOpenerContainer\",\n    style: ModalOpenerContainerStyle\n  }, __jsx(\"p\", {\n    style: MOCHeader\n  }, \"\\u0424\\u0438\\u043D\\u0430\\u043B\\u044C\\u043D\\u0430\\u044F \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430\"), __jsx(\"button\", {\n    onClick: () => setIsOpen(true),\n    style: BTNOpenModel\n  }, __jsx(\"p\", {\n    style: {\n      color: \"rgb(47 71\t88)\t\",\n      fontSize: \"24px\",\n      margin: \"1rem 0 \"\n    }\n  }, \"\\u0422\\u0435\\u043A\\u0441\\u0442\"), PlusSign(22, \"rgb(47, 71, 88)\")), __jsx(\"div\", {\n    style: EmailContainer\n  }, __jsx(\"p\", {\n    style: {\n      fontSize: \"24px\",\n      marginRight: \"1rem\",\n      paddingRight: \"0.4rem\",\n      fontFamily: \"Montserrat , sans-serif\"\n    }\n  }, \"Email\"), __jsx(Switch, {\n    id: \"activationToggle\",\n    onChange: (checked, _, __) => props.toggleEmail(checked),\n    checked: props.emailState,\n    onColor: \"#0AB496\",\n    offColor: \"#8A8A8A\",\n    uncheckedIcon: false,\n    checkedIcon: false,\n    handleDiameter: 18,\n    width: 46,\n    height: 30\n  }))), isOpen && __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      zIndex: 100,\n      position: \"absolute\",\n      top: \"0\",\n      left: \"0\",\n      width: \"100vw\",\n      height: \"100vh\",\n      backgroundColor: \"rgba(224, 188, 163, 0.6)\"\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: \"76%\",\n      height: \"70%\",\n      backgroundColor: \"whitesmoke\",\n      border: \"1px, solid, rgba(0, 0, 0, 0)\",\n      borderRadius: \"14px\"\n    }\n  }, __jsx(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      width: \"100%\",\n      height: \"100%\"\n    }\n  }, props.testLang.map((lang, iterator) => __jsx(\"div\", {\n    id: \"inner container with lang\",\n    style: {\n      width: \"75%\",\n      height: \"25%\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      justifyContent: \"space-between\"\n    }\n  }, __jsx(\"div\", {\n    style: PTagStyle\n  }, __jsx(\"p\", null, lang === \"lv\" ? \"LAT\" : lang === \"en\" ? \"ENG\" : \"RUS\")), __jsx(\"div\", {\n    style: {\n      width: \"85%\" // display: \"flex\",\n      // flexDirection: \"row\",\n\n    }\n  }, __jsx(\"div\", {\n    style: {\n      justifyContent: \"space-around\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      height: \"3rem\",\n      marginBottom: \"1rem\"\n    }\n  }, __jsx(\"input\", {\n    maxLength: finalPageHeaderLimit,\n    style: InputStyle,\n    id: `${lang}_${iterator}_Header`,\n    name: \"Heading\",\n    onChange: handleInputChange,\n    placeholder: `Верхний текст на ${lang === \"lv\" ? \"латышском\" : lang === \"en\" ? \"английском\" : \"русском\"} языке`,\n    type: \"text\",\n    defaultValue: props.test[lang].finalPageTextHeading\n  }), __jsx(\"p\", null, props.test[lang].finalPageTextHeading.length, \" /\", \" \", finalPageHeaderLimit)), __jsx(\"div\", {\n    style: {\n      justifyContent: \"space-around\",\n      display: \"flex\",\n      flexDirection: \"row\",\n      height: \"3rem\"\n    }\n  }, __jsx(\"input\", {\n    maxLength: finalPageBodyLimit,\n    style: InputStyle,\n    id: `${lang}_${iterator}_Body`,\n    name: \"Body\",\n    onChange: handleInputChange,\n    placeholder: `Нижний текст на ${lang === \"lv\" ? \"латышском\" : lang === \"en\" ? \"английском\" : \"русском\"} языке`,\n    type: \"text\",\n    defaultValue: props.test[lang].finalPageTextBody\n  }), __jsx(\"p\", null, props.test[lang].finalPageTextBody.length, \" /\", \" \", finalPageBodyLimit))))), __jsx(\"button\", {\n    onClick: () => setIsOpen(false),\n    style: {\n      background: \"none\",\n      border: \"none\",\n      position: \"absolute\",\n      bottom: \"18%\"\n    }\n  }, SaveBtn())))));\n};\n\nexport default FinalPageEditor;","map":null,"metadata":{},"sourceType":"module"}