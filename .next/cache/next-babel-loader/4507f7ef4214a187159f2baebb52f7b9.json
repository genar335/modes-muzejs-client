{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yberfox/Documents/personal-projects/modes-muzejs-client/components/EmailDownloadBtn.tsx\";\n\nvar __jsx = React.createElement;\nimport Axios from \"axios\";\nimport React from \"react\";\nimport emailIcon from \"../GAssets/download-email.png\";\nimport { productionURL } from \"./constants\";\nimport style from \"./styles/EmailDownloadBtn.module.scss\";\nexport var EmailDownloadBtn = function EmailDownloadBtn() {\n  var handleClick = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var emails, csvContent, headers, emailStr, encodedUri, a;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return Axios.get(\"\".concat(productionURL, \"tests/allEmails\"));\n\n            case 3:\n              _context.next = 5;\n              return _context.sent.data;\n\n            case 5:\n              emails = _context.sent;\n              csvContent = \"data:text/csv;charset=utf-8,\";\n              headers = \"Email,Created at,Updated at\\n\";\n              emailStr = emails.map(function (email) {\n                return [email.email, new Date(email.createdAt).toLocaleDateString(), new Date(email.updatedAt).toLocaleDateString()].join(\",\");\n              }).join(\",\\n\\r\");\n              console.log(emailStr);\n              encodedUri = encodeURI(\"\".concat(csvContent).concat(headers).concat(emailStr)); // window.open(encodedUri);\n\n              a = document.createElement(\"a\");\n              a.href = encodedUri;\n              a.style.display = 'none';\n              a.download = 'Emails';\n              document.body.appendChild(a);\n              a.click();\n              a.parentNode.removeChild(a);\n              _context.next = 23;\n              break;\n\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 20]]);\n    }));\n\n    return function handleClick() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"button\", {\n    className: style.dButton,\n    onClick: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: emailIcon,\n    alt: \"Icon showing a mail with an arrow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }));\n};\n_c = EmailDownloadBtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailDownloadBtn\");","map":{"version":3,"sources":["/Users/yberfox/Documents/personal-projects/modes-muzejs-client/components/EmailDownloadBtn.tsx"],"names":["Axios","React","emailIcon","productionURL","style","EmailDownloadBtn","handleClick","get","data","emails","csvContent","headers","emailStr","map","email","Date","createdAt","toLocaleDateString","updatedAt","join","console","log","encodedUri","encodeURI","a","document","createElement","href","display","download","body","appendChild","click","parentNode","removeChild","error","dButton"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAAQC,aAAR,QAA4B,aAA5B;AAEA,OAAOC,KAAP,MAAkB,uCAAlB;AAUA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAClC,MAAMC,WAAW;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGFN,KAAK,CAACO,GAAN,WAAaJ,aAAb,qBAHE;;AAAA;AAAA;AAAA,mCAIVK,IAJU;;AAAA;AAENC,cAAAA,MAFM;AAMNC,cAAAA,UANM,GAMO,8BANP;AAONC,cAAAA,OAPM,GAOI,+BAPJ;AAQNC,cAAAA,QARM,GAQKH,MAAM,CAClBI,GADY,CACR,UAACC,KAAD;AAAA,uBACD,CACIA,KAAK,CAACA,KADV,EAEI,IAAIC,IAAJ,CAASD,KAAK,CAACE,SAAf,EAA0BC,kBAA1B,EAFJ,EAGI,IAAIF,IAAJ,CAASD,KAAK,CAACI,SAAf,EAA0BD,kBAA1B,EAHJ,EAIEE,IAJF,CAIO,GAJP,CADC;AAAA,eADQ,EAQZA,IARY,CAQP,OARO,CARL;AAiBZC,cAAAA,OAAO,CAACC,GAAR,CAAYT,QAAZ;AACMU,cAAAA,UAlBM,GAkBOC,SAAS,WAAIb,UAAJ,SAAiBC,OAAjB,SAA2BC,QAA3B,EAlBhB,EAmBZ;;AACMY,cAAAA,CApBM,GAoBFC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CApBE;AAqBZF,cAAAA,CAAC,CAACG,IAAF,GAASL,UAAT;AACAE,cAAAA,CAAC,CAACpB,KAAF,CAAQwB,OAAR,GAAkB,MAAlB;AACAJ,cAAAA,CAAC,CAACK,QAAF,GAAa,QAAb;AACAJ,cAAAA,QAAQ,CAACK,IAAT,CAAcC,WAAd,CAA0BP,CAA1B;AACAA,cAAAA,CAAC,CAACQ,KAAF;AACAR,cAAAA,CAAC,CAACS,UAAF,CAAcC,WAAd,CAA0BV,CAA1B;AA1BY;AAAA;;AAAA;AAAA;AAAA;AA4BZJ,cAAAA,OAAO,CAACe,KAAR;;AA5BY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAX7B,WAAW;AAAA;AAAA;AAAA,KAAjB;;AA+BA,SACI;AAAQ,IAAA,SAAS,EAAEF,KAAK,CAACgC,OAAzB;AAAkC,IAAA,OAAO,EAAE9B,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEJ,SAAV;AAAqB,IAAA,GAAG,EAAC,mCAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,CArCM;KAAMG,gB","sourcesContent":["import Axios from \"axios\";\nimport React from \"react\";\nimport emailIcon from \"../GAssets/download-email.png\";\nimport {productionURL} from \"./constants\";\n\nimport style from \"./styles/EmailDownloadBtn.module.scss\";\n\ntype EmailObj = {\n    createdAt: string;\n    email: string;\n    updatedAt: string;\n    __v: number;\n    _id: string;\n};\n\nexport const EmailDownloadBtn = () => {\n    const handleClick = async () => {\n        try {\n            const emails: EmailObj[] = await (\n                await Axios.get(`${productionURL}tests/allEmails`)\n            ).data;\n\n            const csvContent = \"data:text/csv;charset=utf-8,\";\n            const headers = \"Email,Created at,Updated at\\n\";\n            const emailStr = emails\n                .map((email) =>\n                    [\n                        email.email,\n                        new Date(email.createdAt).toLocaleDateString(),\n                        new Date(email.updatedAt).toLocaleDateString(),\n                    ].join(\",\")\n                )\n                .join(\",\\n\\r\");\n            console.log(emailStr);\n            const encodedUri = encodeURI(`${csvContent}${headers}${emailStr}`);\n            // window.open(encodedUri);\n            const a = document.createElement(\"a\")\n            a.href = encodedUri\n            a.style.display = 'none'\n            a.download = 'Emails'\n            document.body.appendChild(a)\n            a.click()\n            a.parentNode!.removeChild(a)\n        } catch (error) {\n            console.error(error);\n        }\n    };\n    return (\n        <button className={style.dButton} onClick={handleClick}>\n            <img src={emailIcon} alt=\"Icon showing a mail with an arrow\"/>\n        </button>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}