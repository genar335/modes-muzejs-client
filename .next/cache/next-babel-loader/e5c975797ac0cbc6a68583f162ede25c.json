{"ast":null,"code":"var _jsxFileName = \"/Users/yberfox/Documents/personal-projects/modes-muzejs-client/components/PagesController.tsx\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { motion } from \"framer-motion\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Carousel from \"react-multi-carousel\";\nimport { responsive } from \"./constants\";\nimport FMLogo from \"./FMlogo\"; // import \"react-multi-carousel/lib/styles.css\";\n\nimport compStyle from \"./styles/PagesController.module.scss\";\n\nconst PagesController = props => {\n  const {\n    0: pagesAmount,\n    1: setPagesAmount\n  } = useState([...Array(props.currentPages).keys()]);\n  useEffect(() => {\n    setPagesAmount([...Array(props.currentPages).keys()]); // if (didMountRef.current) {\n    //   console.log(\"component mounted\");\n    // } else {\n    //   console.log(\"componenet updated\");\n    // }\n  }, [props.currentPages]); //* Effect for setting the border to the first page when there are no other pages.\n\n  useEffect(() => {\n    if (document.getElementsByClassName(compStyle.Page).length <= 1) {\n      var _document$getElementB;\n\n      (_document$getElementB = document.getElementById(\"0\")) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.classList.add(compStyle.Selected);\n    }\n  });\n  const didMountRef = useRef();\n\n  const CustomRightArrow = (_ref) => {\n    let {\n      onClick\n    } = _ref,\n        rest = _objectWithoutProperties(_ref, [\"onClick\"]);\n\n    // const {\n    //   onMove,\n    //   carouselState: { currentSlide, deviceType },\n    // } = rest;\n    // onMove means if dragging or swiping in progress.\n    return __jsx(\"button\", {\n      className: compStyle.carRightArrow,\n      onClick: () => onClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, Arrow());\n  };\n\n  const CustomLeftArrow = (_ref2) => {\n    let {\n      onClick\n    } = _ref2,\n        rest = _objectWithoutProperties(_ref2, [\"onClick\"]);\n\n    // const {\n    //   onMove,\n    //   carouselState: { currentSlide, deviceType },\n    // } = rest;\n    return __jsx(\"button\", {\n      onClick: () => onClick(),\n      className: compStyle.carLeftArrow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, Arrow());\n  };\n\n  const handlePageClick = (e, indexOfActivePage) => {\n    console.log(\"clicked on a page\", e.currentTarget.id);\n    const pagesArray = getAllPages();\n    setActivePage(pagesArray, indexOfActivePage, props);\n  };\n\n  return __jsx(\"div\", {\n    className: compStyle.Wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: compStyle.BGContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, __jsx(Carousel, {\n    containerClass: compStyle.Carousel,\n    itemClass: compStyle.Item,\n    responsive: responsive // customRightArrow={<CustomRightArrow />}\n    // customLeftArrow={<CustomLeftArrow />}\n    ,\n    dotListClass: compStyle.CarouselDots,\n    showDots: true // ssr\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, pagesAmount.map(page => {\n    return __jsx(\"div\", {\n      key: page,\n      id: String(page),\n      onClick: e => handlePageClick(e, page),\n      className: `${compStyle.Page}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }, __jsx(motion.div, {\n      variants: {\n        hidden: {\n          opacity: 1\n        }\n      },\n      animate: \"hidden\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, __jsx(FMLogo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 19\n      }\n    }), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 19\n      }\n    }, page + 1)));\n  }))));\n};\n\nexport const Arrow = (width, height) => __jsx(\"svg\", {\n  width: `${width || \"15\"}`,\n  height: `${height || \"21\"}`,\n  viewBox: \"0 0 15 26\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 3\n  }\n}, __jsx(\"path\", {\n  d: \"M2 24L13 13L2 2\",\n  stroke: \"#2F4858\",\n  strokeWidth: \"3\",\n  strokeLinecap: \"round\",\n  strokeLinejoin: \"round\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }\n}));\nexport default PagesController;\n\nfunction getAllPages() {\n  return Array.from(document.getElementsByClassName(compStyle.Page));\n}\n\nfunction setActivePage(pagesArray, indexOfActivePage, props) {\n  // console.log(\"setting the green border\");\n  pagesArray.forEach((page, index) => {\n    index === indexOfActivePage ? page.classList.add(compStyle.Selected) : page.classList.remove(compStyle.Selected);\n  });\n  props.setActivePage(indexOfActivePage);\n}","map":{"version":3,"sources":["/Users/yberfox/Documents/personal-projects/modes-muzejs-client/components/PagesController.tsx"],"names":["motion","React","useEffect","useRef","useState","Carousel","responsive","FMLogo","compStyle","PagesController","props","pagesAmount","setPagesAmount","Array","currentPages","keys","document","getElementsByClassName","Page","length","getElementById","classList","add","Selected","didMountRef","CustomRightArrow","onClick","rest","carRightArrow","Arrow","CustomLeftArrow","carLeftArrow","handlePageClick","e","indexOfActivePage","console","log","currentTarget","id","pagesArray","getAllPages","setActivePage","Wrapper","BGContainer","Item","CarouselDots","map","page","String","hidden","opacity","width","height","from","forEach","index","remove"],"mappings":"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","sourcesContent":["import { motion } from \"framer-motion\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Carousel from \"react-multi-carousel\";\nimport { responsive } from \"./constants\";\nimport FMLogo from \"./FMlogo\";\n// import \"react-multi-carousel/lib/styles.css\";\n\nimport compStyle from \"./styles/PagesController.module.scss\";\n\nconst PagesController = (props: {\n  activePage: number;\n  setActivePage: (index: number) => void;\n  currentPages: number;\n}) => {\n  const [pagesAmount, setPagesAmount] = useState<Array<number>>([\n    ...Array(props.currentPages).keys(),\n  ]);\n\n  useEffect(() => {\n    setPagesAmount([...Array(props.currentPages).keys()]);\n    // if (didMountRef.current) {\n    //   console.log(\"component mounted\");\n    // } else {\n    //   console.log(\"componenet updated\");\n    // }\n  }, [props.currentPages]);\n  //* Effect for setting the border to the first page when there are no other pages.\n  useEffect(() => {\n    if (document.getElementsByClassName(compStyle.Page).length <= 1) {\n      document.getElementById(\"0\")?.classList.add(compStyle.Selected);\n    }\n  });\n\n  const didMountRef = useRef();\n\n  const CustomRightArrow = ({\n    onClick,\n    ...rest\n  }: {\n    onClick: any;\n    rest: any;\n  }) => {\n    // const {\n    //   onMove,\n    //   carouselState: { currentSlide, deviceType },\n    // } = rest;\n    // onMove means if dragging or swiping in progress.\n    return (\n      <button className={compStyle.carRightArrow} onClick={() => onClick()}>\n        {Arrow()}\n      </button>\n    );\n  };\n\n  const CustomLeftArrow = ({\n    onClick,\n    ...rest\n  }: {\n    onClick: any;\n    rest: any;\n  }) => {\n    // const {\n    //   onMove,\n    //   carouselState: { currentSlide, deviceType },\n    // } = rest;\n    return (\n      <button onClick={() => onClick()} className={compStyle.carLeftArrow}>\n        {Arrow()}\n      </button>\n    );\n  };\n\n  const handlePageClick = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    indexOfActivePage: number\n  ) => {\n    console.log(\"clicked on a page\", e.currentTarget.id);\n    const pagesArray = getAllPages();\n    setActivePage(pagesArray, indexOfActivePage, props);\n  };\n\n  return (\n    <div className={compStyle.Wrapper}>\n      <div className={compStyle.BGContainer}>\n        <Carousel\n          containerClass={compStyle.Carousel}\n          itemClass={compStyle.Item}\n          responsive={responsive}\n          // customRightArrow={<CustomRightArrow />}\n          // customLeftArrow={<CustomLeftArrow />}\n          dotListClass={compStyle.CarouselDots}\n          showDots\n          // ssr\n        >\n          {pagesAmount.map((page) => {\n            return (\n              <div\n                key={page}\n                id={String(page)}\n                onClick={(e) => handlePageClick(e, page)}\n                className={`${compStyle.Page}`}\n              >\n                <motion.div\n                  variants={{\n                    hidden: { opacity: 1 },\n                  }}\n                  animate=\"hidden\"\n                >\n                  <FMLogo />\n                  <span>{page + 1}</span>\n                </motion.div>\n              </div>\n            );\n          })}\n        </Carousel>\n      </div>\n    </div>\n  );\n};\n\nexport const Arrow = (width?: string, height?: string) => (\n  <svg\n    width={`${width || \"15\"}`}\n    height={`${height || \"21\"}`}\n    viewBox=\"0 0 15 26\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M2 24L13 13L2 2\"\n      stroke=\"#2F4858\"\n      strokeWidth=\"3\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n  </svg>\n);\n\nexport default PagesController;\n\nfunction getAllPages() {\n  return Array.from(document.getElementsByClassName(compStyle.Page));\n}\n\nfunction setActivePage(\n  pagesArray: Element[],\n  indexOfActivePage: number,\n  props: {\n    activePage: number;\n    setActivePage: (index: number) => void;\n    currentPages: number;\n  }\n) {\n  // console.log(\"setting the green border\");\n  pagesArray.forEach((page, index) => {\n    index === indexOfActivePage\n      ? page.classList.add(compStyle.Selected)\n      : page.classList.remove(compStyle.Selected);\n  });\n  props.setActivePage(indexOfActivePage);\n}\n"]},"metadata":{},"sourceType":"module"}