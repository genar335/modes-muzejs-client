{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/yberfox/Documents/personal-projects/modes-muzejs-client/components/Gallery.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport TestCard from \"./TestCard\";\nimport styles from \"./styles/Gallery.module.scss\";\n\nvar Gallery = function Gallery(props) {\n  _s();\n\n  var _useState = useState(),\n      recievedTests = _useState[0],\n      setRecievedTests = _useState[1]; // const getTests = async () => {\n  //   const fetchedTests: ITest[] = await props.getInactiveTests(false);\n  //   setRecievedTests(fetchedTests);\n  // };\n\n\n  return __jsx(\"div\", {\n    className: styles.Gallery,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: styles.GalleryHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"\\u0413\\u0430\\u043B\\u043B\\u0435\\u0440\\u0435\\u044F \\u0442\\u0435\\u0441\\u0442\\u043E\\u0432\"), __jsx(\"div\", {\n    className: styles.tCardContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, props.testsToRender ? props.testsToRender.map(function (test, iterator) {\n    return __jsx(\"div\", {\n      style: {\n        width: \"min-content\",\n        height: \"min-content\",\n        position: \"relative\"\n      },\n      key: \"cardBG_\".concat(iterator),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 15\n      }\n    }, __jsx(TestCard, {\n      fullTest: test,\n      key: iterator,\n      colour: \"brown\",\n      iterator: iterator,\n      _id: test._id || \"NA\",\n      active: false,\n      nameInRu: test.ru.name // parentComponentTestFetcher={getTests}\n      // mainTestFetcher={props.updateTheTest}\n      ,\n      updateTests: props.updateTheTests,\n      fetchAllTests: props.fetchAllTests,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }));\n  }) : null));\n};\n\n_s(Gallery, \"/iSet/ib18xS7DQpcrC9SLiXFtk=\");\n\n_c = Gallery;\nexport default Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["/Users/yberfox/Documents/personal-projects/modes-muzejs-client/components/Gallery.tsx"],"names":["React","useState","TestCard","styles","Gallery","props","recievedTests","setRecievedTests","GalleryHeader","tCardContainer","testsToRender","map","test","iterator","width","height","position","_id","ru","name","updateTheTests","fetchAllTests"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,OAAOC,MAAP,MAAmB,8BAAnB;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAKV;AAAA;;AAAA,kBACsCJ,QAAQ,EAD9C;AAAA,MACGK,aADH;AAAA,MACkBC,gBADlB,iBAEJ;AACA;AACA;AACA;;;AAEA,SACE;AAAK,IAAA,SAAS,EAAEJ,MAAM,CAACC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAED,MAAM,CAACK,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6FADF,EAiBE;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACM,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACK,aAAN,GACGL,KAAK,CAACK,aAAN,CAAoBC,GAApB,CAAwB,UAACC,IAAD,EAAcC,QAAd;AAAA,WACtB;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,aADF;AAELC,QAAAA,MAAM,EAAE,aAFH;AAGLC,QAAAA,QAAQ,EAAE;AAHL,OADT;AAME,MAAA,GAAG,mBAAYH,QAAZ,CANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,MAAC,QAAD;AACE,MAAA,QAAQ,EAAED,IADZ;AAEE,MAAA,GAAG,EAAEC,QAFP;AAGE,MAAA,MAAM,EAAC,OAHT;AAIE,MAAA,QAAQ,EAAEA,QAJZ;AAKE,MAAA,GAAG,EAAED,IAAI,CAACK,GAAL,IAAY,IALnB;AAME,MAAA,MAAM,EAAE,KANV;AAOE,MAAA,QAAQ,EAAEL,IAAI,CAACM,EAAL,CAAQC,IAPpB,CAQE;AACA;AATF;AAUE,MAAA,WAAW,EAAEd,KAAK,CAACe,cAVrB;AAWE,MAAA,aAAa,EAAEf,KAAK,CAACgB,aAXvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADsB;AAAA,GAAxB,CADH,GAyBG,IA1BN,CAjBF,CADF;AAgDD,CA5DD;;GAAMjB,O;;KAAAA,O;AA8DN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TestCard from \"./TestCard\";\nimport searchIcon from \"../GAssets/search_big.png\";\nimport styles from \"./styles/Gallery.module.scss\";\nimport { white } from \"./constants\";\nimport { ITest } from \"../@types/test\";\n\nconst Gallery = (props: {\n  // getInactiveTests: (active: boolean) => Promise<any>;\n  testsToRender: ITest[];\n  updateTheTests: (testID: string) => void;\n  fetchAllTests: () => Promise<void>;\n}) => {\n  const [recievedTests, setRecievedTests] = useState<ITest[]>();\n  // const getTests = async () => {\n  //   const fetchedTests: ITest[] = await props.getInactiveTests(false);\n  //   setRecievedTests(fetchedTests);\n  // };\n\n  return (\n    <div className={styles.Gallery}>\n      <h1 className={styles.GalleryHeader}>Галлерея тестов</h1>\n      {/* {<div className={styles.SearchAndFilter}>\n        <div className={styles.SearchContainer}>\n          <input type=\"search\" name=\"testSearch\" id=\"testSearch\" />\n          <button>\n            <img src={searchIcon} alt=\"Looking glass icon\" />\n          </button>\n        </div>\n        <select name=\"testTypeSelector\" className={styles.FilterContainer}>\n          <option value=\"\">Type1</option>\n          <option value=\"\">Type2</option>\n          <option value=\"\">Type3</option>\n          <option value=\"\">Type4</option>\n          <option value=\"\">Type5</option>\n        </select>} */}\n      {/* </div> */}\n      <div className={styles.tCardContainer}>\n        {props.testsToRender\n          ? props.testsToRender.map((test: ITest, iterator: number) => (\n              <div\n                style={{\n                  width: \"min-content\",\n                  height: \"min-content\",\n                  position: \"relative\",\n                }}\n                key={`cardBG_${iterator}`}\n              >\n                <TestCard\n                  fullTest={test}\n                  key={iterator}\n                  colour=\"brown\"\n                  iterator={iterator}\n                  _id={test._id || \"NA\"}\n                  active={false}\n                  nameInRu={test.ru.name}\n                  // parentComponentTestFetcher={getTests}\n                  // mainTestFetcher={props.updateTheTest}\n                  updateTests={props.updateTheTests}\n                  fetchAllTests={props.fetchAllTests}\n                />\n              </div>\n            ))\n          : null}\n      </div>\n    </div>\n  );\n};\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}