{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport styles from \"./styles/LogIn.module.scss\"; //import loadingIcon from \"../GAssets/loading_cat.gif\";\n\nimport loadingTriangle from \"../GAssets/ball-triangle.svg\";\nimport Router from \"next/router\";\n\nvar LogIn = function LogIn() {\n  var _useState = useState(false),\n      isLoading = _useState[0],\n      setIsLoading = _useState[1];\n\n  var _useState2 = useState({\n    name: \"\",\n    pass: \"\"\n  }),\n      inputData = _useState2[0],\n      setInputData = _useState2[1];\n\n  var sendData = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(inputData);\n              setIsLoading(true);\n              _context.prev = 2;\n              _context.next = 5;\n              return axios.post(\"http://localhost:4000/users/log_in\", {\n                name: inputData.name,\n                password: inputData.pass\n              }, {\n                withCredentials: true\n              });\n\n            case 5:\n              response = _context.sent;\n              console.log(response.status);\n              _context.next = 9;\n              return Router.push(\"/\");\n\n            case 9:\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](2);\n              alert(_context.t0);\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 11]]);\n    }));\n\n    return function sendData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var handleFormSubmission = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n\n              if (!(inputData.pass.length <= 4 || inputData.name.length <= 4)) {\n                _context2.next = 5;\n                break;\n              }\n\n              alert(\"Username and password must be longer than 4 characters\");\n              _context2.next = 7;\n              break;\n\n            case 5:\n              _context2.next = 7;\n              return sendData();\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleFormSubmission(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: styles.LogInFormContainer\n  }, isLoading ? __jsx(\"div\", {\n    className: styles.loadingModal\n  }, __jsx(\"img\", {\n    src: loadingTriangle,\n    alt: \"cat\"\n  }), __jsx(\"p\", null, \"Please wait\")) : null, __jsx(\"form\", {\n    onSubmit: handleFormSubmission,\n    className: styles.infoForm\n  }, __jsx(\"div\", {\n    id: \"u_name\",\n    className: styles.inputField\n  }, __jsx(\"label\", {\n    htmlFor: \"name\"\n  }, \"Username:\"), __jsx(\"input\", {\n    name: \"name\",\n    type: \"text\",\n    onChange: function onChange(e) {\n      return setInputData({\n        name: e.target.value,\n        pass: inputData.pass\n      });\n    }\n  })), __jsx(\"div\", {\n    id: \"u_pass\",\n    className: styles.inputField\n  }, __jsx(\"label\", {\n    htmlFor: \"pass\"\n  }, \"Password\"), __jsx(\"input\", {\n    type: \"password\",\n    onChange: function onChange(e) {\n      return setInputData({\n        pass: e.target.value,\n        name: inputData.name\n      });\n    }\n  })), __jsx(\"button\", {\n    disabled: isLoading,\n    type: \"submit\"\n  }, \"Log in\")));\n};\n\nexport default LogIn;","map":null,"metadata":{},"sourceType":"module"}