{"ast":null,"code":"var _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/pages/TMS/create_test.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport PagesController from \"../../components/PagesController\";\nimport PhotoManager from \"../../components/PhotoManager\";\nimport TestNamer from \"../../components/TestNamer\";\nimport TestPreview from \"../../components/TestPreview\";\nimport styles from \"../styles/create_test.module.scss\";\n\nfunction create_test() {\n  const {\n    0: currentPages,\n    1: setCurrentPages\n  } = useState(1);\n  let tmpPages = 0;\n  const {\n    0: test,\n    1: setTest\n  } = useState({\n    pages: currentPages,\n    en: {\n      name: \"\",\n      pages: []\n    },\n    lv: {\n      name: \"\",\n      pages: []\n    },\n    ru: {\n      name: \"\",\n      pages: []\n    },\n    type: \"\"\n  });\n\n  const saveTest = test => setTest(test);\n\n  const {\n    0: currentLang,\n    1: setCurrentLang\n  } = useState();\n\n  const handleClick = () => {\n    setTest({\n      ru: {\n        name: \"imya\",\n        pages: test.ru.pages\n      },\n      lv: test.lv,\n      en: test.en,\n      pages: test.pages,\n      type: \"TP\"\n    });\n  };\n\n  const typeOptions = [{\n    value: \"TT\",\n    label: \"Text – Text\"\n  }, {\n    value: \"TP\",\n    label: \"Text – Photo\"\n  }, {\n    value: \"PP\",\n    label: \"Photo – Photo\"\n  }];\n  const {\n    0: testType,\n    1: setTestType\n  } = useState();\n\n  const handleTypeChange = chosenType => setTestType(chosenType); // const [editEnabled, setEditEnabled] = useState<boolean>(false);\n  // useEffect(() => {\n  //   if ((currentLang && testType) != undefined) {\n  //     console.log(\"in an if\");\n  //     setEditEnabled(true);\n  //   } else {\n  //     setEditEnabled(false);\n  //   }\n  //   console.log(\"outside of if\");\n  //   console.log(currentLang, testType);\n  // }, [currentLang, testType]);\n\n\n  const handleNumberInputChange = event => {\n    tmpPages = Number(event.currentTarget.value);\n    tmpPages === 0 ? tmpPages = 1 : undefined;\n    console.log(tmpPages);\n  };\n\n  const handlePagesAddClick = event => {\n    setCurrentPages(tmpPages);\n  };\n\n  return __jsx(\"div\", {\n    className: styles.CreateTestContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.TestType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, __jsx(Select, {\n    options: typeOptions,\n    className: styles.TestTypeSelect,\n    onChange: selected => handleTypeChange(selected.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: styles.PageController,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles.AddPageCont,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    className: styles.AddPageBtn,\n    onClick: handlePagesAddClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, \"Add page +\"), __jsx(\"input\", {\n    type: \"number\",\n    name: \"pageCount\",\n    className: styles.NumberOfPagesToAdd,\n    onChange: handleNumberInputChange,\n    placeholder: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  })), __jsx(PagesController, {\n    currentPages: currentPages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  })), testType === \"TT\" || testType === undefined ? null : __jsx(PhotoManager, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: styles.TestNaming,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, __jsx(TestNamer, {\n    currentLang: currentLang,\n    saveTest: saveTest,\n    currentStateOfTest: test,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  })), __jsx(TestPreview, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default create_test;","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/pages/TMS/create_test.tsx"],"names":["React","useState","Select","PagesController","PhotoManager","TestNamer","TestPreview","styles","create_test","currentPages","setCurrentPages","tmpPages","test","setTest","pages","en","name","lv","ru","type","saveTest","currentLang","setCurrentLang","handleClick","typeOptions","value","label","testType","setTestType","handleTypeChange","chosenType","handleNumberInputChange","event","Number","currentTarget","undefined","console","log","handlePagesAddClick","CreateTestContainer","TestType","TestTypeSelect","selected","PageController","AddPageCont","AddPageBtn","NumberOfPagesToAdd","TestNaming"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Select from \"react-select\";\nimport { ITest, TLangOption, TTestTypes } from \"../../@types/test\";\nimport PagesController from \"../../components/PagesController\";\nimport PhotoManager from \"../../components/PhotoManager\";\nimport TestNamer from \"../../components/TestNamer\";\nimport TestPreview from \"../../components/TestPreview\";\nimport styles from \"../styles/create_test.module.scss\";\n\nfunction create_test() {\n  const [currentPages, setCurrentPages] = useState<number>(1);\n  let tmpPages: number = 0;\n  const [test, setTest] = useState<ITest>({\n    pages: currentPages,\n    en: {\n      name: \"\",\n      pages: [],\n    },\n    lv: {\n      name: \"\",\n      pages: [],\n    },\n    ru: {\n      name: \"\",\n      pages: [],\n    },\n    type: \"\",\n  });\n  const saveTest = (test: ITest): void => setTest(test);\n  const [currentLang, setCurrentLang] = useState<TLangOption>();\n  const handleClick = () => {\n    setTest({\n      ru: {\n        name: \"imya\",\n        pages: test.ru.pages,\n      },\n      lv: test.lv,\n      en: test.en,\n      pages: test.pages,\n      type: \"TP\",\n    });\n  };\n\n  type TTypeOptions = {\n    value: \"TT\" | \"TP\" | \"PP\";\n    label: \"Text – Text\" | \"Text – Photo\" | \"Photo – Photo\";\n  };\n  const typeOptions: Array<TTypeOptions> = [\n    { value: \"TT\", label: \"Text – Text\" },\n    { value: \"TP\", label: \"Text – Photo\" },\n    { value: \"PP\", label: \"Photo – Photo\" },\n  ];\n\n  const [testType, setTestType] = useState<TTestTypes>();\n  const handleTypeChange = (chosenType: TTestTypes): void =>\n    setTestType(chosenType);\n\n  // const [editEnabled, setEditEnabled] = useState<boolean>(false);\n  // useEffect(() => {\n  //   if ((currentLang && testType) != undefined) {\n  //     console.log(\"in an if\");\n  //     setEditEnabled(true);\n  //   } else {\n  //     setEditEnabled(false);\n  //   }\n  //   console.log(\"outside of if\");\n  //   console.log(currentLang, testType);\n  // }, [currentLang, testType]);\n\n  const handleNumberInputChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    tmpPages = Number(event.currentTarget.value);\n    tmpPages === 0 ? (tmpPages = 1) : undefined;\n    console.log(tmpPages);\n  };\n\n  const handlePagesAddClick = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    setCurrentPages(tmpPages);\n  };\n\n  return (\n    <div className={styles.CreateTestContainer}>\n      <div className={styles.TestType}>\n        <Select\n          options={typeOptions}\n          className={styles.TestTypeSelect}\n          onChange={(selected: any): void => handleTypeChange(selected.value)}\n        />\n      </div>\n      <div className={styles.PageController}>\n        <div className={styles.AddPageCont}>\n          <button className={styles.AddPageBtn} onClick={handlePagesAddClick}>\n            Add page +\n          </button>\n          <input\n            type=\"number\"\n            name=\"pageCount\"\n            className={styles.NumberOfPagesToAdd}\n            onChange={handleNumberInputChange}\n            placeholder={\"1\"}\n          />\n        </div>\n        <PagesController currentPages={currentPages} />\n      </div>\n      {testType === ((\"TT\" as unknown) as TTestTypes) ||\n      testType === undefined ? null : (\n        <PhotoManager />\n      )}\n      <div className={styles.TestNaming}>\n        <TestNamer\n          currentLang={currentLang}\n          saveTest={saveTest}\n          currentStateOfTest={test}\n        />\n      </div>\n      <TestPreview />\n    </div>\n  );\n}\n\nexport default create_test;\n"]},"metadata":{},"sourceType":"module"}