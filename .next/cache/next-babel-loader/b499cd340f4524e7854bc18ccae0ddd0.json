{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/TestCard.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport editIcon from \"../GAssets/create_icon_big.png\";\nimport styles from \"./styles/TestCard.module.scss\";\nimport Switch from \"react-switch\";\nimport Axios from \"axios\";\nimport { devURL } from \"./constants\";\n\nvar TestCard = function TestCard(props) {\n  _s();\n\n  var CardStyle = {\n    background: \"rgb(\".concat(props.colour, \")\")\n  };\n\n  var _useState = useState(props.active),\n      isActive = _useState[0],\n      setIsActive = _useState[1];\n\n  var changeTestState = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(testID, isActive) {\n      var changedTest, responseFromServer;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return Axios.post(\"\".concat(devURL, \"tests/toggleTestActiveState\"), {\n                testID: testID,\n                isActive: isActive\n              });\n\n            case 3:\n              responseFromServer = _context.sent;\n              changedTest = responseFromServer.data; // setIsActive(changedTest.active);\n\n              console.log(changedTest, \"recieved a response\");\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function changeTestState(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }(); // console.log(props);\n\n\n  var handleActiveChange = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return changeTestState(props._id, !isActive);\n\n            case 2:\n              console.log(\"Calling all tests\");\n              props.updateTests(props._id);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleActiveChange() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    key: props._id,\n    id: props._id,\n    className: styles.TestCard,\n    style: CardStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, __jsx(Switch, {\n    onChange: handleActiveChange,\n    checked: props.active,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), __jsx(\"img\", {\n    src: editIcon,\n    alt: \"Edit icon\",\n    className: styles.LookingGlass,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), __jsx(\"h1\", {\n    onClick: handleActiveChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Test title in ru: \", props.nameInRu), __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Test id: \", props._id), __jsx(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, \"Main question of test\"));\n};\n\n_s(TestCard, \"9xbITl6yubb84TaGyXQDGsWHuTA=\");\n\n_c = TestCard;\nexport default TestCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestCard\");","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/TestCard.tsx"],"names":["React","useState","editIcon","styles","Switch","Axios","devURL","TestCard","props","CardStyle","background","colour","active","isActive","setIsActive","changeTestState","testID","post","responseFromServer","changedTest","data","console","log","error","handleActiveChange","_id","updateTests","LookingGlass","nameInRu"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,aAAvB;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EASX;AAAA;;AACJ,MAAMC,SAAiB,GAAG;AACxBC,IAAAA,UAAU,gBAASF,KAAK,CAACG,MAAf;AADc,GAA1B;;AADI,kBAK4BV,QAAQ,CAAUO,KAAK,CAACI,MAAhB,CALpC;AAAA,MAKGC,QALH;AAAA,MAKaC,WALb;;AAOJ,MAAMC,eAAe;AAAA,wEAAG,iBAAOC,MAAP,EAAuBH,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAGaR,KAAK,CAACY,IAAN,WAC5BX,MAD4B,kCAE/B;AACEU,gBAAAA,MAAM,EAANA,MADF;AAEEH,gBAAAA,QAAQ,EAARA;AAFF,eAF+B,CAHb;;AAAA;AAGdK,cAAAA,kBAHc;AAUpBC,cAAAA,WAAW,GAAGD,kBAAkB,CAACE,IAAjC,CAVoB,CAWpB;;AACAC,cAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ,EAAyB,qBAAzB;AAZoB;AAAA;;AAAA;AAAA;AAAA;AAcpBE,cAAAA,OAAO,CAACE,KAAR;;AAdoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAfR,eAAe;AAAA;AAAA;AAAA,KAArB,CAPI,CAwBJ;;;AACA,MAAMS,kBAAkB;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEnBT,eAAe,CAACP,KAAK,CAACiB,GAAP,EAAY,CAACZ,QAAb,CAFI;;AAAA;AAGzBQ,cAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAd,cAAAA,KAAK,CAACkB,WAAN,CAAkBlB,KAAK,CAACiB,GAAxB;;AAJyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAlBD,kBAAkB;AAAA;AAAA;AAAA,KAAxB;;AAOA,SACE;AACE,IAAA,GAAG,EAAEhB,KAAK,CAACiB,GADb;AAEE,IAAA,EAAE,EAAEjB,KAAK,CAACiB,GAFZ;AAGE,IAAA,SAAS,EAAEtB,MAAM,CAACI,QAHpB;AAIE,IAAA,KAAK,EAAEE,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEe,kBAAlB;AAAsC,IAAA,OAAO,EAAEhB,KAAK,CAACI,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAUE;AAAK,IAAA,GAAG,EAAEV,QAAV;AAAoB,IAAA,GAAG,EAAC,WAAxB;AAAoC,IAAA,SAAS,EAAEC,MAAM,CAACwB,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWE;AAAI,IAAA,OAAO,EAAEH,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAoDhB,KAAK,CAACoB,QAA1D,CAXF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcpB,KAAK,CAACiB,GAApB,CAZF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAbF,CADF;AAiBD,CA1DD;;GAAMlB,Q;;KAAAA,Q;AA4DN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport editIcon from \"../GAssets/create_icon_big.png\";\nimport styles from \"./styles/TestCard.module.scss\";\nimport Switch from \"react-switch\";\nimport Axios from \"axios\";\nimport { devURL } from \"./constants\";\nimport { ITest } from \"../@types/test\";\n\nconst TestCard = (props: {\n  iterator: number;\n  colour: string;\n  _id: string;\n  nameInRu: string;\n  active: boolean;\n  // parentComponentTestFetcher: () => Promise<void>;\n  // mainTestFetcher: () => Promise<void>;\n  updateTests: (testID: string) => void;\n}) => {\n  const CardStyle: Object = {\n    background: `rgb(${props.colour})`,\n  };\n\n  const [isActive, setIsActive] = useState<boolean>(props.active);\n\n  const changeTestState = async (testID: string, isActive: boolean) => {\n    let changedTest: ITest;\n    try {\n      const responseFromServer = await Axios.post(\n        `${devURL}tests/toggleTestActiveState`,\n        {\n          testID,\n          isActive,\n        }\n      );\n      changedTest = responseFromServer.data;\n      // setIsActive(changedTest.active);\n      console.log(changedTest, \"recieved a response\");\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  // console.log(props);\n  const handleActiveChange = async () => {\n    // setIsActive(!isActive);\n    await changeTestState(props._id, !isActive);\n    console.log(\"Calling all tests\");\n    props.updateTests(props._id);\n  };\n\n  return (\n    <div\n      key={props._id}\n      id={props._id}\n      className={styles.TestCard}\n      style={CardStyle}\n    >\n      <Switch onChange={handleActiveChange} checked={props.active} />\n      {/* \n      //! Need to figure out how to time the switch\n      */}\n      <img src={editIcon} alt=\"Edit icon\" className={styles.LookingGlass} />\n      <h1 onClick={handleActiveChange}>Test title in ru: {props.nameInRu}</h1>\n      <h2>Test id: {props._id}</h2>\n      <span>Main question of test</span>\n    </div>\n  );\n};\n\nexport default TestCard;\n"]},"metadata":{},"sourceType":"module"}