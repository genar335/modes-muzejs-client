{"ast":null,"code":"var _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/QACard.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from \"react\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\nimport addCompStyles from \"./styles/TestNamer.module.scss\";\nimport { closeBtn, CreateLangSwitchers, SaveBtn } from \"./TestNamer\";\nimport { URLCheckForLocalHost } from \"./constants\";\n\nconst QACard = props => {\n  const charLimit = 90;\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false); // console.log(props.cardContents);\n  // console.log(\"Test for page contents\", props.pageContents);\n\n  const textPreviewer = text => {\n    // console.log(\"Hello from text preview\");\n    if (text.match(URLCheckForLocalHost) !== null) {\n      console.log(\"Hello there from URL checker\");\n      return \"There was an image before\";\n    }\n\n    if (text.length < 1) return __jsx(\"div\", {\n      className: compStyles.emptyText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 33\n      }\n    }, \"T\");\n\n    if (text.length > charLimit) {\n      return text.slice(0, 65) + \"...\";\n    } else {\n      return text;\n    }\n  };\n\n  const QACardRefIMG = useRef(null); // useEffect(() => {\n  //   console.log(\"Yayyy\");\n  // }, [QACardRef.current]);\n\n  const handleCardReference = () => {\n    props.setCurrentCard(QACardRefIMG); // props.togglePhotoManager(false, `${props.cardType}_${props.iterator}`);\n  }; //! Image upload portion\n\n\n  const {\n    0: recievedIMGLocations,\n    1: setRecievedIMGLocation\n  } = useState([]);\n  const fileInputRef = useRef(null);\n\n  const readAnImage = async imageToBeRead => {\n    const tmpFileReader = new FileReader();\n    return new Promise((resolve, reject) => {\n      tmpFileReader.onerror = () => {\n        tmpFileReader.abort();\n        reject(new DOMException(\"Problem occured when reading the file.\"));\n      };\n\n      tmpFileReader.onload = () => {\n        resolve(tmpFileReader.result);\n      };\n\n      tmpFileReader.readAsDataURL(imageToBeRead);\n    });\n  };\n\n  const handleFileinput = async event => {\n    var _fileInputRef$current;\n\n    let tmp = [];\n    event.preventDefault();\n    console.log(fileInputRef.current.files[0]);\n\n    if (((_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.files) !== null) {\n      const chosenFile = fileInputRef.current.files[0];\n\n      if (fileInputRef.current) {\n        try {\n          const fileContents = await readAnImage(chosenFile);\n          console.log(fileContents); // tmp.push(fileContents);\n        } catch (error) {\n          alert(\"There was an error reading the file. Please try again, or choose a differenet file\");\n        }\n      }\n    } else {\n      alert(\"No file has been chosen.\");\n    } // sendTheDataToTheServer(tmp, setRecievedIMGLocation);\n\n\n    if (QACardRefIMG.current.src !== null) {\n      QACardRefIMG.current.src = recievedIMGLocations[0];\n    } // tmp.pop();\n    // setRecievedIMGLocation([]);\n\n  };\n\n  useEffect(() => {\n    var _fileInputRef$current2;\n\n    console.log(\"Input has \", (_fileInputRef$current2 = fileInputRef.current) === null || _fileInputRef$current2 === void 0 ? void 0 : _fileInputRef$current2.files);\n  }, [fileInputRef.current]);\n  return __jsx(\"div\", {\n    className: `${compStyles[props.cardType]}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    // ref={QACardRef}\n    id: `${props.cardType}_${props.iterator}`,\n    className: `${addCompStyles.ModalContainerBG} ${!isOpen ? addCompStyles.Hidden : null}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: addCompStyles.ModalContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, closeBtn(setIsOpen), __jsx(\"div\", {\n    className: addCompStyles.Modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, CreateLangSwitchers(props.setSelectedLanguage, props.inputEnabler, props.currentLang), __jsx(\"div\", {\n    className: addCompStyles.NameForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, props.cardContents === \"text\" && props.q_a_TextEntry(props.cardType, props.iterator)), __jsx(\"button\", {\n    onClick: e => setIsOpen(!isOpen),\n    className: addCompStyles.SaveBtn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, SaveBtn())))), __jsx(\"div\", {\n    className: compStyles.QADescription,\n    onClick: e => {\n      props.cardContents === \"img\" ? handleCardReference() : setIsOpen(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, props.cardContents === \"text\" ? __jsx(\"p\", {\n    className: compStyles.textInACard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, textPreviewer(props.qna[props.cardType])) : __jsx(\"form\", {\n    onSubmit: handleFileinput,\n    className: compStyles.IMGForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    className: compStyles.FileChooser,\n    type: \"file\",\n    accept: \"image/*\",\n    ref: fileInputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    type: \"submit\",\n    value: \"Upload the image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  }), __jsx(\"img\", {\n    id: `${props.cardType}_${props.iterator}_page-${props.pageNumber}` // onChange={(e) => console.log(\"YAyyy\")}\n    ,\n    className: compStyles.SelectedIMGPreview,\n    src: props.pageContents || \"\" // src={props.pageContents.match(URLCheck) ? props.pageContents : \"\"}\n    ,\n    alt: \"No image\",\n    ref: QACardRefIMG,\n    onClick: e => fileInputRef.current.click(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default QACard;","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/QACard.tsx"],"names":["React","useEffect","useRef","useState","compStyles","addCompStyles","closeBtn","CreateLangSwitchers","SaveBtn","URLCheckForLocalHost","QACard","props","charLimit","isOpen","setIsOpen","textPreviewer","text","match","console","log","length","emptyText","slice","QACardRefIMG","handleCardReference","setCurrentCard","recievedIMGLocations","setRecievedIMGLocation","fileInputRef","readAnImage","imageToBeRead","tmpFileReader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","result","readAsDataURL","handleFileinput","event","tmp","preventDefault","current","files","chosenFile","fileContents","error","alert","src","cardType","iterator","ModalContainerBG","Hidden","ModalContainer","Modal","setSelectedLanguage","inputEnabler","currentLang","NameForm","cardContents","q_a_TextEntry","e","QADescription","textInACard","qna","IMGForm","FileChooser","pageNumber","SelectedIMGPreview","pageContents","click"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { IQnA, TLangOption } from \"../@types/test\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\nimport addCompStyles from \"./styles/TestNamer.module.scss\";\nimport { closeBtn, CreateLangSwitchers, SaveBtn } from \"./TestNamer\";\nimport { URLCheck, URLCheckForLocalHost } from \"./constants\";\nimport { resolve } from \"path\";\nimport { sendTheDataToTheServer } from \"./PhotoManager\";\n\nconst QACard = (props: {\n  cardType: \"answer\" | \"question\";\n  cardContents: \"img\" | \"text\";\n  // saveData: (data) => void;\n  iterator: number;\n  setSelectedLanguage: (chooseLanguage: TLangOption[\"value\"]) => void;\n  inputEnabler: () => void;\n  qna: IQnA;\n  testType: any;\n  q_a_TextEntry: (type: \"answer\" | \"question\", id: number) => JSX.Element;\n  togglePhotoManager: (toggle: boolean, cardID: string) => void;\n  setCurrentCard: React.Dispatch<React.SetStateAction<undefined>>;\n  pageContents: string;\n  currentLang: TLangOption[\"value\"];\n  pageNumber: number;\n}) => {\n  const charLimit = 90;\n  const [isOpen, setIsOpen] = useState(false);\n  // console.log(props.cardContents);\n  // console.log(\"Test for page contents\", props.pageContents);\n\n  const textPreviewer = (text: string) => {\n    // console.log(\"Hello from text preview\");\n    if (text.match(URLCheckForLocalHost) !== null) {\n      console.log(\"Hello there from URL checker\");\n      return \"There was an image before\";\n    }\n    if (text.length < 1) return <div className={compStyles.emptyText}>T</div>;\n    if (text.length > charLimit) {\n      return text.slice(0, 65) + \"...\";\n    } else {\n      return text;\n    }\n  };\n\n  const QACardRefIMG = useRef(null);\n\n  // useEffect(() => {\n  //   console.log(\"Yayyy\");\n  // }, [QACardRef.current]);\n\n  const handleCardReference = () => {\n    props.setCurrentCard(QACardRefIMG);\n    // props.togglePhotoManager(false, `${props.cardType}_${props.iterator}`);\n  };\n\n  //! Image upload portion\n\n  const [recievedIMGLocations, setRecievedIMGLocation] = useState<\n    Array<string>\n  >([]);\n  const fileInputRef = useRef(null);\n\n  const readAnImage = async (imageToBeRead: Blob) => {\n    const tmpFileReader: FileReader = new FileReader();\n\n    return new Promise((resolve, reject) => {\n      tmpFileReader.onerror = () => {\n        tmpFileReader.abort();\n        reject(new DOMException(\"Problem occured when reading the file.\"));\n      };\n\n      tmpFileReader.onload = () => {\n        resolve(tmpFileReader.result);\n      };\n      tmpFileReader.readAsDataURL(imageToBeRead);\n    });\n  };\n\n  const handleFileinput = async (event: React.FormEvent<HTMLFormElement>) => {\n    let tmp = [];\n    event.preventDefault();\n    console.log(fileInputRef.current.files[0]);\n    if (fileInputRef.current?.files !== null) {\n      const chosenFile: File = fileInputRef!.current!.files[0];\n      if (fileInputRef.current) {\n        try {\n          const fileContents = await readAnImage(chosenFile);\n          console.log(fileContents);\n          // tmp.push(fileContents);\n        } catch (error) {\n          alert(\n            \"There was an error reading the file. Please try again, or choose a differenet file\"\n          );\n        }\n      }\n    } else {\n      alert(\"No file has been chosen.\");\n    }\n    // sendTheDataToTheServer(tmp, setRecievedIMGLocation);\n    if (QACardRefIMG.current.src !== null) {\n      QACardRefIMG!.current!.src = recievedIMGLocations[0];\n    }\n\n    // tmp.pop();\n    // setRecievedIMGLocation([]);\n  };\n\n  useEffect(() => {\n    console.log(\"Input has \", fileInputRef.current?.files);\n  }, [fileInputRef.current]);\n\n  return (\n    <div className={`${compStyles[props.cardType]}`}>\n      <div\n        // ref={QACardRef}\n        id={`${props.cardType}_${props.iterator}`}\n        className={`${addCompStyles.ModalContainerBG} ${\n          !isOpen ? addCompStyles.Hidden : null\n        }`}\n      >\n        <div className={addCompStyles.ModalContainer}>\n          {closeBtn(setIsOpen)}\n          <div className={addCompStyles.Modal}>\n            {CreateLangSwitchers(\n              props.setSelectedLanguage,\n              props.inputEnabler,\n              props.currentLang\n            )}\n            <div className={addCompStyles.NameForm}>\n              {props.cardContents === \"text\" &&\n                props.q_a_TextEntry(props.cardType, props.iterator)}\n            </div>\n            <button\n              onClick={(e) => setIsOpen(!isOpen)}\n              className={addCompStyles.SaveBtn}\n            >\n              {SaveBtn()}\n            </button>\n          </div>\n        </div>\n      </div>\n      <div\n        className={compStyles.QADescription}\n        onClick={(e) => {\n          props.cardContents === \"img\"\n            ? handleCardReference()\n            : setIsOpen(true);\n        }}\n      >\n        {props.cardContents === \"text\" ? (\n          <p className={compStyles.textInACard}>\n            {textPreviewer(props.qna[props.cardType])}\n          </p>\n        ) : (\n          <form onSubmit={handleFileinput} className={compStyles.IMGForm}>\n            <input\n              className={compStyles.FileChooser}\n              type=\"file\"\n              accept=\"image/*\"\n              ref={fileInputRef}\n            />\n            <input type=\"submit\" value=\"Upload the image\" />\n            <img\n              id={`${props.cardType}_${props.iterator}_page-${props.pageNumber}`}\n              // onChange={(e) => console.log(\"YAyyy\")}\n              className={compStyles.SelectedIMGPreview}\n              src={props.pageContents || \"\"}\n              // src={props.pageContents.match(URLCheck) ? props.pageContents : \"\"}\n              alt=\"No image\"\n              ref={QACardRefIMG}\n              onClick={(e) => fileInputRef.current.click()}\n            />\n          </form>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default QACard;\n"]},"metadata":{},"sourceType":"module"}