{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/pages/TMS/main.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport ActiveTests from \"../../components/ActiveTests\";\nimport { devURL } from \"../../components/constants\";\nimport Gallery from \"../../components/Gallery\";\nimport styles from \"../styles/main.module.scss\";\n\nvar main = function main() {\n  _s();\n\n  var getTestsByActive = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(isTestActive) {\n      var _tests;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return Axios.get(\"http://localhost:4000/tests/getTest?active=\".concat(isTestActive));\n\n            case 3:\n              _tests = _context.sent;\n              return _context.abrupt(\"return\", _tests.data);\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              alert(_context.t0);\n              return _context.abrupt(\"return\", []);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function getTestsByActive(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var _useState = useState({\n    activeTests: [],\n    inActiveTests: []\n  }),\n      tests = _useState[0],\n      setTests = _useState[1];\n\n  var getAllTests = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var serverResponse;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return Axios.get(\"\".concat(devURL, \"tests/allTests\"));\n\n            case 2:\n              serverResponse = _context2.sent;\n              return _context2.abrupt(\"return\", serverResponse.data);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function getAllTests() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var filterTests = function filterTests(activeTests, inActiveTests, arrToFilter) {\n    arrToFilter.forEach(function (test) {\n      test.active ? activeTests.push(test) : inActiveTests.push(test);\n    });\n  };\n\n  useEffect(function () {\n    var allTests = getAllTests(); // console.log(allTests.then((value: any) => filterTests(activeTests, inActiveTests ,value)));\n\n    var tmpactiveTests = [];\n    var tmpinActiveTests = [];\n    filterTests(tmpactiveTests, tmpinActiveTests, allTests);\n    setTests({\n      activeTests: tmpactiveTests,\n      inActiveTests: tmpinActiveTests\n    });\n  }, []);\n\n  var toggleTestActiveState = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              try {} catch (error) {\n                console.error(error);\n              }\n\n            case 1:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function toggleTestActiveState() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(\"div\", {\n    className: styles.MainContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, __jsx(ActiveTests, {\n    getActiveTests: getTestsByActive,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), __jsx(Gallery, {\n    getInactiveTests: getTestsByActive,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(main, \"8QCzhVpSacE4Sam0hr6NNHqJtq0=\");\n\nexport default main;","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/pages/TMS/main.tsx"],"names":["Axios","React","useEffect","useState","ActiveTests","devURL","Gallery","styles","main","getTestsByActive","isTestActive","get","tests","data","alert","activeTests","inActiveTests","setTests","getAllTests","serverResponse","filterTests","arrToFilter","forEach","test","active","push","allTests","tmpactiveTests","tmpinActiveTests","toggleTestActiveState","error","console","MainContainer"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { ITest } from \"../../@types/test\";\nimport ActiveTests from \"../../components/ActiveTests\";\nimport { devURL } from \"../../components/constants\";\nimport Gallery from \"../../components/Gallery\";\nimport styles from \"../styles/main.module.scss\";\nconst main = () => {\n  const getTestsByActive = async (isTestActive: boolean): Promise<any> => {\n    try {\n      const tests = await Axios.get(\n        `http://localhost:4000/tests/getTest?active=${isTestActive}`\n      );\n      return tests.data as ITest[];\n    } catch (error) {\n      alert(error);\n      return [];\n    }\n  };\n\n  const [tests, setTests] = useState({\n    activeTests: [],\n    inActiveTests: []\n  })\n\n  const getAllTests = async () => {\n    const serverResponse = await Axios.get(`${devURL}tests/allTests`);\n    return serverResponse.data\n  };\n\n  const filterTests = (activeTests: ITest[], inActiveTests: ITest[], arrToFilter: ITest[]) => {\n    arrToFilter.forEach((test: ITest) => {\n      test.active ? activeTests.push(test) : inActiveTests.push(test)\n    });\n  }\n\n  useEffect(() => {\n    const allTests: any = getAllTests();\n    // console.log(allTests.then((value: any) => filterTests(activeTests, inActiveTests ,value)));\n    let tmpactiveTests: Array<ITest> = [];\n    let tmpinActiveTests: Array<ITest> = [];\n    filterTests(tmpactiveTests, tmpinActiveTests, allTests);\n    setTests({\n      activeTests: tmpactiveTests,\n      inActiveTests: tmpinActiveTests\n    })\n  }, []);\n\n  const toggleTestActiveState = async () => {\n    try {\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <div className={styles.MainContainer}>\n      <ActiveTests getActiveTests={getTestsByActive} />\n      <Gallery getInactiveTests={getTestsByActive} />\n    </div>\n  );\n};\n\nexport default main;\n"]},"metadata":{},"sourceType":"module"}