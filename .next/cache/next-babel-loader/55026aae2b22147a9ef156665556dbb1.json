{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/LangBtnController.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport LanguageBtn from \"./LanguageBtn\";\nimport compStyle from \"./styles/LangBtnController.module.scss\";\n\nvar LangBtnController = function LangBtnController(props) {\n  _s();\n\n  var _useState = useState(),\n      activeBtnPosition = _useState[0],\n      setActiveBtnPosition = _useState[1];\n\n  var _useState2 = useState(props.active),\n      activeBtn = _useState2[0],\n      setActiveBtn = _useState2[1];\n  /**\n   * Sets currently active button.\n   * @param id of a button\n   */\n\n\n  var activeBtnSetter = function activeBtnSetter(id) {\n    return setActiveBtn(id);\n  };\n\n  var handleArrowClick = function handleArrowClick() {\n    activeBtnSwitcher(Btns);\n    console.log(Btns);\n  };\n\n  var arrowBtn;\n  useEffect(function () {\n    var _arrowBtn;\n\n    console.log(document.getElementById(\"arrowButton\"), \"found it\");\n    arrowBtn = document.getElementById(\"arrowButton\");\n    (_arrowBtn = arrowBtn) === null || _arrowBtn === void 0 ? void 0 : _arrowBtn.addEventListener(\"click\", handleArrowClick);\n    return function () {\n      var _arrowBtn2;\n\n      return (_arrowBtn2 = arrowBtn) === null || _arrowBtn2 === void 0 ? void 0 : _arrowBtn2.removeEventListener(\"click\", handleArrowClick);\n    };\n  });\n  useEffect(function () {});\n  useEffect(function () {\n    Btns.forEach(function (button) {\n      console.log(button[0].props.btnID);\n\n      if (button[0].props.btnID !== activeBtn) {\n        button[1] = false;\n      }\n    });\n    console.log(Btns);\n  }, [activeBtn]);\n  var Btns = props.BtnArray.map(function (button, key) {\n    return [__jsx(LanguageBtn, {\n      btnID: button,\n      btnText: button.toUpperCase(),\n      handleBtnClick: props.clickHandler,\n      inputEnabler: props.setIsNameEntryEnabled,\n      pressed: button === activeBtn ? true : false,\n      key: key,\n      langSelect: props.langSelector,\n      setActiveBtn: activeBtnSetter,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), button === activeBtn ? true : false];\n  });\n  return __jsx(\"div\", {\n    className: compStyle.LangSelect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, Btns.map(function (ele) {\n    return ele;\n  }));\n};\n\n_s(LangBtnController, \"Sr+nYDC5YYzQQSJBYjUCLf27WGU=\");\n\n_c = LangBtnController;\nexport default LangBtnController;\n\nfunction activeBtnSwitcher(Btns) {\n  var flatBtns = Btns.flat().filter(function (ele) {\n    return typeof ele != \"object\";\n  });\n  console.log(flatBtns);\n  var tPosition = flatBtns.indexOf(true);\n  console.log(tPosition);\n  flatBtns.pop();\n\n  if (tPosition == flatBtns.length) {\n    flatBtns.unshift(true);\n  } else {\n    flatBtns.unshift(false);\n  }\n\n  console.log(flatBtns, \"after manipulation\");\n  Btns.forEach(function (btn, index) {\n    return btn[1] = flatBtns[index];\n  });\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"LangBtnController\");","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/LangBtnController.tsx"],"names":["React","useEffect","useState","LanguageBtn","compStyle","LangBtnController","props","activeBtnPosition","setActiveBtnPosition","active","activeBtn","setActiveBtn","activeBtnSetter","id","handleArrowClick","activeBtnSwitcher","Btns","console","log","arrowBtn","document","getElementById","addEventListener","removeEventListener","forEach","button","btnID","BtnArray","map","key","toUpperCase","clickHandler","setIsNameEntryEnabled","langSelector","LangSelect","ele","flatBtns","flat","filter","tPosition","indexOf","pop","length","unshift","btn","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport LanguageBtn from \"./LanguageBtn\";\nimport compStyle from \"./styles/LangBtnController.module.scss\";\n\nconst LangBtnController = (props) => {\n  type TBtnArrayWithPressedState = {\n    btns: [JSX.Element, boolean];\n  };\n\nconst [activeBtnPosition, setActiveBtnPosition] = useState<Number>()\n\n  const [activeBtn, setActiveBtn] = useState<string>(props.active);\n  /**\n   * Sets currently active button.\n   * @param id of a button\n   */\n  const activeBtnSetter = (id: string) => setActiveBtn(id);\n\n  const handleArrowClick = () => {\n    activeBtnSwitcher(Btns);\n    console.log(Btns);\n  };\n  let arrowBtn: HTMLElement | null;\n  useEffect(() => {\n    console.log(document.getElementById(\"arrowButton\"), \"found it\");\n    arrowBtn = document.getElementById(\"arrowButton\");\n    arrowBtn?.addEventListener(\"click\", handleArrowClick);\n    return () => arrowBtn?.removeEventListener(\"click\", handleArrowClick);\n  });\n\n  useEffect(() => {});\n\n  useEffect(() => {\n    Btns.forEach((button) => {\n      console.log(button[0].props.btnID);\n      if (button[0].props.btnID !== activeBtn) {\n        button[1] = false;\n      }\n    });\n    console.log(Btns);\n  }, [activeBtn]);\n\n  const Btns: Array<TBtnArrayWithPressedState> = props.BtnArray.map(\n    (button, key) => {\n      return [\n        <LanguageBtn\n          btnID={button}\n          btnText={button.toUpperCase()}\n          handleBtnClick={props.clickHandler}\n          inputEnabler={props.setIsNameEntryEnabled}\n          pressed={button === activeBtn ? true : false}\n          key={key}\n          langSelect={props.langSelector}\n          setActiveBtn={activeBtnSetter}\n        />,\n        button === activeBtn ? true : false,\n      ];\n    }\n  );\n\n  return (\n    <div className={compStyle.LangSelect}>\n      {Btns.map((ele: any) => {\n        return ele;\n      })}\n    </div>\n  );\n};\n\nexport default LangBtnController;\nfunction activeBtnSwitcher(Btns: { btns: [JSX.Element, boolean] }[]) {\n  let flatBtns = Btns.flat().filter((ele) => typeof ele != \"object\");\n  console.log(flatBtns);\n  let tPosition = flatBtns.indexOf(true);\n  console.log(tPosition);\n  flatBtns.pop();\n  if (tPosition == flatBtns.length) {\n    flatBtns.unshift(true);\n  } else {\n    flatBtns.unshift(false);\n  }\n  console.log(flatBtns, \"after manipulation\");\n  Btns.forEach((btn, index) => (btn[1] = flatBtns[index]));\n}\n"]},"metadata":{},"sourceType":"module"}