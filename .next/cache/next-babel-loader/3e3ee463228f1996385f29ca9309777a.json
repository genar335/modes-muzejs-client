{"ast":null,"code":"var _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/pages/TMS/create_test.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport PagesController from \"../../components/PagesController\";\nimport PhotoManager from \"../../components/PhotoManager\";\nimport TestNamer from \"../../components/TestNamer\";\nimport TestPreview from \"../../components/TestPreview\";\nimport styles from \"../styles/create_test.module.scss\";\n\nfunction create_test() {\n  _s();\n\n  var _useState = useState(1),\n      currentPages = _useState[0],\n      setCurrentPages = _useState[1];\n\n  var _useState2 = useState({\n    pages: setCurrentPages(currentPages),\n    en: {\n      name: \"\",\n      pages: []\n    },\n    lv: {\n      name: \"\",\n      pages: []\n    },\n    ru: {\n      name: \"\",\n      pages: []\n    },\n    type: \"\"\n  }),\n      test = _useState2[0],\n      setTest = _useState2[1];\n\n  var saveTest = function saveTest(test) {\n    return setTest(test);\n  };\n\n  var _useState3 = useState(),\n      currentLang = _useState3[0],\n      setCurrentLang = _useState3[1];\n\n  var handleClick = function handleClick() {\n    setTest({\n      ru: {\n        name: \"imya\",\n        pages: test.ru.pages\n      },\n      lv: test.lv,\n      en: test.en,\n      pages: test.pages,\n      type: \"TP\"\n    });\n  };\n\n  var typeOptions = [{\n    value: \"TT\",\n    label: \"Text – Text\"\n  }, {\n    value: \"TP\",\n    label: \"Text – Photo\"\n  }, {\n    value: \"PP\",\n    label: \"Photo – Photo\"\n  }];\n\n  var _useState4 = useState(),\n      testType = _useState4[0],\n      setTestType = _useState4[1];\n\n  var handleTypeChange = function handleTypeChange(chosenType) {\n    return setTestType(chosenType);\n  }; // const [editEnabled, setEditEnabled] = useState<boolean>(false);\n  // useEffect(() => {\n  //   if ((currentLang && testType) != undefined) {\n  //     console.log(\"in an if\");\n  //     setEditEnabled(true);\n  //   } else {\n  //     setEditEnabled(false);\n  //   }\n  //   console.log(\"outside of if\");\n  //   console.log(currentLang, testType);\n  // }, [currentLang, testType]);\n\n\n  var handleNumberInputChange = function handleNumberInputChange(event) {\n    console.log(Number(event.currentTarget.value));\n    setCurrentPages(Number(event.currentTarget.value));\n  };\n\n  return __jsx(\"div\", {\n    className: styles.CreateTestContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.TestType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, __jsx(Select, {\n    options: typeOptions,\n    className: styles.TestTypeSelect,\n    onChange: function onChange(selected) {\n      return handleTypeChange(selected.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: styles.PageController,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles.AddPageCont,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, __jsx(\"button\", {\n    className: styles.AddPageBtn,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Add page +\"), __jsx(\"input\", {\n    type: \"number\",\n    name: \"pageCount\",\n    className: styles.NumberOfPagesToAdd,\n    onChange: handleNumberInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  })), __jsx(PagesController, {\n    currentPages: test.pages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  })), testType === \"TT\" || testType === undefined ? null : __jsx(PhotoManager, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: styles.TestNaming,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, __jsx(TestNamer, {\n    currentLang: currentLang,\n    saveTest: saveTest,\n    currentStateOfTest: test,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  })), __jsx(TestPreview, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(create_test, \"TSv1eZtIA9pWxGWMQOa0GF3Eke8=\");\n\nexport default create_test;","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/pages/TMS/create_test.tsx"],"names":["React","useState","Select","PagesController","PhotoManager","TestNamer","TestPreview","styles","create_test","currentPages","setCurrentPages","pages","en","name","lv","ru","type","test","setTest","saveTest","currentLang","setCurrentLang","handleClick","typeOptions","value","label","testType","setTestType","handleTypeChange","chosenType","handleNumberInputChange","event","console","log","Number","currentTarget","CreateTestContainer","TestType","TestTypeSelect","selected","PageController","AddPageCont","AddPageBtn","NumberOfPagesToAdd","undefined","TestNaming"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Select from \"react-select\";\nimport { ITest, TLangOption, TTestTypes } from \"../../@types/test\";\nimport PagesController from \"../../components/PagesController\";\nimport PhotoManager from \"../../components/PhotoManager\";\nimport TestNamer from \"../../components/TestNamer\";\nimport TestPreview from \"../../components/TestPreview\";\nimport styles from \"../styles/create_test.module.scss\";\n\nfunction create_test() {\n  const [currentPages, setCurrentPages] = useState<number>(1);\n\n  const [test, setTest] = useState<ITest>({\n    pages: setCurrentPages(currentPages),\n    en: {\n      name: \"\",\n      pages: [],\n    },\n    lv: {\n      name: \"\",\n      pages: [],\n    },\n    ru: {\n      name: \"\",\n      pages: [],\n    },\n    type: \"\",\n  });\n  const saveTest = (test: ITest): void => setTest(test);\n  const [currentLang, setCurrentLang] = useState<TLangOption>();\n  const handleClick = () => {\n    setTest({\n      ru: {\n        name: \"imya\",\n        pages: test.ru.pages,\n      },\n      lv: test.lv,\n      en: test.en,\n      pages: test.pages,\n      type: \"TP\",\n    });\n  };\n\n  type TTypeOptions = {\n    value: \"TT\" | \"TP\" | \"PP\";\n    label: \"Text – Text\" | \"Text – Photo\" | \"Photo – Photo\";\n  };\n  const typeOptions: Array<TTypeOptions> = [\n    { value: \"TT\", label: \"Text – Text\" },\n    { value: \"TP\", label: \"Text – Photo\" },\n    { value: \"PP\", label: \"Photo – Photo\" },\n  ];\n\n  const [testType, setTestType] = useState<TTestTypes>();\n  const handleTypeChange = (chosenType: TTestTypes): void =>\n    setTestType(chosenType);\n\n  // const [editEnabled, setEditEnabled] = useState<boolean>(false);\n  // useEffect(() => {\n  //   if ((currentLang && testType) != undefined) {\n  //     console.log(\"in an if\");\n  //     setEditEnabled(true);\n  //   } else {\n  //     setEditEnabled(false);\n  //   }\n  //   console.log(\"outside of if\");\n  //   console.log(currentLang, testType);\n  // }, [currentLang, testType]);\n\n  const handleNumberInputChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    console.log(Number(event.currentTarget.value));\n    setCurrentPages(Number(event.currentTarget.value));\n  };\n\n  return (\n    <div className={styles.CreateTestContainer}>\n      <div className={styles.TestType}>\n        <Select\n          options={typeOptions}\n          className={styles.TestTypeSelect}\n          onChange={(selected: any): void => handleTypeChange(selected.value)}\n        />\n      </div>\n      <div className={styles.PageController}>\n        <div className={styles.AddPageCont}>\n          <button className={styles.AddPageBtn} onClick={handleClick}>\n            Add page +\n          </button>\n          <input\n            type=\"number\"\n            name=\"pageCount\"\n            className={styles.NumberOfPagesToAdd}\n            onChange={handleNumberInputChange}\n          />\n        </div>\n        <PagesController currentPages={test.pages} />\n      </div>\n      {testType === ((\"TT\" as unknown) as TTestTypes) ||\n      testType === undefined ? null : (\n        <PhotoManager />\n      )}\n      <div className={styles.TestNaming}>\n        <TestNamer\n          currentLang={currentLang}\n          saveTest={saveTest}\n          currentStateOfTest={test}\n        />\n      </div>\n      <TestPreview />\n    </div>\n  );\n}\n\nexport default create_test;\n"]},"metadata":{},"sourceType":"module"}