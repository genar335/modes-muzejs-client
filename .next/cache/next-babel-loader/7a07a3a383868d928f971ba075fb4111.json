{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/TestPreview.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport styles from \"../pages/styles/create_test.module.scss\";\nimport FMLogo from \"./FMlogo\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\n\nvar TestPreview = function TestPreview(props) {\n  console.log(props.pageToRender); // function handleTextAreaQuestionChange(\n  //   event: React.ChangeEvent<HTMLTextAreaElement>\n  // ) {\n  //   // let tmpArray =\n  //   //   props.currentTestState[props.currentLanguage!].pages[props.activePage]\n  //   //     .QnAPairs;\n  //   // console.log(\"tmp\", tmpArray);\n  //   // tmpArray.forEach((ele) => console.log(ele));\n  //   const tmpArray = props.currentTestState[props.currentLanguage!].pages;\n  //   // console.log(tmpArray);\n  //   // console.log(tmpArray[props.activePage]);\n  //   // console.log(tmpArray[props.activePage].QnAPairs[event.currentTarget.id]);\n  //   tmpArray[props.activePage].QnAPairs[event.currentTarget.id].question =\n  //     event.currentTarget.value;\n  //   // console.log(tmpArray);\n  //   props.saveChanges({\n  //     ...props.currentTestState,\n  //     [props.currentLanguage!]: {\n  //       ...props.currentTestState[props.currentLanguage!],\n  //       pages: tmpArray,\n  //     },\n  //   });\n  // }\n\n  function questionRenderController(currentItem, currentPair) {\n    switch (props.testType) {\n      case \"TT\":\n        return;\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  var handleQuestionChange = function handleQuestionChange(event) {\n    console.log(event.currentTarget.value);\n  };\n\n  var pageBody = function pageBody() {\n    return props.pageToRender.QnAPairs.map(function (qna, iterator) {\n      return __jsx(\"div\", {\n        key: iterator,\n        id: String(iterator),\n        className: compStyles.qnaPair,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }\n      }, __jsx(\"textarea\", {\n        onChange: handleQuestionChange,\n        className: compStyles.Question,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, qna.question), __jsx(\"div\", {\n        className: compStyles.Answer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, qna.answer, \"answer\"));\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: styles.TestPreview,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"Page: \", props.activePage + 1), __jsx(\"div\", {\n    className: compStyles.TestBGContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, __jsx(FMLogo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: compStyles.pageBody,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, pageBody())));\n};\n\n_c = TestPreview;\nexport default TestPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestPreview\");","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/TestPreview.tsx"],"names":["React","styles","FMLogo","compStyles","TestPreview","props","console","log","pageToRender","questionRenderController","currentItem","currentPair","testType","handleQuestionChange","event","currentTarget","value","pageBody","QnAPairs","map","qna","iterator","String","qnaPair","Question","question","Answer","answer","activePage","TestBGContainer"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAiC,OAAjC;AAQA,OAAOC,MAAP,MAAmB,yCAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAOd;AACJC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,YAAlB,EADI,CAGJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,WAASC,wBAAT,CAAkCC,WAAlC,EAAuDC,WAAvD,EAA0E;AACxE,YAAQN,KAAK,CAACO,QAAd;AACE,WAAK,IAAL;AACE;AACA;;AAEF;AACE;AANJ;AAQD;;AAED,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,KAAD,EAAW;AACtCR,IAAAA,OAAO,CAACC,GAAR,CAAYO,KAAK,CAACC,aAAN,CAAoBC,KAAhC;AACD,GAFD;;AAIA,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,WACfZ,KAAK,CAACG,YAAN,CAAmBU,QAAnB,CAA4BC,GAA5B,CAAgC,UAACC,GAAD,EAAYC,QAAZ;AAAA,aAC9B;AAAK,QAAA,GAAG,EAAEA,QAAV;AAAoB,QAAA,EAAE,EAAEC,MAAM,CAACD,QAAD,CAA9B;AAA0C,QAAA,SAAS,EAAElB,UAAU,CAACoB,OAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,QAAQ,EAAEV,oBADZ;AAEE,QAAA,SAAS,EAAEV,UAAU,CAACqB,QAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIGJ,GAAG,CAACK,QAJP,CADF,EAOE;AAAK,QAAA,SAAS,EAAEtB,UAAU,CAACuB,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAoCN,GAAG,CAACO,MAAxC,WAPF,CAD8B;AAAA,KAAhC,CADe;AAAA,GAAjB;;AAaA,SACE;AAAK,IAAA,SAAS,EAAE1B,MAAM,CAACG,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWC,KAAK,CAACuB,UAAN,GAAmB,CAA9B,CADF,EAEE;AAAK,IAAA,SAAS,EAAEzB,UAAU,CAAC0B,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAE1B,UAAU,CAACc,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCA,QAAQ,EAA9C,CAFF,CAFF,CADF;AASD,CAvED;;KAAMb,W;AAyEN,eAAeA,WAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport {\n  IQnA,\n  IQnAPairs,\n  ITest,\n  TLangOption,\n  TTestTypes,\n} from \"../@types/test\";\nimport styles from \"../pages/styles/create_test.module.scss\";\nimport FMLogo from \"./FMlogo\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\n\nconst TestPreview = (props: {\n  activePage: number;\n  currentLanguage: TLangOption[\"value\"] | undefined;\n  // currentTestState: ITest;\n  pageToRender: any;\n  testType: ITest[\"type\"];\n  saveChanges: (test: ITest) => void;\n}) => {\n  console.log(props.pageToRender);\n\n  // function handleTextAreaQuestionChange(\n  //   event: React.ChangeEvent<HTMLTextAreaElement>\n  // ) {\n  //   // let tmpArray =\n  //   //   props.currentTestState[props.currentLanguage!].pages[props.activePage]\n  //   //     .QnAPairs;\n  //   // console.log(\"tmp\", tmpArray);\n  //   // tmpArray.forEach((ele) => console.log(ele));\n  //   const tmpArray = props.currentTestState[props.currentLanguage!].pages;\n  //   // console.log(tmpArray);\n  //   // console.log(tmpArray[props.activePage]);\n  //   // console.log(tmpArray[props.activePage].QnAPairs[event.currentTarget.id]);\n  //   tmpArray[props.activePage].QnAPairs[event.currentTarget.id].question =\n  //     event.currentTarget.value;\n  //   // console.log(tmpArray);\n  //   props.saveChanges({\n  //     ...props.currentTestState,\n  //     [props.currentLanguage!]: {\n  //       ...props.currentTestState[props.currentLanguage!],\n  //       pages: tmpArray,\n  //     },\n  //   });\n  // }\n\n  function questionRenderController(currentItem: number, currentPair: IQnA) {\n    switch (props.testType) {\n      case \"TT\":\n        return;\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  const handleQuestionChange = (event) => {\n    console.log(event.currentTarget.value);\n  };\n\n  const pageBody = () =>\n    props.pageToRender.QnAPairs.map((qna: IQnA, iterator: number) => (\n      <div key={iterator} id={String(iterator)} className={compStyles.qnaPair}>\n        <textarea\n          onChange={handleQuestionChange}\n          className={compStyles.Question}\n        >\n          {qna.question}\n        </textarea>\n        <div className={compStyles.Answer}>{qna.answer}answer</div>\n      </div>\n    ));\n\n  return (\n    <div className={styles.TestPreview}>\n      <h3>Page: {props.activePage + 1}</h3>\n      <div className={compStyles.TestBGContainer}>\n        <FMLogo />\n        <div className={compStyles.pageBody}>{pageBody()}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default TestPreview;\n"]},"metadata":{},"sourceType":"module"}