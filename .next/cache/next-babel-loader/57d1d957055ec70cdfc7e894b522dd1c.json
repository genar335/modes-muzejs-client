{"ast":null,"code":"var _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/TestCard.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport editIcon from \"../GAssets/create_icon_big.png\";\nimport styles from \"./styles/TestCard.module.scss\";\nimport Axios from \"axios\";\nimport { devURL } from \"./constants\";\n\nconst TestCard = props => {\n  const CardStyle = {\n    background: `rgb(${props.colour})`\n  };\n  const {\n    0: isActive,\n    1: setIsActive\n  } = useState(props.active);\n\n  const changeTestState = async (testID, isActive) => {\n    let changedTest;\n\n    try {\n      const responseFromServer = await Axios.post(`${devURL}tests/toggleTestActiveState`, {\n        testID,\n        isActive\n      });\n      changedTest = responseFromServer.data; // console.log(changedTest);\n    } catch (error) {\n      console.error(error);\n    }\n  }; // console.log(props);\n\n\n  const handleActiveChange = async () => {\n    setIsActive(!isActive);\n    await changeTestState(props._id, !isActive);\n    console.log(\"Calling all tests\");\n    setTimeout(() => props.updateTests(props._id, props.active), 2000);\n  };\n\n  return __jsx(\"div\", {\n    key: props._id,\n    id: props._id,\n    className: styles.TestCard,\n    style: CardStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(\"img\", {\n    src: editIcon,\n    alt: \"Edit icon\",\n    className: styles.LookingGlass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }), __jsx(\"h1\", {\n    onClick: handleActiveChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Test title in ru: \", props.nameInRu), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"Test id: \", props._id), __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, \"Main question of test\"));\n};\n\nexport default TestCard;","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/TestCard.tsx"],"names":["React","useState","editIcon","styles","Axios","devURL","TestCard","props","CardStyle","background","colour","isActive","setIsActive","active","changeTestState","testID","changedTest","responseFromServer","post","data","error","console","handleActiveChange","_id","log","setTimeout","updateTests","LookingGlass","nameInRu"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,aAAvB;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IASX;AACJ,QAAMC,SAAiB,GAAG;AACxBC,IAAAA,UAAU,EAAG,OAAMF,KAAK,CAACG,MAAO;AADR,GAA1B;AAIA,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BX,QAAQ,CAAUM,KAAK,CAACM,MAAhB,CAAxC;;AAEA,QAAMC,eAAe,GAAG,OAAOC,MAAP,EAAuBJ,QAAvB,KAA6C;AACnE,QAAIK,WAAJ;;AACA,QAAI;AACF,YAAMC,kBAAkB,GAAG,MAAMb,KAAK,CAACc,IAAN,CAC9B,GAAEb,MAAO,6BADqB,EAE/B;AACEU,QAAAA,MADF;AAEEJ,QAAAA;AAFF,OAF+B,CAAjC;AAOAK,MAAAA,WAAW,GAAGC,kBAAkB,CAACE,IAAjC,CARE,CASF;AACD,KAVD,CAUE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF,GAfD,CAPI,CAuBJ;;;AACA,QAAME,kBAAkB,GAAG,YAAY;AACrCV,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACA,UAAMG,eAAe,CAACP,KAAK,CAACgB,GAAP,EAAY,CAACZ,QAAb,CAArB;AACAU,IAAAA,OAAO,CAACG,GAAR,CAAY,mBAAZ;AACAC,IAAAA,UAAU,CAAC,MAAMlB,KAAK,CAACmB,WAAN,CAAkBnB,KAAK,CAACgB,GAAxB,EAA6BhB,KAAK,CAACM,MAAnC,CAAP,EAAmD,IAAnD,CAAV;AACD,GALD;;AAOA,SACE;AACE,IAAA,GAAG,EAAEN,KAAK,CAACgB,GADb;AAEE,IAAA,EAAE,EAAEhB,KAAK,CAACgB,GAFZ;AAGE,IAAA,SAAS,EAAEpB,MAAM,CAACG,QAHpB;AAIE,IAAA,KAAK,EAAEE,SAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE;AAAK,IAAA,GAAG,EAAEN,QAAV;AAAoB,IAAA,GAAG,EAAC,WAAxB;AAAoC,IAAA,SAAS,EAAEC,MAAM,CAACwB,YAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAWE;AAAI,IAAA,OAAO,EAAEL,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAoDf,KAAK,CAACqB,QAA1D,CAXF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcrB,KAAK,CAACgB,GAApB,CAZF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAbF,CADF;AAiBD,CAzDD;;AA2DA,eAAejB,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport editIcon from \"../GAssets/create_icon_big.png\";\nimport styles from \"./styles/TestCard.module.scss\";\nimport Switch from \"react-switch\";\nimport Axios from \"axios\";\nimport { devURL } from \"./constants\";\nimport { ITest } from \"../@types/test\";\n\nconst TestCard = (props: {\n  iterator: number;\n  colour: string;\n  _id: string;\n  nameInRu: string;\n  active: boolean;\n  // parentComponentTestFetcher: () => Promise<void>;\n  // mainTestFetcher: () => Promise<void>;\n  updateTests: (testID: string) => void;\n}) => {\n  const CardStyle: Object = {\n    background: `rgb(${props.colour})`,\n  };\n\n  const [isActive, setIsActive] = useState<boolean>(props.active);\n\n  const changeTestState = async (testID: string, isActive: boolean) => {\n    let changedTest: ITest;\n    try {\n      const responseFromServer = await Axios.post(\n        `${devURL}tests/toggleTestActiveState`,\n        {\n          testID,\n          isActive,\n        }\n      );\n      changedTest = responseFromServer.data;\n      // console.log(changedTest);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  // console.log(props);\n  const handleActiveChange = async () => {\n    setIsActive(!isActive);\n    await changeTestState(props._id, !isActive);\n    console.log(\"Calling all tests\");\n    setTimeout(() => props.updateTests(props._id, props.active), 2000);\n  };\n\n  return (\n    <div\n      key={props._id}\n      id={props._id}\n      className={styles.TestCard}\n      style={CardStyle}\n    >\n      {/* <Switch onChange={handleActiveChange} checked={isActive} /> */}\n      {/* \n      //! Need to figure out how to time the switch\n      */}\n      <img src={editIcon} alt=\"Edit icon\" className={styles.LookingGlass} />\n      <h1 onClick={handleActiveChange}>Test title in ru: {props.nameInRu}</h1>\n      <h2>Test id: {props._id}</h2>\n      <span>Main question of test</span>\n    </div>\n  );\n};\n\nexport default TestCard;\n"]},"metadata":{},"sourceType":"module"}