{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/pages/TMS/create_test.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Select from \"react-select\";\nimport FMLogo from \"../../components/FMlogo\";\nimport PagesController from \"../../components/PagesController\";\nimport PhotoManager from \"../../components/PhotoManager\";\nimport TestNamer from \"../../components/TestNamer\";\nimport TestPreview from \"../../components/TestPreview\";\nimport styles from \"../styles/create_test.module.scss\";\nimport Switch from \"react-switch\";\nimport Axios from \"axios\";\nimport { useRouter } from \"next/router\";\n\nfunction create_test() {\n  _s();\n\n  var _this = this;\n\n  // useEffect(() => {\n  //   console.log(\"pages have changed\");\n  //   socket.emit(\"Pages update\", String(test.pages));\n  //   if (test.pages >= 2) {\n  //   }\n  // }, [test.pages]);\n  // useEffect(() => {\n  //   socket.emit(\"Test changed\", test);\n  // }, [test]);\n  // useEffect(() => {\n  //   const socket = io(APIURL, {\n  //     reconnectionDelayMax: 10000,\n  //     query: \"123\",\n  //   });\n  // });\n  // const [currentPages, setCurrentPages] = useState<number>(1);\n  // let tmpPages: number = 0;\n  var router = useRouter();\n  console.log(router.query);\n\n  var _useState = useState(false),\n      isTestFetched = _useState[0],\n      setIsTestFetched = _useState[1];\n\n  useEffect(function () {\n    if (router.query.testToEdit !== undefined) {\n      console.log(\"In an if\");\n      console.log(router.query.testToEdit);\n      Axios.get(\"http://localhost:4000/tests/getTestByID?testToEdit=\".concat(router.query.testToEdit)).then(function (response) {\n        console.log(response.data);\n        setTest(response.data);\n        setIsTestFetched(true);\n      });\n    }\n  }, [router.query]);\n\n  var _useState2 = useState(),\n      currentCard = _useState2[0],\n      setCurrentCard = _useState2[1];\n\n  var saveCurrentCard = function saveCurrentCard(card) {\n    return setCurrentCard(card);\n  };\n\n  var qnaEmptyArray = function qnaEmptyArray() {\n    return {\n      question: \"\",\n      answer: \"\"\n    };\n  };\n\n  var qnaEmptyNArray = function qnaEmptyNArray(pairs) {\n    var tmpArray = [];\n\n    for (var i = 0; i < pairs; i++) {\n      tmpArray.push(qnaEmptyArray());\n    }\n\n    return tmpArray;\n  };\n\n  var currentNumberOfPairsForQnAPairs = 3;\n\n  var _useState3 = useState(0),\n      activePage = _useState3[0],\n      setActivePage = _useState3[1];\n\n  var activateAPage = function activateAPage(index) {\n    return setActivePage(index);\n  };\n\n  var _useState4 = useState(),\n      pagesRendered = _useState4[0],\n      setPagesRendered = _useState4[1];\n\n  var testTemplateWithThreeCards = {\n    pages: 1,\n    en: {\n      name: \"\",\n      pages: [{\n        QnAPairs: qnaEmptyNArray(currentNumberOfPairsForQnAPairs)\n      }]\n    },\n    lv: {\n      name: \"\",\n      pages: [{\n        QnAPairs: qnaEmptyNArray(currentNumberOfPairsForQnAPairs)\n      }]\n    },\n    ru: {\n      name: \"\",\n      pages: [{\n        QnAPairs: qnaEmptyNArray(currentNumberOfPairsForQnAPairs)\n      }]\n    },\n    type: \"\",\n    active: false\n  };\n\n  var _useState5 = useState(testTemplateWithThreeCards),\n      test = _useState5[0],\n      setTest = _useState5[1];\n\n  var _useState6 = useState(true),\n      isPhotoManagerOpen = _useState6[0],\n      setIsPhotoManagerOpen = _useState6[1];\n\n  var openPhotos = function openPhotos(toggle) {\n    return setIsPhotoManagerOpen(toggle);\n  };\n\n  var saveTest = function saveTest(test) {\n    return setTest(test);\n  };\n\n  var _useState7 = useState(\"ru\"),\n      currentLang = _useState7[0],\n      setCurrentLang = _useState7[1];\n\n  var activateCurrentLang = function activateCurrentLang(lang) {\n    // setCurrentLang(lang);\n    setActiveLangForSwitches(lang);\n  };\n  /*   const handleClick = () => {\n    setTest({\n      ru: {\n        name: \"imya\",\n        pages: test.ru.pages,\n      },\n      lv: test.lv,\n      en: test.en,\n      pages: test.pages,\n      type: \"TP\",\n    });\n  }; */\n\n\n  var typeOptions = [{\n    value: \"TT\",\n    label: \"Text – Text\"\n  }, {\n    value: \"TP\",\n    label: \"Text – Photo\"\n  }, {\n    value: \"PP\",\n    label: \"Photo – Photo\"\n  }];\n\n  var _useState8 = useState(),\n      testType = _useState8[0],\n      setTestType = _useState8[1];\n\n  var handleTypeChange = function handleTypeChange(chosenType) {\n    setTestType(chosenType);\n    setTest(_objectSpread(_objectSpread({}, test), {}, {\n      type: chosenType\n    }));\n  };\n\n  function savePage(page) {\n    console.log(page);\n    var tmp = test[currentLang].pages;\n    tmp[activePage].QnAPairs = page;\n    console.log(tmp);\n    setTest(_objectSpread(_objectSpread({}, test), {}, _defineProperty({}, currentLang, _objectSpread(_objectSpread({}, test[currentLang]), {}, {\n      pages: tmp\n    }))));\n  }\n\n  var handleNumberInputChange = function handleNumberInputChange(event) {\n    console.log(event.currentTarget.value);\n\n    if (Number(event.currentTarget.value) >= 2 && event.currentTarget.value != undefined && Number(event.currentTarget.value) < 50) {\n      if (Number(event.currentTarget.value) > test.pages) {\n        var _console;\n\n        console.log(\"test\");\n        var tmpArray = [];\n\n        for (var i = 0; i < Number(event.currentTarget.value) - test.pages; i++) {\n          tmpArray.push({\n            QnAPairs: qnaEmptyNArray(currentNumberOfPairsForQnAPairs)\n          });\n        }\n\n        (_console = console).log.apply(_console, tmpArray);\n\n        setTest(_objectSpread(_objectSpread({}, test), {}, {\n          en: _objectSpread(_objectSpread({}, test.en), {}, {\n            pages: [].concat(_toConsumableArray(test.en.pages), tmpArray)\n          }),\n          ru: _objectSpread(_objectSpread({}, test.ru), {}, {\n            pages: [].concat(_toConsumableArray(test.ru.pages), tmpArray)\n          }),\n          lv: _objectSpread(_objectSpread({}, test.lv), {}, {\n            pages: [].concat(_toConsumableArray(test.lv.pages), tmpArray)\n          }),\n          pages: Number(event.currentTarget.value)\n        }));\n      } else {\n        setTest(_objectSpread(_objectSpread({}, test), {}, {\n          en: _objectSpread(_objectSpread({}, test.en), {}, {\n            pages: test.en.pages.slice(0, test.pages - (test.pages - Number(event.currentTarget.value)))\n          }),\n          ru: _objectSpread(_objectSpread({}, test.ru), {}, {\n            pages: test.ru.pages.slice(0, test.pages - (test.pages - Number(event.currentTarget.value)))\n          }),\n          lv: _objectSpread(_objectSpread({}, test.lv), {}, {\n            pages: test.lv.pages.slice(0, test.pages - (test.pages - Number(event.currentTarget.value)))\n          }),\n          pages: Number(event.currentTarget.value)\n        }));\n      } // event.currentTarget.value = String(test.pages);\n\n    }\n\n    console.log(test);\n  };\n\n  var removePage = function removePage(event) {\n    if (test.pages !== 1) {\n      setTest(_objectSpread(_objectSpread({}, test), {}, {\n        en: _objectSpread(_objectSpread({}, test.en), {}, {\n          pages: test.en.pages.slice(0, test.pages - 1)\n        }),\n        ru: _objectSpread(_objectSpread({}, test.ru), {}, {\n          pages: test.ru.pages.slice(0, test.pages - 1)\n        }),\n        lv: _objectSpread(_objectSpread({}, test.lv), {}, {\n          pages: test.lv.pages.slice(0, test.pages - 1)\n        }),\n        pages: test.pages - 1\n      }));\n    }\n  };\n\n  var addPage = function addPage(event) {\n    if (test.pages < 50) {\n      setTest(_objectSpread(_objectSpread({}, test), {}, {\n        en: _objectSpread(_objectSpread({}, test.en), {}, {\n          pages: [].concat(_toConsumableArray(test.en.pages), [{\n            QnAPairs: qnaEmptyNArray(currentNumberOfPairsForQnAPairs)\n          }])\n        }),\n        ru: _objectSpread(_objectSpread({}, test.ru), {}, {\n          pages: [].concat(_toConsumableArray(test.ru.pages), [{\n            QnAPairs: qnaEmptyNArray(currentNumberOfPairsForQnAPairs)\n          }])\n        }),\n        lv: _objectSpread(_objectSpread({}, test.lv), {}, {\n          pages: [].concat(_toConsumableArray(test.lv.pages), [{\n            QnAPairs: qnaEmptyNArray(currentNumberOfPairsForQnAPairs)\n          }])\n        }),\n        pages: test.pages + 1\n      }));\n    }\n  };\n\n  useEffect(function () {\n    if (didMountRef.current) {\n      setPagesRendered(false);\n    } else {\n      setPagesRendered(true);\n    }\n  });\n  var didMountRef = useRef();\n\n  var handleTestSaving = function handleTestSaving(event) {\n    event.preventDefault();\n    Axios.post(\"http://localhost:4000/tests/create\", test)[\"catch\"](function (res) {\n      return alert(res);\n    }).then(function (res) {\n      return console.log(res);\n    });\n  };\n\n  var testLang = [\"ru\", \"lv\", \"en\"];\n\n  var handleLangSwitchChange = function handleLangSwitchChange(checked, event, id) {\n    console.log(id);\n    setCurrentLang(id); // testLang.forEach((lang: TLangOption[\"value\"]) => {\n    //   setLangSwitchesState({\n    //     ...langSwitchesStates,\n    //     [lang]: !langSwitchesStates[lang],\n    //   });\n    // });\n\n    setActiveLangForSwitches(id);\n  };\n\n  var _useState9 = useState({\n    ru: true,\n    lv: false,\n    en: false\n  }),\n      langSwitchesStates = _useState9[0],\n      setLangSwitchesState = _useState9[1];\n\n  var renderLangSwitcher = function renderLangSwitcher(languagesToHaveSwitches) {\n    return languagesToHaveSwitches.map(function (lang) {\n      return __jsx(\"div\", {\n        className: styles.singleLangSwitcher,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 7\n        }\n      }, __jsx(\"p\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 9\n        }\n      }, lang.toLocaleUpperCase()), __jsx(Switch, {\n        id: lang,\n        onChange: handleLangSwitchChange,\n        checked: langSwitchesStates[lang],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 9\n        }\n      }));\n    });\n  };\n\n  var convertType = function convertType() {\n    var recievedTypeValueOptionPair = typeOptions[0];\n    console.log(\"Oi there from Select\");\n    return recievedTypeValueOptionPair;\n  };\n\n  return __jsx(\"div\", {\n    className: styles.CreateTestContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 5\n    }\n  }, __jsx(FMLogo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: styles.TestNaming,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }\n  }, __jsx(TestNamer, {\n    currentLang: currentLang,\n    setCurrentLang: activateCurrentLang,\n    saveTest: saveTest,\n    currentStateOfTest: test,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: styles.LangSwitcher,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 7\n    }\n  }, renderLangSwitcher(testLang)), __jsx(\"div\", {\n    className: styles.TestType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }\n  }, __jsx(Select, {\n    options: typeOptions,\n    className: styles.TestTypeSelect,\n    defaultValue: isTestFetched ? convertType() : null,\n    onChange: function onChange(selected) {\n      setTest(_objectSpread(_objectSpread({}, testTemplateWithThreeCards), {}, {\n        type: selected.value\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: styles.PageController,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles.AddPageCont,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 9\n    }\n  }, __jsx(\"h5\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 11\n    }\n  }, \"Pages\"), __jsx(\"button\", {\n    className: styles.ChangePagesBtn,\n    onClick: removePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 11\n    }\n  }, removePageIcon()), __jsx(\"input\", {\n    // disabled={pagesRendered}\n    type: \"number\",\n    name: \"pagesNumber\",\n    className: styles.pagesNumberIndicator,\n    placeholder: test.pages ? test.pages.toString() : \"1\" // value={currentPages}\n    ,\n    onChange: handleNumberInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    className: styles.ChangePagesBtn,\n    onClick: addPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 11\n    }\n  }, addPageIcon())), __jsx(PagesController, {\n    activePage: activePage,\n    setActivePage: activateAPage,\n    currentPages: test.pages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 9\n    }\n  })), __jsx(PhotoManager, {\n    togglePhotoManager: openPhotos,\n    displayed: isPhotoManagerOpen,\n    currentCard: currentCard,\n    setCurrentCard: setCurrentCard,\n    pageToRender: test[currentLang].pages[activePage].QnAPairs,\n    saveChanges: savePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 7\n    }\n  }), __jsx(TestPreview, {\n    togglePhotoManager: openPhotos,\n    activePage: activePage,\n    currentLanguage: currentLang,\n    setCurrentLang: activateCurrentLang // currentTestState={test}\n    ,\n    pageToRender: test[currentLang].pages[activePage].QnAPairs,\n    testType: test.type,\n    saveChanges: savePage,\n    setCurrentCard: saveCurrentCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }\n  }), __jsx(\"button\", {\n    onClick: handleTestSaving,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }\n  }, \"Send the test!\"));\n\n  function setActiveLangForSwitches(id) {\n    var tmp = langSwitchesStates;\n\n    for (var key in tmp) {\n      if (key === id) {\n        console.log(\"Match\", id);\n        tmp[key] = true;\n      } else {\n        tmp[key] = false;\n      }\n    }\n\n    setLangSwitchesState(tmp);\n    setCurrentLang(id);\n  }\n}\n\n_s(create_test, \"hFdP+TejD4XR2lTiGwyhur+2WrQ=\", false, function () {\n  return [useRouter];\n});\n\nexport default create_test;\n\nfunction addPageIcon() {\n  return __jsx(\"svg\", {\n    width: \"60\",\n    height: \"60\",\n    viewBox: \"0 0 35 36\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 5\n    }\n  }, __jsx(\"circle\", {\n    r: \"17.3744\",\n    transform: \"matrix(1 0 0 -1 17.3744 18)\",\n    fill: \"#2F4858\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 7\n    }\n  }), __jsx(\"path\", {\n    d: \"M23.5173 18.6826H18.0569V24.1431C18.0569 24.5198 17.7511 24.8257 17.3743 24.8257C16.9976 24.8257 16.6918 24.5198 16.6918 24.1431V18.6826H11.2312C10.8545 18.6826 10.5487 18.3768 10.5487 18.0001C10.5487 17.6233 10.8545 17.3174 11.2312 17.3174H16.6918V11.857C16.6918 11.4802 16.9976 11.1744 17.3743 11.1744C17.7511 11.1744 18.0569 11.4802 18.0569 11.857V17.3174H23.5173C23.8942 17.3174 24.2 17.6233 24.2 18.0001C24.2 18.3768 23.8942 18.6826 23.5173 18.6826Z\",\n    fill: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction removePageIcon() {\n  return __jsx(\"svg\", {\n    width: \"60\",\n    height: \"60\",\n    viewBox: \"0 0 35 36\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 5\n    }\n  }, __jsx(\"circle\", {\n    r: \"17.3744\",\n    transform: \"matrix(1 0 0 -1 17.3744 18)\",\n    fill: \"#2F4858\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 7\n    }\n  }), __jsx(\"path\", {\n    d: \"M11.1692 18H23.5794\",\n    stroke: \"white\",\n    \"stroke-width\": \"2\",\n    \"stroke-linecap\": \"round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/pages/TMS/create_test.tsx"],"names":["React","useEffect","useRef","useState","Select","FMLogo","PagesController","PhotoManager","TestNamer","TestPreview","styles","Switch","Axios","useRouter","create_test","router","console","log","query","isTestFetched","setIsTestFetched","testToEdit","undefined","get","then","response","data","setTest","currentCard","setCurrentCard","saveCurrentCard","card","qnaEmptyArray","question","answer","qnaEmptyNArray","pairs","tmpArray","i","push","currentNumberOfPairsForQnAPairs","activePage","setActivePage","activateAPage","index","pagesRendered","setPagesRendered","testTemplateWithThreeCards","pages","en","name","QnAPairs","lv","ru","type","active","test","isPhotoManagerOpen","setIsPhotoManagerOpen","openPhotos","toggle","saveTest","currentLang","setCurrentLang","activateCurrentLang","lang","setActiveLangForSwitches","typeOptions","value","label","testType","setTestType","handleTypeChange","chosenType","savePage","page","tmp","handleNumberInputChange","event","currentTarget","Number","slice","removePage","addPage","didMountRef","current","handleTestSaving","preventDefault","post","res","alert","testLang","handleLangSwitchChange","checked","id","langSwitchesStates","setLangSwitchesState","renderLangSwitcher","languagesToHaveSwitches","map","singleLangSwitcher","toLocaleUpperCase","convertType","recievedTypeValueOptionPair","CreateTestContainer","TestNaming","LangSwitcher","TestType","TestTypeSelect","selected","PageController","AddPageCont","ChangePagesBtn","removePageIcon","pagesNumberIndicator","toString","addPageIcon","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport Select from \"react-select\";\nimport { IQnA, ITest, TLangOption, TTestTypes } from \"../../@types/test\";\nimport FMLogo from \"../../components/FMlogo\";\nimport PagesController from \"../../components/PagesController\";\nimport PhotoManager from \"../../components/PhotoManager\";\nimport TestNamer from \"../../components/TestNamer\";\nimport TestPreview from \"../../components/TestPreview\";\nimport styles from \"../styles/create_test.module.scss\";\nimport { APIURL } from \"../../components/constants\";\nimport Switch from \"react-switch\";\nimport Axios, { AxiosResponse } from \"axios\";\nimport { captureRejectionSymbol } from \"events\";\nimport { TlsOptions } from \"tls\";\nimport { NextRouter, useRouter } from \"next/router\";\n\nfunction create_test() {\n  // useEffect(() => {\n  //   console.log(\"pages have changed\");\n  //   socket.emit(\"Pages update\", String(test.pages));\n  //   if (test.pages >= 2) {\n  //   }\n  // }, [test.pages]);\n\n  // useEffect(() => {\n  //   socket.emit(\"Test changed\", test);\n  // }, [test]);\n  // useEffect(() => {\n  //   const socket = io(APIURL, {\n  //     reconnectionDelayMax: 10000,\n  //     query: \"123\",\n  //   });\n  // });\n  // const [currentPages, setCurrentPages] = useState<number>(1);\n  // let tmpPages: number = 0;\n  const router: NextRouter = useRouter();\n  console.log(router.query);\n\n  const [isTestFetched, setIsTestFetched] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (router.query.testToEdit !== undefined) {\n      console.log(\"In an if\");\n      console.log(router.query.testToEdit);\n      Axios.get(\n        `http://localhost:4000/tests/getTestByID?testToEdit=${router.query.testToEdit}`\n      ).then((response: AxiosResponse) => {\n        console.log(response.data);\n        setTest(response.data);\n        setIsTestFetched(true);\n      });\n    }\n  }, [router.query]);\n\n  const [currentCard, setCurrentCard] = useState<\n    React.MutableRefObject<null>\n  >();\n  const saveCurrentCard = (\n    card: React.SetStateAction<React.MutableRefObject<null> | undefined>\n  ) => setCurrentCard(card);\n\n  const qnaEmptyArray = (): IQnA => {\n    return {\n      question: \"\",\n      answer: \"\",\n    };\n  };\n  const qnaEmptyNArray = (pairs: number): IQnA[] => {\n    let tmpArray = [];\n    for (let i = 0; i < pairs; i++) {\n      tmpArray.push(qnaEmptyArray());\n    }\n    return tmpArray;\n  };\n  const currentNumberOfPairsForQnAPairs = 3;\n  const [activePage, setActivePage] = useState<number>(0);\n  const activateAPage = (index: number) => setActivePage(index);\n  const [pagesRendered, setPagesRendered] = useState<boolean>();\n  const testTemplateWithThreeCards: ITest = {\n    pages: 1,\n    en: {\n      name: \"\",\n      pages: [\n        {\n          QnAPairs: qnaEmptyNArray(currentNumberOfPairsForQnAPairs),\n        },\n      ],\n    },\n    lv: {\n      name: \"\",\n      pages: [\n        {\n          QnAPairs: qnaEmptyNArray(currentNumberOfPairsForQnAPairs),\n        },\n      ],\n    },\n    ru: {\n      name: \"\",\n      pages: [\n        {\n          QnAPairs: qnaEmptyNArray(currentNumberOfPairsForQnAPairs),\n        },\n      ],\n    },\n    type: \"\",\n    active: false,\n  };\n  const [test, setTest] = useState<ITest>(testTemplateWithThreeCards);\n\n  const [isPhotoManagerOpen, setIsPhotoManagerOpen] = useState<boolean>(true);\n  const openPhotos = (toggle: boolean) => setIsPhotoManagerOpen(toggle);\n\n  const saveTest = (test: ITest): void => setTest(test);\n  const [currentLang, setCurrentLang] = useState<TLangOption[\"value\"]>(\"ru\");\n  const activateCurrentLang = (lang: TLangOption[\"value\"]) => {\n    // setCurrentLang(lang);\n    setActiveLangForSwitches(lang);\n  };\n  /*   const handleClick = () => {\n    setTest({\n      ru: {\n        name: \"imya\",\n        pages: test.ru.pages,\n      },\n      lv: test.lv,\n      en: test.en,\n      pages: test.pages,\n      type: \"TP\",\n    });\n  }; */\n\n  type TTypeOptions = {\n    value: \"TT\" | \"TP\" | \"PP\";\n    label: \"Text – Text\" | \"Text – Photo\" | \"Photo – Photo\";\n  };\n  const typeOptions: Array<TTypeOptions> = [\n    { value: \"TT\", label: \"Text – Text\" },\n    { value: \"TP\", label: \"Text – Photo\" },\n    { value: \"PP\", label: \"Photo – Photo\" },\n  ];\n\n  const [testType, setTestType] = useState<TTestTypes>();\n  const handleTypeChange = (chosenType: TTestTypes): void => {\n    setTestType(chosenType);\n    setTest({\n      ...test,\n      type: chosenType,\n    });\n  };\n\n  function savePage(page: any) {\n    console.log(page);\n    let tmp = test[currentLang].pages;\n    tmp[activePage].QnAPairs = page;\n    console.log(tmp);\n    setTest({\n      ...test,\n      [currentLang]: {\n        ...test[currentLang],\n        pages: tmp,\n      },\n    });\n  }\n\n  const handleNumberInputChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    console.log(event.currentTarget.value);\n    if (\n      Number(event.currentTarget.value) >= 2 &&\n      event.currentTarget.value != undefined &&\n      Number(event.currentTarget.value) < 50\n    ) {\n      if (Number(event.currentTarget.value) > test.pages) {\n        console.log(\"test\");\n        let tmpArray = [];\n        for (\n          let i = 0;\n          i < Number(event.currentTarget.value) - test.pages;\n          i++\n        ) {\n          tmpArray.push({\n            QnAPairs: qnaEmptyNArray(currentNumberOfPairsForQnAPairs),\n          });\n        }\n        console.log(...tmpArray);\n        setTest({\n          ...test,\n          en: {\n            ...test.en,\n            pages: [...test.en.pages, ...tmpArray],\n          },\n          ru: {\n            ...test.ru,\n            pages: [...test.ru.pages, ...tmpArray],\n          },\n          lv: {\n            ...test.lv,\n            pages: [...test.lv.pages, ...tmpArray],\n          },\n          pages: Number(event.currentTarget.value),\n        });\n      } else {\n        setTest({\n          ...test,\n          en: {\n            ...test.en,\n            pages: test.en.pages.slice(\n              0,\n              test.pages - (test.pages - Number(event.currentTarget.value))\n            ),\n          },\n          ru: {\n            ...test.ru,\n            pages: test.ru.pages.slice(\n              0,\n              test.pages - (test.pages - Number(event.currentTarget.value))\n            ),\n          },\n          lv: {\n            ...test.lv,\n            pages: test.lv.pages.slice(\n              0,\n              test.pages - (test.pages - Number(event.currentTarget.value))\n            ),\n          },\n          pages: Number(event.currentTarget.value),\n        });\n      }\n      // event.currentTarget.value = String(test.pages);\n    }\n    console.log(test);\n  };\n\n  const removePage = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ): void => {\n    if (test.pages !== 1) {\n      setTest({\n        ...test,\n        en: {\n          ...test.en,\n          pages: test.en.pages.slice(0, test.pages - 1),\n        },\n        ru: {\n          ...test.ru,\n          pages: test.ru.pages.slice(0, test.pages - 1),\n        },\n        lv: {\n          ...test.lv,\n          pages: test.lv.pages.slice(0, test.pages - 1),\n        },\n        pages: test.pages - 1,\n      });\n    }\n  };\n\n  const addPage = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ): void => {\n    if (test.pages < 50) {\n      setTest({\n        ...test,\n        en: {\n          ...test.en,\n          pages: [\n            ...test.en.pages,\n            { QnAPairs: qnaEmptyNArray(currentNumberOfPairsForQnAPairs) },\n          ],\n        },\n        ru: {\n          ...test.ru,\n          pages: [\n            ...test.ru.pages,\n            { QnAPairs: qnaEmptyNArray(currentNumberOfPairsForQnAPairs) },\n          ],\n        },\n        lv: {\n          ...test.lv,\n          pages: [\n            ...test.lv.pages,\n            { QnAPairs: qnaEmptyNArray(currentNumberOfPairsForQnAPairs) },\n          ],\n        },\n        pages: test.pages + 1,\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (didMountRef.current) {\n      setPagesRendered(false);\n    } else {\n      setPagesRendered(true);\n    }\n  });\n\n  const didMountRef = useRef();\n\n  const handleTestSaving = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    event.preventDefault();\n    Axios.post(\"http://localhost:4000/tests/create\", test)\n      .catch((res) => alert(res))\n      .then((res) => console.log(res));\n  };\n\n  const testLang: TLangOption[\"value\"][] = [\"ru\", \"lv\", \"en\"];\n  const handleLangSwitchChange = (\n    checked: boolean,\n    event: MouseEvent | React.SyntheticEvent<MouseEvent | KeyboardEvent, Event>,\n    id: string\n  ) => {\n    console.log(id);\n    setCurrentLang(id as TLangOption[\"value\"]);\n\n    // testLang.forEach((lang: TLangOption[\"value\"]) => {\n    //   setLangSwitchesState({\n    //     ...langSwitchesStates,\n    //     [lang]: !langSwitchesStates[lang],\n    //   });\n    // });\n    setActiveLangForSwitches(id as TLangOption[\"value\"]);\n  };\n\n  const [langSwitchesStates, setLangSwitchesState] = useState({\n    ru: true,\n    lv: false,\n    en: false,\n  });\n  const renderLangSwitcher = (\n    languagesToHaveSwitches: TLangOption[\"value\"][]\n  ) =>\n    languagesToHaveSwitches.map((lang: TLangOption[\"value\"]) => (\n      <div className={styles.singleLangSwitcher}>\n        <p>{lang.toLocaleUpperCase()}</p>\n        <Switch\n          id={lang}\n          onChange={handleLangSwitchChange}\n          checked={langSwitchesStates[lang]}\n        />\n      </div>\n    ));\n\n  const convertType = () => {\n    const recievedTypeValueOptionPair = typeOptions[0];\n    console.log(\"Oi there from Select\");\n    return recievedTypeValueOptionPair;\n  };\n\n  return (\n    <div className={styles.CreateTestContainer}>\n      <FMLogo />\n      <div className={styles.TestNaming}>\n        <TestNamer\n          currentLang={currentLang}\n          setCurrentLang={activateCurrentLang}\n          saveTest={saveTest}\n          currentStateOfTest={test}\n        />\n      </div>\n      <div className={styles.LangSwitcher}>{renderLangSwitcher(testLang)}</div>\n\n      <div className={styles.TestType}>\n        <Select\n          options={typeOptions}\n          className={styles.TestTypeSelect}\n          defaultValue={isTestFetched ? convertType() : null}\n          onChange={(selected: any): void => {\n            setTest({\n              ...testTemplateWithThreeCards,\n              type: selected.value,\n            });\n          }}\n        />\n      </div>\n      <div className={styles.PageController}>\n        <div className={styles.AddPageCont}>\n          <h5>Pages</h5>\n          <button className={styles.ChangePagesBtn} onClick={removePage}>\n            {removePageIcon()}\n          </button>\n          <input\n            // disabled={pagesRendered}\n            type=\"number\"\n            name=\"pagesNumber\"\n            className={styles.pagesNumberIndicator}\n            placeholder={test.pages ? test.pages.toString() : \"1\"}\n            // value={currentPages}\n            onChange={handleNumberInputChange}\n          />\n          <button className={styles.ChangePagesBtn} onClick={addPage}>\n            {addPageIcon()}\n          </button>\n        </div>\n        <PagesController\n          activePage={activePage}\n          setActivePage={activateAPage}\n          currentPages={test.pages}\n        />\n      </div>\n\n      <PhotoManager\n        togglePhotoManager={openPhotos}\n        displayed={isPhotoManagerOpen}\n        currentCard={currentCard}\n        setCurrentCard={setCurrentCard}\n        pageToRender={test[currentLang].pages[activePage].QnAPairs}\n        saveChanges={savePage}\n      />\n      <TestPreview\n        togglePhotoManager={openPhotos}\n        activePage={activePage}\n        currentLanguage={currentLang}\n        setCurrentLang={activateCurrentLang}\n        // currentTestState={test}\n        pageToRender={test[currentLang].pages[activePage].QnAPairs}\n        testType={test.type}\n        saveChanges={savePage}\n        setCurrentCard={saveCurrentCard}\n      />\n      <button onClick={handleTestSaving}>Send the test!</button>\n    </div>\n  );\n\n  function setActiveLangForSwitches(id: TLangOption[\"value\"]) {\n    const tmp = langSwitchesStates;\n    for (const key in tmp) {\n      if (key === id) {\n        console.log(\"Match\", id);\n        tmp[key as TLangOption[\"value\"]] = true;\n      } else {\n        tmp[key as TLangOption[\"value\"]] = false;\n      }\n    }\n    setLangSwitchesState(tmp);\n    setCurrentLang(id);\n  }\n}\n\nexport default create_test;\nfunction addPageIcon() {\n  return (\n    <svg\n      width=\"60\"\n      height=\"60\"\n      viewBox=\"0 0 35 36\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <circle\n        r=\"17.3744\"\n        transform=\"matrix(1 0 0 -1 17.3744 18)\"\n        fill=\"#2F4858\"\n      />\n      <path\n        d=\"M23.5173 18.6826H18.0569V24.1431C18.0569 24.5198 17.7511 24.8257 17.3743 24.8257C16.9976 24.8257 16.6918 24.5198 16.6918 24.1431V18.6826H11.2312C10.8545 18.6826 10.5487 18.3768 10.5487 18.0001C10.5487 17.6233 10.8545 17.3174 11.2312 17.3174H16.6918V11.857C16.6918 11.4802 16.9976 11.1744 17.3743 11.1744C17.7511 11.1744 18.0569 11.4802 18.0569 11.857V17.3174H23.5173C23.8942 17.3174 24.2 17.6233 24.2 18.0001C24.2 18.3768 23.8942 18.6826 23.5173 18.6826Z\"\n        fill=\"white\"\n      />\n    </svg>\n  );\n}\n\nfunction removePageIcon() {\n  return (\n    <svg\n      width=\"60\"\n      height=\"60\"\n      viewBox=\"0 0 35 36\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <circle\n        r=\"17.3744\"\n        transform=\"matrix(1 0 0 -1 17.3744 18)\"\n        fill=\"#2F4858\"\n      />\n      <path\n        d=\"M11.1692 18H23.5794\"\n        stroke=\"white\"\n        stroke-width=\"2\"\n        stroke-linecap=\"round\"\n      />\n    </svg>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}