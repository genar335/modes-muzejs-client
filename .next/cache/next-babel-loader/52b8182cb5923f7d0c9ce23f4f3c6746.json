{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/ActiveTests.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport Carousel from \"react-multi-carousel\";\nimport styles from \"./styles/ActiveTests.module.scss\";\nimport { useRouter } from \"next/router\";\nimport Axios from \"axios\";\n\nvar ActiveTests = function ActiveTests(props) {\n  _s();\n\n  var createTestToRender = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return props.getActiveTests(false);\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function createTestToRender() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var _useState = useState(),\n      recievedTests = _useState[0],\n      setRecievedTests = _useState[1];\n\n  useEffect(function () {\n    var getTest = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.t0 = setRecievedTests;\n                _context2.next = 3;\n                return Axios.get(\"http://localhost:4000/tests/getTest?active=false\");\n\n              case 3:\n                _context2.t1 = _context2.sent;\n                (0, _context2.t0)(_context2.t1);\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function getTest() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n  }, []);\n  var responsive = {\n    superLargeDesktop: {\n      // the naming can be any, depends on you.\n      breakpoint: {\n        max: 4000,\n        min: 3000\n      },\n      items: 5\n    },\n    desktop: {\n      breakpoint: {\n        max: 3000,\n        min: 1024\n      },\n      items: 4\n    },\n    tablet: {\n      breakpoint: {\n        max: 1024,\n        min: 464\n      },\n      items: 2\n    },\n    mobile: {\n      breakpoint: {\n        max: 464,\n        min: 0\n      },\n      items: 1\n    }\n  };\n  var router = useRouter();\n\n  var handleAddTestClick = function handleAddTestClick() {\n    alert(\"Test addition should be happening right about now.\");\n    router.push(\"/TMS/create_test\");\n  };\n\n  return __jsx(\"div\", {\n    className: styles.ActiveTestsContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Active tests\"), __jsx(Carousel, {\n    responsive: responsive,\n    ssr: true,\n    className: styles.Carousel,\n    showDots: true,\n    dotListClass: styles.customDotListStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, addATest(handleAddTestClick)));\n};\n\n_s(ActiveTests, \"cfAO/ozkAQSD5lF6L1aBPYXeeMk=\", false, function () {\n  return [useRouter];\n});\n\n_c = ActiveTests;\nexport default ActiveTests;\n\nfunction addATest(handleAddTestClick) {\n  return __jsx(\"div\", {\n    onClick: handleAddTestClick,\n    id: \"AddTest\",\n    className: styles.AddTestCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"+\"));\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ActiveTests\");","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/ActiveTests.tsx"],"names":["React","useEffect","useState","Carousel","styles","useRouter","Axios","ActiveTests","props","createTestToRender","getActiveTests","recievedTests","setRecievedTests","getTest","get","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","router","handleAddTestClick","alert","push","ActiveTestsContainer","customDotListStyle","addATest","AddTestCard"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Carousel from \"react-multi-carousel\";\nimport TestCard from \"./TestCard\";\nimport styles from \"./styles/ActiveTests.module.scss\";\nimport { brown } from \"./constants\";\nimport { NextRouter, useRouter } from \"next/router\";\nimport { NextApiHandler } from \"next\";\nimport { ITest } from \"../@types/test\";\nimport Axios from \"axios\";\n\nconst ActiveTests = (props: {\n  getActiveTests: (active: boolean) => Promise<any>;\n}) => {\n  const createTestToRender = async () => {\n    return await props.getActiveTests(false);\n  };\n\n  const [recievedTests, setRecievedTests] = useState();\n\n  useEffect(() => {\n    const getTest = async () => {\n      setRecievedTests(\n        await Axios.get(`http://localhost:4000/tests/getTest?active=false`)\n      );\n    };\n  }, []);\n\n  const responsive = {\n    superLargeDesktop: {\n      // the naming can be any, depends on you.\n      breakpoint: { max: 4000, min: 3000 },\n      items: 5,\n    },\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 4,\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 2,\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 1,\n    },\n  };\n\n  const router: NextRouter = useRouter();\n\n  const handleAddTestClick = () => {\n    alert(\"Test addition should be happening right about now.\");\n    router.push(`/TMS/create_test`);\n  };\n\n  return (\n    <div className={styles.ActiveTestsContainer}>\n      <h1>Active tests</h1>\n      <Carousel\n        responsive={responsive}\n        ssr={true}\n        className={styles.Carousel}\n        showDots={true}\n        dotListClass={styles.customDotListStyle}\n      >\n        {addATest(handleAddTestClick)}\n      </Carousel>\n    </div>\n  );\n};\n\nexport default ActiveTests;\nfunction addATest(handleAddTestClick: () => void) {\n  return (\n    <div\n      onClick={handleAddTestClick}\n      id=\"AddTest\"\n      className={styles.AddTestCard}\n    >\n      <span>+</span>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}