{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/yberfox/Documents/personal-projects/modes-muzejs-client/pages/client/test.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useReducer, useRef, useState } from \"react\";\nimport { useRouter } from \"next/router\"; // import interact from \"interactjs\";\n\nimport styles from \"../styles/test.module.scss\";\nimport { DndProvider } from \"react-dnd\";\nimport { TouchBackend } from \"react-dnd-touch-backend\";\nimport Draggable from \"react-draggable\";\nimport store from \"store\";\nimport { productionHost, productionURL, URLCheckForLocalHost } from \"../../components/constants\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport TestProgressBar from \"../../components/TestProgressBar\";\nimport { Arrow } from \"../../components/PagesController\";\nimport Axios from \"axios\";\n\nfunction Test(props) {\n  _s();\n\n  var _this = this;\n\n  var router = useRouter();\n\n  var _useState = useState(),\n      pages = _useState[0],\n      setPages = _useState[1];\n\n  var _useState2 = useState([]),\n      pagesContent = _useState2[0],\n      setPagesContent = _useState2[1]; // const [qnaOverlaps, setQnaOverlaps] = useState(0);\n\n\n  var qnaOverlaps = useRef({\n    counter: 0\n  }); // const [currentPage, setCurrentPage] = useState<number>(0);\n\n  var initialPage = {\n    count: 0\n  };\n\n  function reducer(page, action) {\n    console.log(pages === null || pages === void 0 ? void 0 : pages.length);\n    console.log(page.count, \"counter\");\n\n    switch (action.type) {\n      case \"increment\":\n        if (page.count + 1 !== (pages === null || pages === void 0 ? void 0 : pages.length)) {\n          return {\n            count: page.count + 1\n          };\n        } else {\n          return {\n            count: page.count\n          };\n        }\n\n      case \"decrement\":\n        if (page.count !== 0) {\n          return {\n            count: page.count - 1\n          };\n        } else {\n          return {\n            count: page.count\n          };\n        }\n\n      default:\n        throw new Error();\n    }\n  }\n\n  var _useReducer = useReducer(reducer, initialPage),\n      page = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  useEffect(function () {\n    if (page.count + 1 === pagesContent.length && page.count !== 0 && pagesContent.length !== 0 // !props.test\n    ) {\n        console.log(page.count);\n        console.log(pagesContent.length);\n      }\n  });\n\n  var _useState3 = useState({\n    q: {},\n    a: {}\n  }),\n      qaRectPositions = _useState3[0],\n      setqaRectPositions = _useState3[1]; // useEffect(() => {\n  //   console.log(qaRectPositions.a?.x, qaRectPositions.q?.x, \"x, x\");\n  // }, [qaRectPositions]);\n\n\n  var refsToQuestions = useRef([]);\n  var refsToAnswersHandles = useRef([]);\n  var refsToAnswersPositions = useRef([]);\n\n  var _useState4 = useState(),\n      test = _useState4[0],\n      setTest = _useState4[1];\n\n  useEffect(function () {\n    if (props.test) {\n      setPagesContent(props.test.ru.pages);\n    } else {\n      console.log(router.query); //TODO: direct to /client/success?testid=${testid}&lang=${lang} once test is finished\n\n      var chosenLang = router.query.lang;\n\n      var _test = store.get(\"theTest\");\n\n      setTest(_test);\n      console.log(chosenLang);\n      setPagesContent(_test[store.get(\"activeLang\")].pages);\n    } // createQnAPairs(activeLang.pages);\n\n  }, []);\n  useEffect(function () {\n    var pagesPrep = prepareJSXOfPages(refsToQuestions); // console.log(pagesPrep);\n  }, [pagesContent]); // console.log(qnaOverlaps.current.counter);\n\n  function isImgOrText(data) {\n    return data.match(URLCheckForLocalHost) ? true : false;\n  }\n  /**\n   * Returns either an <img> or <p> containig the `data`\n   * @param data string containing eihter the text of a question/answer or a link to the image\n   */\n\n\n  function imgOrText(data) {\n    // console.log(data);\n    // console.log(data.match(URLCheckFor192.168.8.100));\n    if (data.match(URLCheckForLocalHost) !== null) {\n      return __jsx(\"img\", {\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          objectFit: \"cover\",\n          borderRadius: \"16px\",\n          border: \"#cba992 solid 3px\"\n        },\n        src: data,\n        alt: \":(\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }\n      });\n    } else {\n      return (// <div>\n        __jsx(\"p\", {\n          style: {\n            width: \"100%\",\n            margin: \"0\",\n            padding: \"1rem\",\n            boxSizing: \"border-box\",\n            textAlign: \"center\",\n            lineHeight: \"110%\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 17\n          }\n        }, data) // </div>\n\n      );\n    }\n  }\n\n  function handleDrag(event, data) {\n    // console.log(data);\n    // alert(\"Dragging\");\n    var tmp = event.target.parentElement.parentElement.id; // console.log(tmp);\n\n    var id = tmp.slice(tmp.indexOf(\"_\") + 1, tmp.lastIndexOf(\"_\")); // console.log(id);\n\n    refsToAnswersPositions.current[id] = {\n      position: data\n    };\n  }\n\n  function handleStopOfADrag(event, data) {\n    if (event.target.parentElement.parentElement.classList[0].includes(\"test_TCard\")) {\n      var tmp = event.target.parentElement.parentElement.id;\n      var id = tmp.slice(tmp.indexOf(\"_\") + 1, tmp.lastIndexOf(\"_\"));\n\n      var _getRectanglesFromEve = getRectanglesFromEvent(event),\n          questionRect = _getRectanglesFromEve.questionRect,\n          answerRect = _getRectanglesFromEve.answerRect;\n\n      var intersections = refsToQuestions.current.map(function (q) {\n        return CheckIfAnswerIntersectedTheQuestion(q.getBoundingClientRect(), answerRect);\n      });\n      console.log(intersections);\n\n      if (CheckIfAnswerIntersectedTheQuestion(questionRect, answerRect)) {\n        // console.log(event.target.parentNode.parentNode);\n        // event.target.parentNode.parentNode.style.pointerEvents = \"none\";\n        applyCSSToMatchedCards(event, refsToQuestions.current[id]);\n        qnaOverlaps.current.counter += 1;\n        console.log(refsToQuestions.current[id]);\n        var questionContainer = refsToQuestions.current[id].parentElement; // console.log(questionContainer, \"123123\");\n        // console.log(refsToAnswersHandles.current[id]);\n\n        refsToAnswersHandles.current[id].parentElement.style.transform = \"translate(0px, 0px)\";\n        refsToAnswersHandles.current[id].parentElement.style.marginTop = \"-1rem\";\n        questionContainer.appendChild(refsToAnswersHandles.current[id].parentElement); // event.target.style.pointerEvents.parentElement = \"none\";\n\n        if (qnaOverlaps.current.counter === 3) {\n          // alert(pagesContent.length);\n          // if (page.count < pagesContent.length - 1) {\n          refsToQuestions.current = []; // setCurrentPage(currentPage + 1);\n          // setTimeout(() => {\n\n          dispatch({\n            type: \"increment\"\n          }); // }, 1000);\n\n          console.log(page.count, \"pages\", pagesContent.length, \"pagesContent\"); // }\n\n          qnaOverlaps.current.counter = 0;\n        }\n      } else {\n        intersections.includes(true) && flashScreen();\n      } // refsToAnswersPositions.current[id] = {\n      //   position: {\n      //     x: data.x,\n      //     y: data.y,\n      //     deltaX: data.x - data.lastX,\n      //     deltaY: data.y - data.lastY,\n      //   },\n      // };\n\n\n      refsToAnswersPositions.current[id] = {\n        position: data\n      };\n    }\n  }\n\n  function flashScreen() {\n    return _flashScreen.apply(this, arguments);\n  }\n\n  function _flashScreen() {\n    _flashScreen = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var testBody;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              testBody = document.getElementsByClassName(styles.pageContainer)[0];\n              testBody.style.boxShadow = \"inset 0px 0px 30px 30px red\";\n              setTimeout(function () {\n                return testBody.style.boxShadow = \"none\";\n              }, 500);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _flashScreen.apply(this, arguments);\n  }\n\n  function applyCSSToMatchedCards(event, answer) {\n    // // Sets the contasiner of cards to be unclickable/untouchable.\n    // event.target.parentElement.parentElement.parentElement.parentElement.style.pointerEvents =\n    //   \"none\";\n    console.log(answer.parentElement);\n    answer.parentElement.style.pointerEvents = \"none\"; // answer.style.width = \"100rem\";\n    //* Applies a greenish border around answer cards.\n\n    console.log(event.target.tagName);\n\n    if (event.target.tagName == \"P\") {\n      console.log(event.target.parentElement.parentElement.style.border);\n      event.target.parentElement.parentElement.style.border = \"solid 5px rgb(37, 180, 150)\";\n      event.target.parentElement.parentElement.parentElement.style.position = \"inherit\";\n      console.log(event.target.parentElement.parentElement.style.border);\n    } else if (event.target.tagName == \"IMG\") {\n      console.log(event.target); // event.target.style.border = \"none\";\n\n      event.target.style.border = \"solid 5px rgb(37, 180, 150)\";\n      event.target.style.borderColor = \"rgb(73, 180, 150,)\";\n      event.target.parentElement.parentElement.parentElement.style.position = \"inherit\";\n    }\n  }\n  /**\n   * Checks whether the dragged element intersects its question.\n   * @param event refer to React Draggable\n   */\n\n\n  function CheckIfAnswerIntersectedTheQuestion(questionRect, answerRect) {\n    // const { questionRect, answerRect } = getRectangles(event);\n    // let answerRect = answerDragged.parentElement!.getBoundingClientRect();\n    setqaRectPositions({\n      q: questionRect,\n      a: answerRect\n    });\n\n    if (questionRect.x < answerRect.x + answerRect.width && questionRect.x + questionRect.width > answerRect.x) {\n      if (questionRect.y < answerRect.y + answerRect.height && questionRect.y + questionRect.height > answerRect.y) {\n        // console.log(answerDragged.parentElement?.parentElement, \"oi\");\n        // answerDragged.parentElement!.style.filter = \"brightness(0.5)\";\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  function getRectanglesFromEvent(event) {\n    setqaRectPositions({});\n    var answerDragged = event.target.parentElement.parentElement;\n    console.log(answerDragged);\n    var answerDraggedID = answerDragged.id; // const relatedQuestion = document.getElementById(\n    //   `Question_${answerDraggedID.slice(answerDraggedID.indexOf(\"_\"))}`\n    // );\n\n    var answerDraggedIterator = answerDraggedID.slice(answerDraggedID.indexOf(\"_\") + 1, answerDraggedID.lastIndexOf(\"_\"));\n    var relatedAnswerHandle = refsToAnswersHandles.current[Number(answerDraggedIterator)]; // console.log(relatedAnswerHandle, \"handles\");\n\n    var relatedQuestionHandle = refsToQuestions.current[Number(answerDraggedIterator)]; // console.log(relatedQuestionHandle, \"handles\");\n\n    var questionRect = relatedQuestionHandle.getBoundingClientRect();\n    var answerRect = relatedAnswerHandle.getBoundingClientRect();\n    return {\n      questionRect: questionRect,\n      answerRect: answerRect\n    };\n  }\n\n  var TestCompletionAcknowledgement = function TestCompletionAcknowledgement() {\n    return {\n      ru: \"\\u0422\\u0435\\u0441\\u0442 \\\"\".concat(props.test ? props.test[props.activeLanguage].name : store.get(\"theTest\").ru.name, \"\\\" \\u043F\\u0440\\u043E\\u0439\\u0434\\u0435\\u043D.\"),\n      lv: \"Tests \\\"\".concat(props.test ? props.test[props.activeLanguage].name : store.get(\"theTest\").lv.name, \"\\\" ir pabeigts.\"),\n      en: \"Test \\\"\".concat(props.test ? props.test[props.activeLanguage].name : store.get(\"theTest\").en.name, \"\\\" is compeleted.\")\n    };\n  };\n\n  var _useState5 = useState(\"\"),\n      clientEmail = _useState5[0],\n      setClientEmail = _useState5[1];\n\n  var emailRef = useRef(\"\");\n\n  function prepareLastPageJSX(body, heading, email) {\n    console.log(heading, body);\n    return __jsx(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n        alignItems: \"center\",\n        flexDirection: \"row\",\n        width: \"100%\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        width: \"50%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 17\n      }\n    }, __jsx(\"h1\", {\n      style: {\n        color: \"#c6aa96\",\n        textAlign: \"center\",\n        fontWeight: 300,\n        fontSize: \"60px\",\n        margin: \"0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 21\n      }\n    }, heading), __jsx(\"p\", {\n      style: {\n        fontSize: \"36px\",\n        fontWeight: 300,\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 21\n      }\n    }, body)), __jsx(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"40%\",\n        height: \"160px\",\n        justifyContent: \"space-around\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 17\n      }\n    }, email && // <form onSubmit={(e) => e.preventDefault()}>\n    __jsx(\"input\", {\n      onChange: function onChange(e) {\n        emailRef.current = e.target.value;\n        console.log(emailRef.current, \"ref\"); // setClientEmail(e.target.value);\n\n        console.log(clientEmail, \"state\");\n        console.log(e.target.value);\n        console.log(e.currentTarget.value);\n      },\n      autoComplete: \"off\",\n      style: {\n        // position: \"absolute\",\n        background: \"rgba(0, 0, 0, 0)\",\n        color: \"#C6AA96\",\n        border: \"#C6AA96 solid 3px\",\n        padding: \"0\",\n        borderRadius: \"16px\",\n        // width: \"100%\",\n        height: \"30%\",\n        fontSize: \"35px\",\n        textAlign: \"center\"\n      },\n      placeholder: \"example@mail.com\",\n      type: \"email\",\n      name: \"userInfo\",\n      id: \"userEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 25\n      }\n    }), __jsx(\"button\", {\n      style: {\n        width: \"100%\",\n        height: \"45%\",\n        backgroundColor: \"#C6AA96\",\n        border: \"none\",\n        borderRadius: \"16px\",\n        padding: \"0\" // WebkitTextFillColor: \"transparent\",\n        // WebkitBackgroundClip: \"text\",\n\n      },\n      onClick: handleSendBtnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 21\n      }\n    }, __jsx(\"p\", {\n      style: {\n        margin: \"0\",\n        color: \"black\",\n        fontFamily: \"Montserrat\",\n        fontSize: \"40px\",\n        fontWeight: 700,\n        background: \"whatever\",\n        letterSpacing: 6 // WebkitTextFillColor: \"transparent\",\n        // WebkitBackgroundClip: \"text\",\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 25\n      }\n    }, getBtnText().toLocaleUpperCase()))));\n\n    function getBtnText() {\n      return getLang() === \"en\" ? \"Finish\" : getLang() === \"lv\" ? \"Pabeigt\" : \"Закончить\";\n    }\n\n    function getLang() {\n      return store.get(\"activeLang\");\n    }\n  }\n\n  function handleSendBtnClick(_x) {\n    return _handleSendBtnClick.apply(this, arguments);\n  }\n\n  function _handleSendBtnClick() {\n    _handleSendBtnClick = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var options, response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(e); // const response = await Axios.post(`${productionURL}email`, {\n              //   email: clientEmail,\n              // });\n\n              options = {\n                method: \"POST\",\n                url: \"https://modesmuzejs.lv/api/quiz/tests/email\",\n                origin: productionHost,\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                },\n                data: {\n                  email: \"1231@gmail.com\"\n                }\n              }; // await Axios.request(options)\n              //   .then(function (response) {\n              //     console.log(response.data);\n              //   })\n              //   .catch(function (error) {\n              //     console.error(error);\n              //   });\n              // console.log(response);\n\n              console.log(clientEmail, \"state\");\n              console.log({\n                email: clientEmail\n              });\n              _context2.next = 6;\n              return Axios.post(\"\".concat(productionURL, \"tests/email\"), {\n                email: emailRef.current\n              });\n\n            case 6:\n              response = _context2.sent;\n              console.log(response);\n\n              if (response.status === 200) {\n                router.push(\"\".concat(productionHost, \"/client/languages?testid=\").concat(store.get(\"theTest\").id));\n              }\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _handleSendBtnClick.apply(this, arguments);\n  }\n\n  function prepareFirstPage() {\n    return txtExpalantion();\n  }\n\n  var start_test_btn = function start_test_btn() {\n    return __jsx(\"svg\", {\n      width: \"116.656\",\n      height: \"116.66\",\n      viewBox: \"0 0 116.656 116.66\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 9\n      }\n    }, __jsx(\"defs\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 13\n      }\n    }, __jsx(\"filter\", {\n      id: \"Path_14\",\n      x: \"0\",\n      y: \"0\",\n      width: \"116.656\",\n      height: \"116.66\",\n      filterUnits: \"userSpaceOnUse\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 17\n      }\n    }, __jsx(\"feOffset\", {\n      dy: \"3\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 21\n      }\n    }), __jsx(\"feGaussianBlur\", {\n      stdDeviation: \"3\",\n      result: \"blur\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 21\n      }\n    }), __jsx(\"feFlood\", {\n      \"flood-opacity\": \"0.161\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 21\n      }\n    }), __jsx(\"feComposite\", {\n      operator: \"in\",\n      in2: \"blur\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 21\n      }\n    }), __jsx(\"feComposite\", {\n      \"in\": \"SourceGraphic\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 21\n      }\n    }))), __jsx(\"g\", {\n      id: \"Icon_feather-arrow-right-circle\",\n      \"data-name\": \"Icon feather-arrow-right-circle\",\n      transform: \"translate(11.503 6.771)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 13\n      }\n    }, __jsx(\"g\", {\n      transform: \"matrix(1, 0, 0, 1, -11.5, -6.77)\",\n      filter: \"url(#Path_14)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 17\n      }\n    }, __jsx(\"path\", {\n      id: \"Path_14-2\",\n      \"data-name\": \"Path 14\",\n      d: \"M95.656,49.33A46.328,46.328,0,1,1,49.328,3,46.329,46.329,0,0,1,95.656,49.33Z\",\n      transform: \"translate(9 6)\",\n      fill: \"none\",\n      stroke: \"#c6aa96\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      \"stroke-width\": \"6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 21\n      }\n    })), __jsx(\"path\", {\n      id: \"Path_15\",\n      \"data-name\": \"Path 15\",\n      d: \"M18,47.06,35.53,29.53,18,12\",\n      transform: \"translate(28.825 19.03)\",\n      fill: \"none\",\n      stroke: \"#c6aa96\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      \"stroke-width\": \"5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 17\n      }\n    }), __jsx(\"path\", {\n      id: \"Path_16\",\n      \"data-name\": \"Path 16\",\n      d: \"M12,18H47.06\",\n      transform: \"translate(17.295 30.559)\",\n      fill: \"none\",\n      stroke: \"#c6aa96\",\n      \"stroke-linecap\": \"round\",\n      \"stroke-linejoin\": \"round\",\n      \"stroke-width\": \"5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 17\n      }\n    })));\n  };\n\n  function txtExpalantion() {\n    var sampleTxt = {\n      ru: \"Найдите соответствие, переставляя нижние карточки.\",\n      en: \"Find a match by moving the bottom cards.\",\n      lv: \"Atrodiet atbilstību, pārliekot apakšējas kartītes.\"\n    };\n    return __jsx(\"div\", {\n      id: \"btn_txt_container\",\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"space-evenly\",\n        height: \"40%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 13\n      }\n    }, __jsx(\"h1\", {\n      style: {\n        fontWeight: 400,\n        fontSize: \"xxx-large\",\n        textAlign: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 17\n      }\n    }, sampleTxt[store.get(\"activeLang\")]), __jsx(\"button\", {\n      style: {\n        background: \"none\",\n        border: \"none\"\n      },\n      onClick: function onClick() {\n        return dispatch({\n          type: \"increment\"\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 17\n      }\n    }, start_test_btn()));\n  }\n\n  function ExplanatoryVideo() {\n    return __jsx(\"div\", {\n      style: {\n        position: \"absolute\",\n        width: \"100vw\",\n        height: \"100vh\",\n        background: \"black\",\n        zIndex: 10000,\n        top: 0,\n        left: 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 13\n      }\n    }, __jsx(\"video\", {\n      onEnded: function onEnded() {\n        return dispatch({\n          type: \"increment\"\n        });\n      },\n      controls: true,\n      autoPlay: true,\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 17\n      }\n    }, __jsx(\"source\", {\n      src: \"/Test_Example.webm\",\n      type: \"video/webm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 21\n      }\n    })));\n  }\n  /**\n   * Wraps question and answer pairs into a div (containing 3 pairs in this case)\n   */\n\n\n  function prepareJSXOfPages(refsToQuestions) {\n    var _this2 = this;\n\n    // console.log(pagesContent);\n    var pagesPrep = [];\n    console.log(pagesPrep);\n    props.fromPreview == undefined && pagesPrep.push(prepareFirstPage());\n    var tmpPages = pagesContent.map(function (page, pageIterator) {\n      return (// <AnimatePresence>\n        __jsx(motion.div, {\n          initial: {\n            opacity: 0\n          },\n          animate: {\n            opacity: 1\n          },\n          exit: {\n            opacity: 0\n          },\n          id: \"page-\".concat(pageIterator),\n          key: pageIterator,\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            width: \"90%\",\n            height: \"88%\"\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 13\n          }\n        }, qnaPairsToJSX(page, pageIterator, refsToQuestions)) // </AnimatePresence>\n\n      );\n    }); // console.log(tmpPages);\n\n    pagesPrep.push.apply(pagesPrep, _toConsumableArray(tmpPages)); // console.log(pagesPrep);\n\n    var tmp;\n\n    if (props.fromPreview) {\n      tmp = store.get(\"testInProgress\");\n    } else {\n      tmp = store.get(\"theTest\");\n    }\n\n    console.log(tmp);\n\n    var _ref = tmp[store.get(\"activeLang\")] || props.test[props.activeLanguage],\n        finalPageTextBody = _ref.finalPageTextBody,\n        finalPageTextHeading = _ref.finalPageTextHeading;\n\n    console.log(tmp);\n    var lastPage = prepareLastPageJSX(finalPageTextBody, finalPageTextHeading, tmp.emailSender\n    /* as boolean */\n    );\n    pagesPrep.push(lastPage);\n    setPages(pagesPrep); // console.log(pages);\n\n    return pagesPrep;\n  }\n\n  var textCardCSSSetting = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    width: \"320px\",\n    height: \"min-content\",\n    // padding: \"1rem\",\n    border: \"3px solid rgb(198\t169\t149\t)\"\n  };\n\n  function setStyleAccordingToTestType(cardData) {\n    switch (test === null || test === void 0 ? void 0 : test.type) {\n      case \"PP\":\n        return {\n          width: \"250px\",\n          height: \"259.37px\"\n        };\n\n      case \"TT\":\n        return textCardCSSSetting;\n\n      default:\n        return isImgOrText(cardData) ? {\n          width: \"320px\",\n          height: \"347px\"\n        } : textCardCSSSetting;\n    }\n  }\n  /**\n   * Returns an array of JSX Elements containing question and answer cards (which are shuffled randomly before rendering) in pairs\n   * @param page Array of question and answer pairs to be rendered\n   * @param pageIterator page (int) to which the array corresponds\n   */\n\n\n  function qnaPairsToJSX(page, pageIterator, refsToQuestions) {\n    var _this3 = this;\n\n    var questions = page.QnAPairs.map(function (qnaPair, iterator) {\n      return __jsx(\"div\", {\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          justifyContent: \"center\",\n          alignItems: \"center\"\n        },\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        className: styles.TCard,\n        id: \"Question_\".concat(iterator, \"_p-\").concat(pageIterator),\n        key: \"Question_\".concat(iterator, \"_p-\").concat(pageIterator),\n        style: setStyleAccordingToTestType(qnaPair.question),\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        style: {\n          height: \"100%\",\n          boxSizing: \"border-box\"\n        },\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 21\n        }\n      }, imgOrText(qnaPair.question))), __jsx(\"div\", {\n        ref: function ref(ele) {\n          return refsToQuestions.current[iterator] = ele;\n        },\n        style: {\n          marginTop: isImgOrText(qnaPair.question) ? \"0.2rem\" : \"-0.1rem\",\n          width: \"min-content\",\n          zIndex: 100\n        },\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 17\n        }\n      }, StickCircle()));\n    });\n\n    for (var i = 0; i < page.QnAPairs.length; i++) {\n      refsToAnswersPositions.current[i] = {\n        position: {\n          x: 0,\n          y: 0\n        }\n      };\n    }\n\n    var answers = page.QnAPairs.map(function (qnaPair, iterator) {\n      return __jsx(Draggable, {\n        axis: \"both\" // onTouchStart={handleStartOfDrag}\n        ,\n        onDrag: handleDrag // position={refsToAnswersPositions.current[iterator].position}\n        ,\n        onStop: handleStopOfADrag // position={null}\n        // grid={[25, 25]}\n        ,\n        defaultPosition: {\n          x: 0,\n          y: 0\n        },\n        scale: 1,\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 13\n        }\n      }, __jsx(\"div\", {\n        style: {\n          position: \"absolute\",\n          bottom: \"10%\",\n          display: \"flex\",\n          flexDirection: \"column-reverse\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n          zIndex: 100 // border: \"3px solid rgb(198\t169\t149\t)\",\n\n        },\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        className: styles.TCard,\n        id: \"Answer_\".concat(iterator, \"_p-\").concat(pageIterator),\n        key: iterator,\n        style: setStyleAccordingToTestType(qnaPair.answer),\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 847,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        style: {\n          height: \"100%\",\n          width: \"100%\",\n          boxSizing: \"border-box\"\n        },\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 25\n        }\n      }, imgOrText(qnaPair.answer))), __jsx(\"div\", {\n        ref: function ref(ele) {\n          return refsToAnswersHandles.current[iterator] = ele;\n        },\n        style: {\n          zIndex: 100,\n          marginBottom: isImgOrText(qnaPair.answer) ? \"-0.35rem\" : \"-0.3rem\",\n          width: \"min-content\"\n        },\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 863,\n          columnNumber: 21\n        }\n      }, StickSemiCircle())));\n    });\n    var answersShuffled = shuffle(answers);\n    var questionsShuffled = shuffle(questions); // console.log(tmp);\n    // console.log(questions, answers);\n\n    var preparedPairsShuffled = page.QnAPairs.map(function (_, iterator) {\n      return __jsx(motion.div, {\n        // initial=\"hidden\"\n        // animate=\"visible\"\n        variants: variantsQnAPairs,\n        transition: {\n          duration: \"1.5\"\n        },\n        key: \"QuestionAnswerP-\".concat(iterator, \"_p-\").concat(pageIterator),\n        className: styles.qnaContainer,\n        __self: _this3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 13\n        }\n      }, questions[iterator], answersShuffled[iterator]);\n    });\n    return preparedPairsShuffled;\n  }\n\n  var variantsQnAPairs = {\n    visible: {\n      opacity: 1\n    },\n    hidden: {\n      opacity: 0\n    }\n  };\n\n  function shuffle(array) {\n    var m = array.length;\n    var t;\n    var i; // console.log(m, t, i);\n    // While there remain elements to shuffle…\n\n    while (m) {\n      // Pick a remaining element…\n      i = Math.floor(Math.random() * m--); // console.log(i, \"i\");\n      // And swap it with the current element.\n\n      t = array[m];\n      array[m] = array[i];\n      array[i] = t; // console.log(array);\n    }\n\n    return array;\n  }\n\n  var StickCircle = function StickCircle() {\n    return __jsx(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"19\",\n      height: \"26.956\",\n      viewBox: \"0 0 19 26.956\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 934,\n        columnNumber: 9\n      }\n    }, __jsx(\"g\", {\n      id: \"Group_35\",\n      \"data-name\": \"Group 35\",\n      transform: \"translate(-115.882 -241.137)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 940,\n        columnNumber: 13\n      }\n    }, __jsx(\"line\", {\n      id: \"Line_1\",\n      \"data-name\": \"Line 1\",\n      y2: \"11\",\n      transform: \"translate(125.357 243.137)\",\n      fill: \"none\",\n      stroke: \"#c6aa96\" // strokeLinecap=\"round\"\n      ,\n      strokeWidth: \"4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 945,\n        columnNumber: 17\n      }\n    }), __jsx(\"circle\", {\n      id: \"Ellipse_4\",\n      \"data-name\": \"Ellipse 4\",\n      cx: \"9.5\",\n      cy: \"9.5\",\n      r: \"9.5\",\n      transform: \"translate(115.882 249.094)\",\n      fill: \"#c6aa96\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 955,\n        columnNumber: 17\n      }\n    })));\n  };\n\n  var StickSemiCircle = function StickSemiCircle() {\n    return __jsx(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      width: \"19\",\n      height: \"18.761\",\n      viewBox: \"0 0 19 18.761\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 969,\n        columnNumber: 9\n      }\n    }, __jsx(\"g\", {\n      id: \"Group_34\",\n      \"data-name\": \"Group 34\",\n      transform: \"translate(-115.996 0)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 975,\n        columnNumber: 13\n      }\n    }, __jsx(\"line\", {\n      id: \"Line_4\",\n      \"data-name\": \"Line 4\",\n      y2: \"110\",\n      transform: \"translate(125.357 5.761)\",\n      fill: \"none\",\n      stroke: \"#c6aa96\" // strokeLinecap=\"round\"\n      ,\n      strokeWidth: \"4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 976,\n        columnNumber: 17\n      }\n    }), __jsx(\"g\", {\n      id: \"Path_11\",\n      \"data-name\": \"Path 11\",\n      transform: \"translate(115.996 -7.551)\",\n      fill: \"none\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 986,\n        columnNumber: 17\n      }\n    }, __jsx(\"path\", {\n      d: \"M9.5,11.26c5.247,0,9.5-7.007,9.5-1.76a9.5,9.5,0,0,1-19,0C0,4.253,4.253,11.26,9.5,11.26Z\",\n      stroke: \"none\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 992,\n        columnNumber: 21\n      }\n    }), __jsx(\"path\", {\n      d: \"M 0.8809738159179688 7.550793647766113 C 2.390966415405273 7.550793647766113 5.682500839233398 11.26012802124023 9.5 11.26012802124023 C 13.31717872619629 11.26012802124023 16.60886001586914 7.551321029663086 18.11902618408203 7.550793647766113 C 18.68457794189453 7.550596237182617 19 8.070477485656738 19 9.499998092651367 C 19 14.74670791625977 14.74670028686523 18.99999809265137 9.5 18.99999809265137 C 4.253299713134766 18.99999809265137 0 14.74670791625977 0 9.499998092651367 C 0 8.070796966552734 0.3156604766845703 7.550793647766113 0.8809738159179688 7.550793647766113 Z\",\n      stroke: \"none\",\n      fill: \"#c6aa96\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 996,\n        columnNumber: 21\n      }\n    }))));\n  };\n\n  var ExitBtn = function ExitBtn(size) {\n    return !props.fromPreview && __jsx(\"svg\", {\n      // className={compStyles.CloseBTN}\n      onClick: function onClick() {\n        return !props.test && router.push(\"\".concat(productionHost, \"/client/languages?testid=\").concat(store.get(\"theTest\")._id) // `${devURL}client/test?testid=${\n        //   store.get(\"theTest\")._id\n        // }&lang=${store.get(\"activeLang\")}`\n        );\n      },\n      width: size,\n      height: size,\n      viewBox: \"0 0 56 56\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1008,\n        columnNumber: 9\n      }\n    }, console.log(props.test, 'props check'), __jsx(\"g\", {\n      id: \"Group_28\",\n      \"data-name\": \"Group 28\",\n      transform: \"translate(-1194 -73)\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1028,\n        columnNumber: 13\n      }\n    }, __jsx(\"circle\", {\n      id: \"Ellipse_8\",\n      \"data-name\": \"Ellipse 8\",\n      cx: \"16.5\",\n      cy: \"16.5\",\n      r: \"16.5\",\n      transform: \"translate(1194 73)\",\n      fill: \"#c6aa96\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1029,\n        columnNumber: 17\n      }\n    }), __jsx(\"path\", {\n      id: \"Icon_ionic-ios-close\",\n      \"data-name\": \"Icon ionic-ios-close\",\n      d: \"M23.921,21.5l7.3-7.3A1.71,1.71,0,0,0,28.8,11.786l-7.3,7.3-7.3-7.3A1.71,1.71,0,1,0,11.788,14.2l7.3,7.3-7.3,7.3a1.71,1.71,0,1,0,2.418,2.418l7.3-7.3,7.3,7.3A1.71,1.71,0,1,0,31.218,28.8Z\",\n      transform: \"translate(1188.715 67.711)\",\n      fill: \"#1b212e\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1038,\n        columnNumber: 17\n      }\n    })));\n  };\n\n  function checkWhetherIsPreview() {\n    if (props.fromPreview) {\n      var PreviewStyle = {\n        width: \"100%\",\n        height: \"100%\"\n      };\n      return PreviewStyle;\n    }\n\n    return {};\n  }\n\n  return __jsx(DndProvider, {\n    backend: TouchBackend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1066,\n      columnNumber: 9\n    }\n  }, props.test && __jsx(React.Fragment, null, __jsx(\"button\", {\n    style: {\n      position: \"absolute\",\n      top: \"46%\",\n      right: \"3%\",\n      border: \"none\",\n      background: \"none\"\n    },\n    onClick: function onClick() {\n      console.log(\"123\");\n      dispatch({\n        type: \"increment\"\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1070,\n      columnNumber: 21\n    }\n  }, Arrow(\"60\", \"84\")), __jsx(\"button\", {\n    style: {\n      position: \"absolute\",\n      top: \"46%\",\n      left: \"3%\",\n      transform: \"rotate(180deg)\",\n      background: \"none\",\n      border: \"none\"\n    },\n    onClick: function onClick() {\n      return dispatch({\n        type: \"decrement\"\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1085,\n      columnNumber: 21\n    }\n  }, Arrow(\"60\", \"84\"))), __jsx(AnimatePresence, {\n    exitBeforeEnter: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1101,\n      columnNumber: 13\n    }\n  }, __jsx(motion.div, {\n    key: \"animatedPage\",\n    initial: {\n      opacity: 0,\n      y: -100\n    },\n    animate: {\n      opacity: 1,\n      y: 0\n    },\n    exit: {\n      opacity: 0,\n      y: 500\n    },\n    className: styles.pageContainer,\n    style: checkWhetherIsPreview(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1102,\n      columnNumber: 17\n    }\n  }, !props.test && __jsx(\"img\", {\n    src: \"https://www.fashionmuseumriga.lv/bitrix/templates/main_template/img/logo.png\",\n    alt: \"Fashion Museum\",\n    id: styles.MMlogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1111,\n      columnNumber: 25\n    }\n  }), __jsx(motion.div, {\n    key: \"testContainerAnima\",\n    className: styles.testContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1117,\n      columnNumber: 21\n    }\n  }, (pages === null || pages === void 0 ? void 0 : pages.length) - 1 != page.count\n  /* 578G */\n  && __jsx(\"button\", {\n    style: {\n      opacity: \"70%\",\n      position: \"absolute\",\n      right: \"2%\",\n      top: \"5%\",\n      backgroundColor: \"rgba(0, 0, 0, 0)\",\n      border: \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1119,\n      columnNumber: 29\n    }\n  }, ExitBtn(\"45\")), pages !== undefined && page.count !== (pages === null || pages === void 0 ? void 0 : pages.length) - 1 && __jsx(TestProgressBar // activePage={!props.fromPreview ? page.count - 1 : page.count}\n  , {\n    activePage:\n    /* props.fromPreview == undefined ? page.count - 1 : */\n    page.count,\n    numberOfPages: props.fromPreview == undefined ? pages.length - 1 : pages.length // numberOfPages={\n    //   !props.fromPreview ? pages?.length - 1 : page.count\n    // }\n    // numberOfPages={10}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1134,\n      columnNumber: 29\n    }\n  }), __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      pointerEvents: \"\".concat(props.test && \"none\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1150,\n      columnNumber: 25\n    }\n  }, pages !== undefined && pages[page.count])))));\n}\n\n_s(Test, \"Ai+MCQwPJmdpHnKVcAKE0s5g/3Q=\", false, function () {\n  return [useRouter];\n});\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/yberfox/Documents/personal-projects/modes-muzejs-client/pages/client/test.tsx"],"names":["React","useEffect","useReducer","useRef","useState","useRouter","styles","DndProvider","TouchBackend","Draggable","store","productionHost","productionURL","URLCheckForLocalHost","AnimatePresence","motion","TestProgressBar","Arrow","Axios","Test","props","router","pages","setPages","pagesContent","setPagesContent","qnaOverlaps","counter","initialPage","count","reducer","page","action","console","log","length","type","Error","dispatch","q","a","qaRectPositions","setqaRectPositions","refsToQuestions","refsToAnswersHandles","refsToAnswersPositions","test","setTest","ru","query","chosenLang","lang","get","pagesPrep","prepareJSXOfPages","isImgOrText","data","match","imgOrText","width","height","objectFit","borderRadius","border","margin","padding","boxSizing","textAlign","lineHeight","handleDrag","event","tmp","target","parentElement","id","slice","indexOf","lastIndexOf","current","position","handleStopOfADrag","classList","includes","getRectanglesFromEvent","questionRect","answerRect","intersections","map","CheckIfAnswerIntersectedTheQuestion","getBoundingClientRect","applyCSSToMatchedCards","questionContainer","style","transform","marginTop","appendChild","flashScreen","testBody","document","getElementsByClassName","pageContainer","boxShadow","setTimeout","answer","pointerEvents","tagName","borderColor","x","y","answerDragged","answerDraggedID","answerDraggedIterator","relatedAnswerHandle","Number","relatedQuestionHandle","TestCompletionAcknowledgement","activeLanguage","name","lv","en","clientEmail","setClientEmail","emailRef","prepareLastPageJSX","body","heading","email","display","justifyContent","alignItems","flexDirection","color","fontWeight","fontSize","e","value","currentTarget","background","backgroundColor","handleSendBtnClick","fontFamily","letterSpacing","getBtnText","toLocaleUpperCase","getLang","options","method","url","origin","headers","post","response","status","push","prepareFirstPage","txtExpalantion","start_test_btn","sampleTxt","ExplanatoryVideo","zIndex","top","left","fromPreview","undefined","tmpPages","pageIterator","opacity","qnaPairsToJSX","finalPageTextBody","finalPageTextHeading","lastPage","emailSender","textCardCSSSetting","setStyleAccordingToTestType","cardData","questions","QnAPairs","qnaPair","iterator","TCard","question","ele","StickCircle","i","answers","bottom","marginBottom","StickSemiCircle","answersShuffled","shuffle","questionsShuffled","preparedPairsShuffled","_","variantsQnAPairs","duration","qnaContainer","visible","hidden","array","m","t","Math","floor","random","ExitBtn","size","_id","checkWhetherIsPreview","PreviewStyle","right","MMlogo","testContainer"],"mappings":"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","sourcesContent":["import React, {useEffect, useReducer, useRef, useState} from \"react\";\nimport {useRouter} from \"next/router\";\n// import interact from \"interactjs\";\nimport styles from \"../styles/test.module.scss\";\nimport {DndProvider} from \"react-dnd\";\nimport {TouchBackend} from \"react-dnd-touch-backend\";\nimport Draggable, {DraggableData, DraggableEventHandler,} from \"react-draggable\";\nimport store from \"store\";\nimport {IQnA, IQnAPairs, ITest, TLangOption} from \"../../@types/test\";\nimport {productionHost, productionURL, URLCheckForLocalHost,} from \"../../components/constants\";\nimport {AnimatePresence, motion} from \"framer-motion\";\nimport TestProgressBar from \"../../components/TestProgressBar\";\nimport {Arrow} from \"../../components/PagesController\";\nimport Axios from \"axios\";\n\nfunction Test(props: {\n    test: ITest;\n    activeLanguage: TLangOption[\"value\"];\n    fromPreview?: boolean;\n}) {\n    const router = useRouter();\n\n    const [pages, setPages] = useState<JSX.Element[]>();\n    const [pagesContent, setPagesContent] = useState<Array<IQnAPairs>>([]);\n    // const [qnaOverlaps, setQnaOverlaps] = useState(0);\n    const qnaOverlaps = useRef({\n        counter: 0,\n    });\n    // const [currentPage, setCurrentPage] = useState<number>(0);\n    const initialPage = {count: 0};\n\n    function reducer(page, action) {\n        console.log(pages?.length);\n        console.log(page.count, \"counter\");\n        switch (action.type) {\n            case \"increment\":\n                if (page.count + 1 !== pages?.length) {\n                    return {count: page.count + 1};\n                } else {\n                    return {count: page.count};\n                }\n            case \"decrement\":\n                if (page.count !== 0) {\n                    return {count: page.count - 1};\n                } else {\n                    return {count: page.count};\n                }\n            default:\n                throw new Error();\n        }\n    }\n\n    const [page, dispatch] = useReducer(reducer, initialPage);\n    useEffect(() => {\n        if (\n            page.count + 1 === pagesContent.length &&\n            page.count !== 0 &&\n            pagesContent.length !== 0\n            // !props.test\n        ) {\n            console.log(page.count);\n            console.log(pagesContent.length);\n        }\n    });\n\n    const [qaRectPositions, setqaRectPositions] = useState<{\n        q: DOMRect;\n        a: DOMRect;\n    }>({\n        q: {},\n        a: {},\n    });\n    // useEffect(() => {\n    //   console.log(qaRectPositions.a?.x, qaRectPositions.q?.x, \"x, x\");\n    // }, [qaRectPositions]);\n\n    const refsToQuestions = useRef<HTMLElement[]>([]);\n    const refsToAnswersHandles = useRef<HTMLElement[]>([]);\n    const refsToAnswersPositions = useRef([]);\n\n    const [test, setTest] = useState<ITest>();\n\n    useEffect(() => {\n        if (props.test) {\n            setPagesContent(props.test.ru.pages);\n        } else {\n            console.log(router.query);\n\n            //TODO: direct to /client/success?testid=${testid}&lang=${lang} once test is finished\n            const chosenLang: \"ru\" | \"en\" | \"lv\" = router.query\n                .lang! as TLangOption[\"value\"];\n            const test: ITest = store.get(\"theTest\");\n\n            setTest(test);\n            console.log(chosenLang);\n\n            setPagesContent(\n                test[store.get(\"activeLang\") as TLangOption[\"value\"]].pages\n            );\n        }\n        // createQnAPairs(activeLang.pages);\n    }, []);\n\n    useEffect(() => {\n        const pagesPrep = prepareJSXOfPages(refsToQuestions);\n        // console.log(pagesPrep);\n    }, [pagesContent]);\n\n    // console.log(qnaOverlaps.current.counter);\n\n    function isImgOrText(data: string): boolean {\n        return data.match(URLCheckForLocalHost) ? true : false;\n    }\n\n    /**\n     * Returns either an <img> or <p> containig the `data`\n     * @param data string containing eihter the text of a question/answer or a link to the image\n     */\n    function imgOrText(data: string): JSX.Element {\n        // console.log(data);\n        // console.log(data.match(URLCheckFor192.168.8.100));\n        if (data.match(URLCheckForLocalHost) !== null) {\n            return (\n                <img\n                    style={{\n                        width: \"100%\",\n                        height: \"100%\",\n                        objectFit: \"cover\",\n                        borderRadius: \"16px\",\n                        border: \"#cba992 solid 3px\",\n                    }}\n                    src={data}\n                    alt=\":(\"\n                />\n            );\n        } else {\n            return (\n                // <div>\n                <p\n                    style={{\n                        width: \"100%\",\n                        margin: \"0\",\n                        padding: \"1rem\",\n                        boxSizing: \"border-box\",\n                        textAlign: \"center\",\n                        lineHeight: \"110%\",\n                    }}\n                >\n                    {data}\n                </p>\n                // </div>\n            );\n        }\n    }\n\n    function handleDrag(event: DraggableEventHandler, data: DraggableData) {\n        // console.log(data);\n        // alert(\"Dragging\");\n        let tmp = event.target.parentElement.parentElement.id;\n        // console.log(tmp);\n        const id = tmp.slice(tmp.indexOf(\"_\") + 1, tmp.lastIndexOf(\"_\"));\n        // console.log(id);\n        refsToAnswersPositions.current[id] = {\n            position: data,\n        };\n    }\n\n    function handleStopOfADrag(\n        event: DraggableEventHandler,\n        data: DraggableData\n    ) {\n        if (\n            event.target.parentElement.parentElement.classList[0].includes(\n                \"test_TCard\"\n            )\n        ) {\n            let tmp = event.target.parentElement.parentElement.id;\n            const id = tmp.slice(tmp.indexOf(\"_\") + 1, tmp.lastIndexOf(\"_\"));\n            const {questionRect, answerRect} = getRectanglesFromEvent(event);\n\n            const intersections: Array<boolean> = refsToQuestions.current.map(\n                (q) =>\n                    CheckIfAnswerIntersectedTheQuestion(\n                        q.getBoundingClientRect(),\n                        answerRect\n                    )!\n            );\n\n            console.log(intersections);\n\n            if (CheckIfAnswerIntersectedTheQuestion(questionRect, answerRect)) {\n                // console.log(event.target.parentNode.parentNode);\n                // event.target.parentNode.parentNode.style.pointerEvents = \"none\";\n                applyCSSToMatchedCards(event, refsToQuestions.current[id]);\n                qnaOverlaps.current.counter += 1;\n\n                console.log(refsToQuestions.current[id]);\n\n                const questionContainer: HTMLElement =\n                    refsToQuestions.current[id].parentElement!;\n                // console.log(questionContainer, \"123123\");\n\n                // console.log(refsToAnswersHandles.current[id]);\n\n                refsToAnswersHandles.current[id].parentElement!.style.transform =\n                    \"translate(0px, 0px)\";\n                refsToAnswersHandles.current[id].parentElement!.style.marginTop =\n                    \"-1rem\";\n                questionContainer.appendChild(\n                    refsToAnswersHandles.current[id].parentElement!\n                );\n\n                // event.target.style.pointerEvents.parentElement = \"none\";\n\n                if (qnaOverlaps.current.counter === 3) {\n                    // alert(pagesContent.length);\n                    // if (page.count < pagesContent.length - 1) {\n                    refsToQuestions.current = [];\n                    // setCurrentPage(currentPage + 1);\n                    // setTimeout(() => {\n                    dispatch({type: \"increment\"});\n                    // }, 1000);\n                    console.log(page.count, \"pages\", pagesContent.length, \"pagesContent\");\n                    // }\n                    qnaOverlaps.current.counter = 0;\n                }\n            } else {\n                intersections.includes(true) && flashScreen();\n            }\n            // refsToAnswersPositions.current[id] = {\n            //   position: {\n            //     x: data.x,\n            //     y: data.y,\n            //     deltaX: data.x - data.lastX,\n            //     deltaY: data.y - data.lastY,\n            //   },\n            // };\n            refsToAnswersPositions.current[id] = {\n                position: data,\n            };\n        }\n    }\n\n    async function flashScreen() {\n        const testBody: HTMLElement = document.getElementsByClassName(\n            styles.pageContainer\n        )[0] as HTMLElement;\n        testBody.style.boxShadow = \"inset 0px 0px 30px 30px red\";\n        setTimeout(() => (testBody.style.boxShadow = \"none\"), 500);\n    }\n\n    function applyCSSToMatchedCards(\n        event: DraggableEventHandler,\n        answer: HTMLElement\n    ) {\n        // // Sets the contasiner of cards to be unclickable/untouchable.\n        // event.target.parentElement.parentElement.parentElement.parentElement.style.pointerEvents =\n        //   \"none\";\n        console.log(answer.parentElement);\n        answer.parentElement.style.pointerEvents = \"none\";\n        // answer.style.width = \"100rem\";\n\n        //* Applies a greenish border around answer cards.\n        console.log(event.target.tagName);\n        if (event.target.tagName == \"P\") {\n            console.log(event.target.parentElement.parentElement.style.border);\n            event.target.parentElement.parentElement.style.border =\n                \"solid 5px rgb(37, 180, 150)\";\n            event.target.parentElement.parentElement.parentElement.style.position =\n                \"inherit\";\n            console.log(event.target.parentElement.parentElement.style.border);\n        } else if (event.target.tagName == \"IMG\") {\n            console.log(event.target);\n            // event.target.style.border = \"none\";\n            event.target.style.border = \"solid 5px rgb(37, 180, 150)\";\n            event.target.style.borderColor = \"rgb(73, 180, 150,)\";\n            event.target.parentElement.parentElement.parentElement.style.position =\n                \"inherit\";\n        }\n    }\n\n    /**\n     * Checks whether the dragged element intersects its question.\n     * @param event refer to React Draggable\n     */\n    function CheckIfAnswerIntersectedTheQuestion(\n        questionRect: DOMRect,\n        answerRect: DOMRect\n    ) {\n        // const { questionRect, answerRect } = getRectangles(event);\n        // let answerRect = answerDragged.parentElement!.getBoundingClientRect();\n        setqaRectPositions({\n            q: questionRect,\n            a: answerRect,\n        });\n\n        if (\n            questionRect.x < answerRect.x + answerRect.width &&\n            questionRect.x + questionRect.width > answerRect.x\n        ) {\n            if (\n                questionRect.y < answerRect.y + answerRect.height &&\n                questionRect.y + questionRect.height > answerRect.y\n            ) {\n                // console.log(answerDragged.parentElement?.parentElement, \"oi\");\n                // answerDragged.parentElement!.style.filter = \"brightness(0.5)\";\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function getRectanglesFromEvent(event: DraggableEventHandler) {\n        setqaRectPositions({});\n        const answerDragged: Element = event.target!.parentElement.parentElement;\n        console.log(answerDragged)\n        const answerDraggedID = answerDragged.id;\n        // const relatedQuestion = document.getElementById(\n        //   `Question_${answerDraggedID.slice(answerDraggedID.indexOf(\"_\"))}`\n        // );\n        const answerDraggedIterator = answerDraggedID.slice(\n            answerDraggedID.indexOf(\"_\") + 1,\n            answerDraggedID.lastIndexOf(\"_\")\n        );\n\n        const relatedAnswerHandle =\n            refsToAnswersHandles.current[Number(answerDraggedIterator)];\n        // console.log(relatedAnswerHandle, \"handles\");\n        const relatedQuestionHandle =\n            refsToQuestions.current[Number(answerDraggedIterator)];\n        // console.log(relatedQuestionHandle, \"handles\");\n        const questionRect = relatedQuestionHandle.getBoundingClientRect();\n        const answerRect = relatedAnswerHandle.getBoundingClientRect();\n        return {questionRect, answerRect};\n    }\n\n    const TestCompletionAcknowledgement = (): {\n        ru: string;\n        lv: string;\n        en: string;\n    } => {\n        return {\n            ru: `Тест \"${\n                props.test\n                    ? props.test[props.activeLanguage].name\n                    : store.get(\"theTest\").ru.name\n            }\" пройден.`,\n            lv: `Tests \"${\n                props.test\n                    ? props.test[props.activeLanguage].name\n                    : store.get(\"theTest\").lv.name\n            }\" ir pabeigts.`,\n            en: `Test \"${\n                props.test\n                    ? props.test[props.activeLanguage].name\n                    : store.get(\"theTest\").en.name\n            }\" is compeleted.`,\n        };\n    };\n\n    const [clientEmail, setClientEmail] = useState(\"\");\n    const emailRef = useRef(\"\");\n\n    function prepareLastPageJSX(\n        body: string,\n        heading: string,\n        email: boolean\n    ): JSX.Element {\n        console.log(heading, body);\n        return (\n            <div\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"space-evenly\",\n\n                    alignItems: \"center\",\n                    flexDirection: \"row\",\n                    width: \"100%\",\n                    height: \"100%\",\n                }}\n            >\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        alignItems: \"center\",\n                        width: \"50%\",\n                    }}\n                >\n                    <h1\n                        style={{\n                            color: \"#c6aa96\",\n                            textAlign: \"center\",\n                            fontWeight: 300,\n                            fontSize: \"60px\",\n                            margin: \"0\",\n                        }}\n                    >\n                        {heading}\n                    </h1>\n                    {/* <h2\n            style={{\n              fontSize: \"47px\",\n              fontWeight: 300,\n              textAlign: \"center\",\n            }}\n          >\n            {TestCompletionAcknowledgement()[getLang()]}\n          </h2> */}\n                    <p\n                        style={{\n                            fontSize: \"36px\",\n                            fontWeight: 300,\n                            textAlign: \"center\",\n                        }}\n                    >\n                        {body}\n                    </p>\n                </div>\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        width: \"40%\",\n                        height: \"160px\",\n                        justifyContent: \"space-around\",\n                    }}\n                >\n                    {email && (\n                        // <form onSubmit={(e) => e.preventDefault()}>\n                        <input\n                            onChange={(e) => {\n                                emailRef.current = e.target.value;\n                                console.log(emailRef.current, \"ref\");\n                                // setClientEmail(e.target.value);\n                                console.log(clientEmail, \"state\");\n                                console.log(e.target.value);\n                                console.log(e.currentTarget.value);\n                            }}\n                            autoComplete=\"off\"\n                            style={{\n                                // position: \"absolute\",\n                                background: \"rgba(0, 0, 0, 0)\",\n                                color: \"#C6AA96\",\n                                border: \"#C6AA96 solid 3px\",\n                                padding: \"0\",\n                                borderRadius: \"16px\",\n                                // width: \"100%\",\n                                height: \"30%\",\n                                fontSize: \"35px\",\n                                textAlign: \"center\",\n                            }}\n                            placeholder=\"example@mail.com\"\n                            type=\"email\"\n                            name=\"userInfo\"\n                            id=\"userEmail\"\n                        />\n                    )}\n                    <button\n                        style={{\n                            width: \"100%\",\n                            height: \"45%\",\n                            backgroundColor: \"#C6AA96\",\n                            border: \"none\",\n                            borderRadius: \"16px\",\n                            padding: \"0\",\n                            // WebkitTextFillColor: \"transparent\",\n                            // WebkitBackgroundClip: \"text\",\n                        }}\n                        onClick={handleSendBtnClick}\n                    >\n                        <p\n                            style={{\n                                margin: \"0\",\n                                color: \"black\",\n                                fontFamily: \"Montserrat\",\n                                fontSize: \"40px\",\n                                fontWeight: 700,\n                                background: \"whatever\",\n                                letterSpacing: 6,\n                                // WebkitTextFillColor: \"transparent\",\n                                // WebkitBackgroundClip: \"text\",\n                            }}\n                        >\n                            {getBtnText().toLocaleUpperCase()}\n                        </p>\n                    </button>\n                </div>\n            </div>\n        );\n\n        function getBtnText(): string {\n            return getLang() === \"en\"\n                ? \"Finish\"\n                : getLang() === \"lv\"\n                    ? \"Pabeigt\"\n                    : \"Закончить\";\n        }\n\n        function getLang() {\n            return store.get(\"activeLang\") as TLangOption[\"value\"];\n        }\n    }\n\n    async function handleSendBtnClick(e) {\n        console.log(e);\n        // const response = await Axios.post(`${productionURL}email`, {\n        //   email: clientEmail,\n        // });\n\n        const options = {\n            method: \"POST\",\n            url: \"https://modesmuzejs.lv/api/quiz/tests/email\",\n            origin: productionHost,\n            headers: {\"Content-Type\": \"application/json\"},\n            data: {email: \"1231@gmail.com\"},\n        };\n\n        // await Axios.request(options)\n        //   .then(function (response) {\n        //     console.log(response.data);\n        //   })\n        //   .catch(function (error) {\n        //     console.error(error);\n        //   });\n        // console.log(response);\n        console.log(clientEmail, \"state\");\n        console.log({\n            email: clientEmail,\n        });\n        const response = await Axios.post(`${productionURL}tests/email`, {\n            email: emailRef.current,\n        });\n\n        console.log(response);\n\n        if (response.status === 200) {\n            router.push(\n                `${productionHost}/client/languages?testid=${store.get(\"theTest\").id}`\n            );\n        }\n    }\n\n    function prepareFirstPage(): JSX.Element {\n        return txtExpalantion();\n    }\n\n    const start_test_btn = () => (\n        <svg width=\"116.656\" height=\"116.66\" viewBox=\"0 0 116.656 116.66\">\n            <defs>\n                <filter\n                    id=\"Path_14\"\n                    x=\"0\"\n                    y=\"0\"\n                    width=\"116.656\"\n                    height=\"116.66\"\n                    filterUnits=\"userSpaceOnUse\"\n                >\n                    <feOffset dy=\"3\"/>\n                    <feGaussianBlur stdDeviation=\"3\" result=\"blur\"/>\n                    <feFlood flood-opacity=\"0.161\"/>\n                    <feComposite operator=\"in\" in2=\"blur\"/>\n                    <feComposite in=\"SourceGraphic\"/>\n                </filter>\n            </defs>\n            <g\n                id=\"Icon_feather-arrow-right-circle\"\n                data-name=\"Icon feather-arrow-right-circle\"\n                transform=\"translate(11.503 6.771)\"\n            >\n                <g transform=\"matrix(1, 0, 0, 1, -11.5, -6.77)\" filter=\"url(#Path_14)\">\n                    <path\n                        id=\"Path_14-2\"\n                        data-name=\"Path 14\"\n                        d=\"M95.656,49.33A46.328,46.328,0,1,1,49.328,3,46.329,46.329,0,0,1,95.656,49.33Z\"\n                        transform=\"translate(9 6)\"\n                        fill=\"none\"\n                        stroke=\"#c6aa96\"\n                        stroke-linecap=\"round\"\n                        stroke-linejoin=\"round\"\n                        stroke-width=\"6\"\n                    />\n                </g>\n                <path\n                    id=\"Path_15\"\n                    data-name=\"Path 15\"\n                    d=\"M18,47.06,35.53,29.53,18,12\"\n                    transform=\"translate(28.825 19.03)\"\n                    fill=\"none\"\n                    stroke=\"#c6aa96\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"5\"\n                />\n                <path\n                    id=\"Path_16\"\n                    data-name=\"Path 16\"\n                    d=\"M12,18H47.06\"\n                    transform=\"translate(17.295 30.559)\"\n                    fill=\"none\"\n                    stroke=\"#c6aa96\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"5\"\n                />\n            </g>\n        </svg>\n    );\n\n    function txtExpalantion(): JSX.Element {\n        const sampleTxt: {\n            ru: string;\n            en: string;\n            lv: string;\n        } = {\n            ru: \"Найдите соответствие, переставляя нижние карточки.\",\n            en: \"Find a match by moving the bottom cards.\",\n            lv: \"Atrodiet atbilstību, pārliekot apakšējas kartītes.\",\n        };\n        return (\n            <div\n                id=\"btn_txt_container\"\n                style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"space-evenly\",\n                    height: \"40%\",\n                }}\n            >\n                <h1\n                    style={{\n                        fontWeight: 400,\n                        fontSize: \"xxx-large\",\n                        textAlign: \"center\",\n                    }}\n                >\n                    {sampleTxt[store.get(\"activeLang\") as TLangOption[\"value\"]]}\n                </h1>\n                <button\n                    style={{background: \"none\", border: \"none\"}}\n                    onClick={() => dispatch({type: \"increment\"})}\n                >\n                    {start_test_btn()}\n                </button>\n            </div>\n        );\n    }\n\n    function ExplanatoryVideo(): JSX.Element {\n        return (\n            <div\n                style={{\n                    position: \"absolute\",\n                    width: \"100vw\",\n                    height: \"100vh\",\n                    background: \"black\",\n                    zIndex: 10000,\n                    top: 0,\n                    left: 0,\n                }}\n            >\n                <video\n                    onEnded={() => dispatch({type: \"increment\"})}\n                    controls\n                    autoPlay\n                    style={{\n                        width: \"100%\",\n                    }}\n                >\n                    <source src=\"/Test_Example.webm\" type=\"video/webm\"/>\n                </video>\n            </div>\n        );\n    }\n\n    /**\n     * Wraps question and answer pairs into a div (containing 3 pairs in this case)\n     */\n    function prepareJSXOfPages(refsToQuestions: any) {\n        // console.log(pagesContent);\n        let pagesPrep: JSX.Element[] = [];\n        console.log(pagesPrep);\n        props.fromPreview == undefined && pagesPrep.push(prepareFirstPage());\n        const tmpPages = pagesContent.map((page, pageIterator: number) => (\n            // <AnimatePresence>\n            <motion.div\n                initial={{\n                    opacity: 0,\n                }}\n                animate={{\n                    opacity: 1,\n                }}\n                exit={{\n                    opacity: 0,\n                }}\n                id={`page-${pageIterator}`}\n                key={pageIterator}\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"space-evenly\",\n                    width: \"90%\",\n                    height: \"88%\",\n                }}\n            >\n                {qnaPairsToJSX(page, pageIterator, refsToQuestions)}\n            </motion.div>\n            // </AnimatePresence>\n        ));\n        // console.log(tmpPages);\n        pagesPrep.push(...tmpPages);\n        // console.log(pagesPrep);\n        let tmp: ITest;\n        if (props.fromPreview) {\n            tmp = store.get(\"testInProgress\");\n        } else {\n            tmp = store.get(\"theTest\");\n        }\n        console.log(tmp);\n        const {\n            finalPageTextBody,\n            finalPageTextHeading,\n        }: { finalPageTextBody: string; finalPageTextHeading: string } =\n        tmp[store.get(\"activeLang\") as TLangOption[\"value\"]] ||\n        props.test[props.activeLanguage];\n        console.log(tmp);\n        const lastPage = prepareLastPageJSX(\n            finalPageTextBody,\n            finalPageTextHeading,\n            tmp.emailSender /* as boolean */\n        );\n\n        pagesPrep.push(lastPage);\n        setPages(pagesPrep);\n        // console.log(pages);\n        return pagesPrep;\n    }\n\n    const textCardCSSSetting: React.CSSProperties = {\n        display: \"flex\",\n        justifyContent: \"center\",\n        width: \"320px\",\n        height: \"min-content\",\n        // padding: \"1rem\",\n        border: \"3px solid rgb(198\t169\t149\t)\",\n    };\n\n    function setStyleAccordingToTestType(cardData: string): React.CSSProperties {\n        switch (test?.type) {\n            case \"PP\":\n                return {\n                    width: \"250px\",\n                    height: \"259.37px\",\n                };\n            case \"TT\":\n                return textCardCSSSetting;\n            default:\n                return isImgOrText(cardData)\n                    ? {\n                        width: \"320px\",\n                        height: \"347px\",\n                    }\n                    : textCardCSSSetting;\n        }\n    }\n\n    /**\n     * Returns an array of JSX Elements containing question and answer cards (which are shuffled randomly before rendering) in pairs\n     * @param page Array of question and answer pairs to be rendered\n     * @param pageIterator page (int) to which the array corresponds\n     */\n    function qnaPairsToJSX(\n        page: IQnAPairs,\n        pageIterator: number,\n        refsToQuestions: { current: (HTMLDivElement | null)[] }\n    ): React.ReactNode {\n        let questions = page.QnAPairs.map((qnaPair: IQnA, iterator: number) => (\n            <div\n                style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                }}\n            >\n                <div\n                    className={styles.TCard}\n                    id={`Question_${iterator}_p-${pageIterator}`}\n                    key={`Question_${iterator}_p-${pageIterator}`}\n                    style={setStyleAccordingToTestType(qnaPair.question)}\n                >\n                    <div\n                        style={{\n                            height: \"100%\",\n                            boxSizing: \"border-box\",\n                        }}\n                    >\n                        {imgOrText(qnaPair.question)}\n                    </div>\n                </div>\n                <div\n                    ref={(ele) => (refsToQuestions.current[iterator] = ele)}\n                    style={{\n                        marginTop: isImgOrText(qnaPair.question) ? \"0.2rem\" : \"-0.1rem\",\n\n                        width: \"min-content\",\n                        zIndex: 100,\n                    }}\n                >\n                    {StickCircle()}\n                </div>\n            </div>\n        ));\n\n        for (let i = 0; i < page.QnAPairs.length; i++) {\n            refsToAnswersPositions.current[i] = {\n                position: {\n                    x: 0,\n                    y: 0,\n                },\n            };\n        }\n\n        let answers = page.QnAPairs.map((qnaPair: IQnA, iterator: number) => (\n            <Draggable\n                axis=\"both\"\n                // onTouchStart={handleStartOfDrag}\n                onDrag={handleDrag}\n                // position={refsToAnswersPositions.current[iterator].position}\n                onStop={handleStopOfADrag}\n                // position={null}\n                // grid={[25, 25]}\n                defaultPosition={{x: 0, y: 0}}\n                scale={1}\n            >\n                <div\n                    style={{\n                        position: \"absolute\",\n                        bottom: \"10%\",\n                        display: \"flex\",\n                        flexDirection: \"column-reverse\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                        zIndex: 100,\n                        // border: \"3px solid rgb(198\t169\t149\t)\",\n                    }}\n                >\n                    <div\n                        className={styles.TCard}\n                        id={`Answer_${iterator}_p-${pageIterator}`}\n                        key={iterator}\n                        style={setStyleAccordingToTestType(qnaPair.answer)}\n                    >\n                        <div\n                            style={{\n                                height: \"100%\",\n                                width: \"100%\",\n                                boxSizing: \"border-box\",\n                            }}\n                        >\n                            {imgOrText(qnaPair.answer)}\n                        </div>\n                    </div>\n                    <div\n                        ref={(ele) => (refsToAnswersHandles.current[iterator] = ele)}\n                        style={{\n                            zIndex: 100,\n                            marginBottom: isImgOrText(qnaPair.answer)\n                                ? \"-0.35rem\"\n                                : \"-0.3rem\",\n                            width: \"min-content\",\n                        }}\n                    >\n                        {StickSemiCircle()}\n                    </div>\n                </div>\n            </Draggable>\n        ));\n\n        let answersShuffled = shuffle(answers);\n        let questionsShuffled = shuffle(questions);\n        // console.log(tmp);\n\n        // console.log(questions, answers);\n\n        let preparedPairsShuffled = page.QnAPairs.map((_, iterator: number) => (\n            <motion.div\n                // initial=\"hidden\"\n                // animate=\"visible\"\n                variants={variantsQnAPairs}\n                transition={{\n                    duration: \"1.5\",\n                }}\n                key={`QuestionAnswerP-${iterator}_p-${pageIterator}`}\n                className={styles.qnaContainer}\n            >\n                {/* {questionsShuffled[iterator]} */}\n\n                {questions[iterator]}\n                {answersShuffled[iterator]}\n            </motion.div>\n        ));\n\n        return preparedPairsShuffled;\n    }\n\n    const variantsQnAPairs = {\n        visible: {opacity: 1},\n        hidden: {opacity: 0},\n    };\n\n    function shuffle(array: []) {\n        let m = array.length;\n        let t;\n        let i;\n\n        // console.log(m, t, i);\n        // While there remain elements to shuffle…\n        while (m) {\n            // Pick a remaining element…\n            i = Math.floor(Math.random() * m--);\n            // console.log(i, \"i\");\n\n            // And swap it with the current element.\n            t = array[m];\n            array[m] = array[i];\n            array[i] = t;\n            // console.log(array);\n        }\n\n        return array;\n    }\n\n    const StickCircle = () => (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"19\"\n            height=\"26.956\"\n            viewBox=\"0 0 19 26.956\"\n        >\n            <g\n                id=\"Group_35\"\n                data-name=\"Group 35\"\n                transform=\"translate(-115.882 -241.137)\"\n            >\n                <line\n                    id=\"Line_1\"\n                    data-name=\"Line 1\"\n                    y2=\"11\"\n                    transform=\"translate(125.357 243.137)\"\n                    fill=\"none\"\n                    stroke=\"#c6aa96\"\n                    // strokeLinecap=\"round\"\n                    strokeWidth=\"4\"\n                />\n                <circle\n                    id=\"Ellipse_4\"\n                    data-name=\"Ellipse 4\"\n                    cx=\"9.5\"\n                    cy=\"9.5\"\n                    r=\"9.5\"\n                    transform=\"translate(115.882 249.094)\"\n                    fill=\"#c6aa96\"\n                />\n            </g>\n        </svg>\n    );\n\n    const StickSemiCircle = () => (\n        <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"19\"\n            height=\"18.761\"\n            viewBox=\"0 0 19 18.761\"\n        >\n            <g id=\"Group_34\" data-name=\"Group 34\" transform=\"translate(-115.996 0)\">\n                <line\n                    id=\"Line_4\"\n                    data-name=\"Line 4\"\n                    y2=\"110\"\n                    transform=\"translate(125.357 5.761)\"\n                    fill=\"none\"\n                    stroke=\"#c6aa96\"\n                    // strokeLinecap=\"round\"\n                    strokeWidth=\"4\"\n                />\n                <g\n                    id=\"Path_11\"\n                    data-name=\"Path 11\"\n                    transform=\"translate(115.996 -7.551)\"\n                    fill=\"none\"\n                >\n                    <path\n                        d=\"M9.5,11.26c5.247,0,9.5-7.007,9.5-1.76a9.5,9.5,0,0,1-19,0C0,4.253,4.253,11.26,9.5,11.26Z\"\n                        stroke=\"none\"\n                    />\n                    <path\n                        d=\"M 0.8809738159179688 7.550793647766113 C 2.390966415405273 7.550793647766113 5.682500839233398 11.26012802124023 9.5 11.26012802124023 C 13.31717872619629 11.26012802124023 16.60886001586914 7.551321029663086 18.11902618408203 7.550793647766113 C 18.68457794189453 7.550596237182617 19 8.070477485656738 19 9.499998092651367 C 19 14.74670791625977 14.74670028686523 18.99999809265137 9.5 18.99999809265137 C 4.253299713134766 18.99999809265137 0 14.74670791625977 0 9.499998092651367 C 0 8.070796966552734 0.3156604766845703 7.550793647766113 0.8809738159179688 7.550793647766113 Z\"\n                        stroke=\"none\"\n                        fill=\"#c6aa96\"\n                    />\n                </g>\n            </g>\n        </svg>\n    );\n\n    const ExitBtn = (size: string) => (\n        !props.fromPreview &&\n        <svg\n            // className={compStyles.CloseBTN}\n            onClick={() =>\n                !props.test &&\n                router.push(\n                    `${productionHost}/client/languages?testid=${\n                        store.get(\"theTest\")._id\n                    }`\n                    // `${devURL}client/test?testid=${\n                    //   store.get(\"theTest\")._id\n                    // }&lang=${store.get(\"activeLang\")}`\n                )\n            }\n            width={size}\n            height={size}\n            viewBox=\"0 0 56 56\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n        >\n            {console.log(props.test, 'props check')}\n            <g id=\"Group_28\" data-name=\"Group 28\" transform=\"translate(-1194 -73)\">\n                <circle\n                    id=\"Ellipse_8\"\n                    data-name=\"Ellipse 8\"\n                    cx=\"16.5\"\n                    cy=\"16.5\"\n                    r=\"16.5\"\n                    transform=\"translate(1194 73)\"\n                    fill=\"#c6aa96\"\n                />\n                <path\n                    id=\"Icon_ionic-ios-close\"\n                    data-name=\"Icon ionic-ios-close\"\n                    d=\"M23.921,21.5l7.3-7.3A1.71,1.71,0,0,0,28.8,11.786l-7.3,7.3-7.3-7.3A1.71,1.71,0,1,0,11.788,14.2l7.3,7.3-7.3,7.3a1.71,1.71,0,1,0,2.418,2.418l7.3-7.3,7.3,7.3A1.71,1.71,0,1,0,31.218,28.8Z\"\n                    transform=\"translate(1188.715 67.711)\"\n                    fill=\"#1b212e\"\n                />\n            </g>\n            {/* <circle cx=\"28\" cy=\"28\" r=\"28\" fill=\"#2F4858\" />\n      <path\n        d=\"M38.5626 36.4501L30.1126 28L38.5628 19.5498C39.1458 18.9669 39.1458 18.0203 38.5626 17.4372C37.9797 16.8543 37.0332 16.8543 36.4502 17.4372L28 25.8874L19.5498 17.4372C18.9668 16.8543 18.0203 16.8543 17.4374 17.4372C16.8542 18.0203 16.8542 18.9669 17.4372 19.5498L25.8874 28L17.4374 36.4501C16.8542 37.0332 16.8542 37.9797 17.4372 38.5627C18.0203 39.1458 18.9668 39.1458 19.55 38.5627L28 30.1126L36.45 38.5627C37.0332 39.1458 37.9797 39.1458 38.5628 38.5627C39.1458 37.9797 39.1458 37.0332 38.5626 36.4501Z\"\n        fill=\"white\" */}\n            {/* /> */}\n        </svg>\n    );\n\n    function checkWhetherIsPreview() {\n        if (props.fromPreview) {\n            const PreviewStyle: React.CSSProperties = {\n                width: \"100%\",\n                height: \"100%\",\n            };\n            return PreviewStyle;\n        }\n        return {};\n    }\n\n    return (\n        <DndProvider backend={TouchBackend}>\n            {/* <AnimatePresence> */}\n            {props.test && (\n                <>\n                    <button\n                        style={{\n                            position: \"absolute\",\n                            top: \"46%\",\n                            right: \"3%\",\n                            border: \"none\",\n                            background: \"none\",\n                        }}\n                        onClick={() => {\n                            console.log(\"123\");\n                            dispatch({type: \"increment\"});\n                        }}\n                    >\n                        {Arrow(\"60\", \"84\")}\n                    </button>\n                    <button\n                        style={{\n                            position: \"absolute\",\n                            top: \"46%\",\n                            left: \"3%\",\n                            transform: \"rotate(180deg)\",\n                            background: \"none\",\n                            border: \"none\",\n                        }}\n                        onClick={() => dispatch({type: \"decrement\"})}\n                    >\n                        {Arrow(\"60\", \"84\")}\n                    </button>\n                </>\n            )}\n\n            <AnimatePresence exitBeforeEnter>\n                <motion.div\n                    key=\"animatedPage\"\n                    initial={{opacity: 0, y: -100}}\n                    animate={{opacity: 1, y: 0}}\n                    exit={{opacity: 0, y: 500}}\n                    className={styles.pageContainer}\n                    style={checkWhetherIsPreview()}\n                >\n                    {!props.test && (\n                        <img\n                            src=\"https://www.fashionmuseumriga.lv/bitrix/templates/main_template/img/logo.png\"\n                            alt=\"Fashion Museum\"\n                            id={styles.MMlogo}\n                        />\n                    )}\n                    <motion.div key=\"testContainerAnima\" className={styles.testContainer}>\n                        {pages?.length - 1 != page.count /* 578G */ && (\n                            <button\n                                style={{\n                                    opacity: \"70%\",\n                                    position: \"absolute\",\n                                    right: \"2%\",\n                                    top: \"5%\",\n                                    backgroundColor: \"rgba(0, 0, 0, 0)\",\n                                    border: \"none\",\n                                }}\n                            >\n                                {ExitBtn(\"45\")}\n                            </button>\n                        )}\n\n                        {pages !== undefined && page.count !== pages?.length - 1 && (\n                            <TestProgressBar\n                                // activePage={!props.fromPreview ? page.count - 1 : page.count}\n                                activePage={\n                                    /* props.fromPreview == undefined ? page.count - 1 : */ page.count\n                                }\n                                numberOfPages={\n                                    props.fromPreview == undefined\n                                        ? pages.length - 1\n                                        : pages.length\n                                }\n                                // numberOfPages={\n                                //   !props.fromPreview ? pages?.length - 1 : page.count\n                                // }\n                                // numberOfPages={10}\n                            />\n                        )}\n                        <div\n                            style={{\n                                width: \"100%\",\n                                height: \"100%\",\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                justifyContent: \"center\",\n                                pointerEvents: `${props.test && \"none\"}` as \"none\",\n                            }}\n                        >\n                            {pages !== undefined && pages![page.count]}\n                        </div>\n                    </motion.div>\n                </motion.div>\n            </AnimatePresence>\n        </DndProvider>\n    );\n}\n\nexport default Test;\n"]},"metadata":{},"sourceType":"module"}