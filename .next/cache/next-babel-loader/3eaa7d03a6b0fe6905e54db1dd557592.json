{"ast":null,"code":"var _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/TestNamer.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport compStyles from \"./styles/TestNamer.module.scss\";\nimport styles from \"../pages/styles/create_test.module.scss\";\n\nconst TestNamer = currentLang => {\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  console.log(currentLang);\n\n  const handleArrowClick = () => {\n    const buttons = document.getElementsByTagName(\"button\");\n    console.log(buttons);\n  };\n\n  return __jsx(\"div\", {\n    className: styles.TestNaming,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, isOpen ? __jsx(\"div\", {\n    className: compStyles.ModalContainerBG,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: compStyles.ModalContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }, __jsx(\"button\", {\n    className: compStyles.CloseBTN,\n    onClick: () => setIsOpen(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"\\uD835\\uDDB7\"), __jsx(\"div\", {\n    className: compStyles.Modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: compStyles.LangSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  }, __jsx(\"button\", {\n    className: compStyles.LangButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"RUS\"), __jsx(\"button\", {\n    className: compStyles.LangButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, \"LAT\"), __jsx(\"button\", {\n    className: compStyles.LangButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }, \"ENG\")), __jsx(\"input\", {\n    type: \"text\",\n    placeholder: \"TestName\",\n    className: compStyles.TNameInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }), __jsx(\"button\", {\n    className: compStyles.NextLang,\n    onClick: handleArrowClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, \"\\u2192\")))) : __jsx(\"div\", {\n    className: compStyles.ModalOpener,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Test name\"), __jsx(\"button\", {\n    onClick: () => setIsOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, \"+\")));\n};\n\nexport default TestNamer;","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/TestNamer.tsx"],"names":["React","useState","compStyles","styles","TestNamer","currentLang","isOpen","setIsOpen","console","log","handleArrowClick","buttons","document","getElementsByTagName","TestNaming","ModalContainerBG","ModalContainer","CloseBTN","Modal","LangSelect","LangButton","TNameInput","NextLang","ModalOpener"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,MAAP,MAAmB,yCAAnB;;AAEA,MAAMC,SAAS,GAAIC,WAAD,IAAsB;AACtC,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBN,QAAQ,CAAU,KAAV,CAApC;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;;AACA,QAAMK,gBAAgB,GAAG,MAAM;AAC7B,UAAMC,OAAO,GAAGC,QAAQ,CAACC,oBAAT,CAA8B,QAA9B,CAAhB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AACD,GAHD;;AAIA,SACE;AAAK,IAAA,SAAS,EAAER,MAAM,CAACW,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGR,MAAM,GACL;AAAK,IAAA,SAAS,EAAEJ,UAAU,CAACa,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEb,UAAU,CAACc,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAEd,UAAU,CAACe,QADxB;AAEE,IAAA,OAAO,EAAE,MAAMV,SAAS,CAAC,KAAD,CAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAQE;AAAK,IAAA,SAAS,EAAEL,UAAU,CAACgB,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEhB,UAAU,CAACiB,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAEjB,UAAU,CAACkB,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAQ,IAAA,SAAS,EAAElB,UAAU,CAACkB,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,EAGE;AAAQ,IAAA,SAAS,EAAElB,UAAU,CAACkB,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,CADF,EAME;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,WAAW,EAAC,UAFd;AAGE,IAAA,SAAS,EAAElB,UAAU,CAACmB,UAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAWE;AACE,IAAA,SAAS,EAAEnB,UAAU,CAACoB,QADxB;AAEE,IAAA,OAAO,EAAEZ,gBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXF,CARF,CADF,CADK,GA+BL;AAAK,IAAA,SAAS,EAAER,UAAU,CAACqB,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAMhB,SAAS,CAAC,IAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CAhCJ,CADF;AAwCD,CA/CD;;AAiDA,eAAeH,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport compStyles from \"./styles/TestNamer.module.scss\";\nimport styles from \"../pages/styles/create_test.module.scss\";\n\nconst TestNamer = (currentLang: any) => {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  console.log(currentLang);\n  const handleArrowClick = () => {\n    const buttons = document.getElementsByTagName(\"button\");\n    console.log(buttons);\n  };\n  return (\n    <div className={styles.TestNaming}>\n      {isOpen ? (\n        <div className={compStyles.ModalContainerBG}>\n          <div className={compStyles.ModalContainer}>\n            <button\n              className={compStyles.CloseBTN}\n              onClick={() => setIsOpen(false)}\n            >\n              ùñ∑\n            </button>\n\n            <div className={compStyles.Modal}>\n              <div className={compStyles.LangSelect}>\n                <button className={compStyles.LangButton}>RUS</button>\n                <button className={compStyles.LangButton}>LAT</button>\n                <button className={compStyles.LangButton}>ENG</button>\n              </div>\n              <input\n                type=\"text\"\n                placeholder=\"TestName\"\n                className={compStyles.TNameInput}\n              />\n              <button\n                className={compStyles.NextLang}\n                onClick={handleArrowClick}\n              >\n                &rarr;\n              </button>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className={compStyles.ModalOpener}>\n          <span>Test name</span>\n          <button onClick={() => setIsOpen(true)}>+</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TestNamer;\n"]},"metadata":{},"sourceType":"module"}