{"ast":null,"code":"var _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/QACard.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\nimport addCompStyles from \"./styles/TestNamer.module.scss\";\nimport { closeBtn, CreateLangSwitchers } from \"./TestNamer\";\n\nconst QACard = props => {\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n\n  const textPreviewer = text => {\n    return text.slice(0, 90) + \"...\";\n  };\n\n  return __jsx(\"div\", {\n    className: \"tmpContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    id: String(props.iterator),\n    className: `${addCompStyles.ModalContainerBG} ${!isOpen ? addCompStyles.Hidden : null}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: addCompStyles.ModalContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, closeBtn(setIsOpen), __jsx(\"div\", {\n    className: addCompStyles.Modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, CreateLangSwitchers(props.setSelectedLanguage, props.inputEnabler), __jsx(\"div\", {\n    className: addCompStyles.NameForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, props.testType === \"TT\" ? props.q_a_TextEntry(props.cardType, props.iterator) : null)))), __jsx(\"span\", {\n    className: compStyles[props.cardType],\n    onClick: e => setIsOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, textPreviewer(props.qna[props.cardType])));\n};\n\nexport default QACard;","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/QACard.tsx"],"names":["React","useState","compStyles","addCompStyles","closeBtn","CreateLangSwitchers","QACard","props","isOpen","setIsOpen","textPreviewer","text","slice","String","iterator","ModalContainerBG","Hidden","ModalContainer","Modal","setSelectedLanguage","inputEnabler","NameForm","testType","q_a_TextEntry","cardType","e","qna"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,SAASC,QAAT,EAAmBC,mBAAnB,QAA8C,aAA9C;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAUT;AACJ,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBR,QAAQ,CAAC,KAAD,CAApC;;AACA,QAAMS,aAAa,GAAIC,IAAD,IAAkB;AACtC,WAAOA,IAAI,CAACC,KAAL,CAAW,CAAX,EAAc,EAAd,IAAoB,KAA3B;AACD,GAFD;;AAGA,SACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,EAAE,EAAEC,MAAM,CAACN,KAAK,CAACO,QAAP,CADZ;AAEE,IAAA,SAAS,EAAG,GAAEX,aAAa,CAACY,gBAAiB,IAC3C,CAACP,MAAD,GAAUL,aAAa,CAACa,MAAxB,GAAiC,IAClC,EAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAK,IAAA,SAAS,EAAEb,aAAa,CAACc,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,QAAQ,CAACK,SAAD,CADX,EAEE;AAAK,IAAA,SAAS,EAAEN,aAAa,CAACe,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,mBAAmB,CAACE,KAAK,CAACY,mBAAP,EAA4BZ,KAAK,CAACa,YAAlC,CADtB,EAEE;AAAK,IAAA,SAAS,EAAEjB,aAAa,CAACkB,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,KAAK,CAACe,QAAN,KAAmB,IAAnB,GACGf,KAAK,CAACgB,aAAN,CAAoBhB,KAAK,CAACiB,QAA1B,EAAoCjB,KAAK,CAACO,QAA1C,CADH,GAEG,IAHN,CAFF,CAFF,CANF,CADF,EAmBE;AACE,IAAA,SAAS,EAAEZ,UAAU,CAACK,KAAK,CAACiB,QAAP,CADvB;AAEE,IAAA,OAAO,EAAGC,CAAD,IAAOhB,SAAS,CAAC,IAAD,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIGC,aAAa,CAACH,KAAK,CAACmB,GAAN,CAAUnB,KAAK,CAACiB,QAAhB,CAAD,CAJhB,CAnBF,CADF;AA4BD,CA3CD;;AA4CA,eAAelB,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { IQnA, TLangOption } from \"../@types/test\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\nimport addCompStyles from \"./styles/TestNamer.module.scss\";\nimport { closeBtn, CreateLangSwitchers } from \"./TestNamer\";\nimport { AnyTxtRecord } from \"dns\";\nconst QACard = (props: {\n  cardType: \"answer\" | \"question\";\n  cardContents: \"img\" | \"text\";\n  // saveData: (data) => void;\n  iterator: number;\n  setSelectedLanguage: (chooseLanguage: TLangOption[\"value\"]) => void;\n  inputEnabler: () => void;\n  qna: IQnA;\n  testType: any;\n  q_a_TextEntry: (type: \"answer\" | \"question\", id: number) => JSX.Element;\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const textPreviewer = (text: string) => {\n    return text.slice(0, 90) + \"...\";\n  };\n  return (\n    <div className=\"tmpContainer\">\n      <div\n        id={String(props.iterator)}\n        className={`${addCompStyles.ModalContainerBG} ${\n          !isOpen ? addCompStyles.Hidden : null\n        }`}\n      >\n        <div className={addCompStyles.ModalContainer}>\n          {closeBtn(setIsOpen)}\n          <div className={addCompStyles.Modal}>\n            {CreateLangSwitchers(props.setSelectedLanguage, props.inputEnabler)}\n            <div className={addCompStyles.NameForm}>\n              {props.testType === \"TT\"\n                ? props.q_a_TextEntry(props.cardType, props.iterator)\n                : null}\n            </div>\n          </div>\n        </div>\n      </div>\n      <span\n        className={compStyles[props.cardType]}\n        onClick={(e) => setIsOpen(true)}\n      >\n        {textPreviewer(props.qna[props.cardType])}\n      </span>\n    </div>\n  );\n};\nexport default QACard;\n"]},"metadata":{},"sourceType":"module"}