{"ast":null,"code":"var _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/Gallery.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport TestCard from \"./TestCard\";\nimport searchIcon from \"../GAssets/search_big.png\";\nimport styles from \"./styles/Gallery.module.scss\";\n\nconst Gallery = props => {\n  const {\n    0: recievedTests,\n    1: setRecievedTests\n  } = useState(); // const getTests = async () => {\n  //   const fetchedTests: ITest[] = await props.getInactiveTests(false);\n  //   setRecievedTests(fetchedTests);\n  // };\n\n  return __jsx(\"div\", {\n    className: styles.Gallery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"Test gallery\"), __jsx(\"div\", {\n    className: styles.SearchAndFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles.SearchContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"search\",\n    name: \"testSearch\",\n    id: \"testSearch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, __jsx(\"img\", {\n    src: searchIcon,\n    alt: \"Looking glass icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }))), __jsx(\"select\", {\n    name: \"testTypeSelector\",\n    className: styles.FilterContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Type1\"), __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Type2\"), __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Type3\"), __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, \"Type4\"), __jsx(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Type5\"))), __jsx(\"div\", {\n    className: styles.tCardContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, props.testsToRender ? props.testsToRender.inActiveTests.map((test, iterator) => __jsx(TestCard, {\n    colour: \"brown\",\n    iterator: iterator,\n    _id: test._id || \"NA\",\n    active: test.active,\n    nameInRu: test.ru.name // parentComponentTestFetcher={getTests}\n    // mainTestFetcher={props.updateTheTest}\n    ,\n    updateTests: props.updateTheTests,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  })) : null));\n};\n\nexport default Gallery;","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/Gallery.tsx"],"names":["React","useState","TestCard","searchIcon","styles","Gallery","props","recievedTests","setRecievedTests","SearchAndFilter","SearchContainer","FilterContainer","tCardContainer","testsToRender","inActiveTests","map","test","iterator","_id","active","ru","name","updateTheTests"],"mappings":";;AAAA,OAAOA,KAAP,IAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;;AAIA,MAAMC,OAAO,GAAIC,KAAD,IAIV;AACJ,QAAM;AAAA,OAACC,aAAD;AAAA,OAAgBC;AAAhB,MAAoCP,QAAQ,EAAlD,CADI,CAEJ;AACA;AACA;AACA;;AAEA,SACE;AAAK,IAAA,SAAS,EAAEG,MAAM,CAACC,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAK,IAAA,SAAS,EAAED,MAAM,CAACK,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAK,IAAA,SAAS,EAAEL,MAAM,CAACM,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,IAAI,EAAC,YAA1B;AAAuC,IAAA,EAAE,EAAC,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEP,UAAV;AAAsB,IAAA,GAAG,EAAC,oBAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CAFF,EASE;AAAQ,IAAA,IAAI,EAAC,kBAAb;AAAgC,IAAA,SAAS,EAAEC,MAAM,CAACO,eAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF,EAGE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,EAIE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,EAKE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,CATF,CAFF,EAoBE;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACQ,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACO,aAAN,GACGP,KAAK,CAACO,aAAN,CAAoBC,aAApB,CAAkCC,GAAlC,CACE,CAACC,IAAD,EAAcC,QAAd,KACE,MAAC,QAAD;AACE,IAAA,MAAM,EAAC,OADT;AAEE,IAAA,QAAQ,EAAEA,QAFZ;AAGE,IAAA,GAAG,EAAED,IAAI,CAACE,GAAL,IAAY,IAHnB;AAIE,IAAA,MAAM,EAAEF,IAAI,CAACG,MAJf;AAKE,IAAA,QAAQ,EAAEH,IAAI,CAACI,EAAL,CAAQC,IALpB,CAME;AACA;AAPF;AAQE,IAAA,WAAW,EAAEf,KAAK,CAACgB,cARrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADH,GAeG,IAhBN,CApBF,CADF;AAyCD,CApDD;;AAsDA,eAAejB,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport TestCard from \"./TestCard\";\nimport searchIcon from \"../GAssets/search_big.png\";\nimport styles from \"./styles/Gallery.module.scss\";\nimport { white } from \"./constants\";\nimport { ITest } from \"../@types/test\";\n\nconst Gallery = (props: {\n  // getInactiveTests: (active: boolean) => Promise<any>;\n  testsToRender: ITest[];\n  updateTheTests: (testID: string) => void;\n}) => {\n  const [recievedTests, setRecievedTests] = useState<ITest[]>();\n  // const getTests = async () => {\n  //   const fetchedTests: ITest[] = await props.getInactiveTests(false);\n  //   setRecievedTests(fetchedTests);\n  // };\n\n  return (\n    <div className={styles.Gallery}>\n      <h1>Test gallery</h1>\n      <div className={styles.SearchAndFilter}>\n        {/* //* Search Bar */}\n        <div className={styles.SearchContainer}>\n          <input type=\"search\" name=\"testSearch\" id=\"testSearch\" />\n          <button>\n            <img src={searchIcon} alt=\"Looking glass icon\" />\n          </button>\n        </div>\n        {/* //* Test type filter */}\n        <select name=\"testTypeSelector\" className={styles.FilterContainer}>\n          <option value=\"\">Type1</option>\n          <option value=\"\">Type2</option>\n          <option value=\"\">Type3</option>\n          <option value=\"\">Type4</option>\n          <option value=\"\">Type5</option>\n        </select>\n      </div>\n      {/* //* Test Gallery */}\n      <div className={styles.tCardContainer}>\n        {props.testsToRender\n          ? props.testsToRender.inActiveTests.map(\n              (test: ITest, iterator: number) => (\n                <TestCard\n                  colour=\"brown\"\n                  iterator={iterator}\n                  _id={test._id || \"NA\"}\n                  active={test.active}\n                  nameInRu={test.ru.name}\n                  // parentComponentTestFetcher={getTests}\n                  // mainTestFetcher={props.updateTheTest}\n                  updateTests={props.updateTheTests}\n                />\n              )\n            )\n          : null}\n      </div>\n    </div>\n  );\n};\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}