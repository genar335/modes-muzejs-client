{"ast":null,"code":"var _jsxFileName = \"/Users/yberfox/Documents/personal-projects/modes-muzejs-client/pages/tms/main.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Axios from \"axios\"; //const jwt = document.cookie.slice(document.cookie.indexOf('=') + 1);\n\nimport React, { useEffect, useState } from \"react\";\nimport ActiveTests from \"../../components/ActiveTests\";\nimport { productionURL } from \"../../components/constants\";\nimport Gallery from \"../../components/Gallery\";\nimport { motion } from \"framer-motion\";\nimport styles from \"../styles/main.module.scss\";\nimport { pageAppearance } from \"./create_test\";\nimport PleaseWaitModal from \"../../components/PleaseWaitModal\";\nimport FMLogo from \"../../components/FMlogo\";\nimport checkJWT from \"../../components/jwtChecker\";\nimport { useRouter } from \"next/router\";\nimport { EmailDownloadBtn } from \"../../components/EmailDownloadBtn\";\n\nconst main = () => {\n  const router = useRouter();\n\n  const getTestsByActive = async isTestActive => {\n    try {\n      const tests = await Axios.get(`http://192.168.8.100:4000/tests/getTest?active=${isTestActive}`);\n      console.log(tests.data, \"received tests\");\n      return tests.data;\n    } catch (error) {\n      console.log(Object.keys(error), error.message);\n      return [];\n    }\n  };\n\n  const {\n    0: hasEverythingFetched,\n    1: setHasEverythingFetched\n  } = useState(false);\n  const {\n    0: tests,\n    1: setTests\n  } = useState({\n    activeTests: [],\n    inActiveTests: []\n  });\n\n  const getAllTests = async () => {\n    setHasEverythingFetched(false);\n\n    try {\n      const serverResponse = await Axios.get(`${productionURL}tests/allTests`);\n      const data = serverResponse.data;\n      setHasEverythingFetched(true);\n      let tmpactiveTests = [];\n      let tmpinActiveTests = [];\n      filterTests(tmpactiveTests, tmpinActiveTests, data);\n      setTests({\n        activeTests: tmpactiveTests,\n        inActiveTests: tmpinActiveTests\n      });\n    } catch (error) {\n      console.log(Object.keys(error), error.message);\n    }\n  };\n\n  const filterTests = (activeTests, inActiveTests, arrToFilter) => {\n    arrToFilter.forEach(test => {\n      if (test.active !== undefined) {\n        test.active ? activeTests.push(test) : inActiveTests.push(test);\n      }\n    });\n  };\n\n  const toggleTest = testID => {\n    let tmpActive = tests.activeTests;\n    let tmpInactive = tests.inActiveTests;\n    let combinedTests = [...tests.activeTests, ...tests.inActiveTests];\n    combinedTests.forEach(test => {\n      if (test._id === testID) {\n        if (combinedTests.indexOf(test) < tmpActive.length) {\n          tmpActive.splice(tmpActive.indexOf(test), 1);\n          tmpInactive.push(_objectSpread(_objectSpread({}, test), {}, {\n            active: !test.active\n          }));\n        } else {\n          tmpInactive.splice(tmpInactive.indexOf(test), 1);\n          tmpActive.push(_objectSpread(_objectSpread({}, test), {}, {\n            active: !test.active\n          }));\n        }\n      }\n    });\n    setTests({\n      activeTests: tmpActive,\n      inActiveTests: tmpInactive\n    });\n  };\n\n  useEffect(() => {\n    // Axios.defaults.headers.common[\"Authorization\"] =\n    //   \"Bearer \" + store.get(\"jwt\");\n    if (!checkJWT()) {// router.replace(`${productionHost}/tms/auth`);\n    }\n\n    getAllTests();\n  }, []);\n  return __jsx(motion.div, {\n    className: styles.MainContainer,\n    variants: pageAppearance,\n    initial: \"hidden\",\n    animate: \"visible\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: styles.FMLogo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, __jsx(FMLogo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  })), __jsx(PleaseWaitModal, {\n    isDisplayed: !hasEverythingFetched,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), __jsx(ActiveTests // getActiveTests={getTestsByActive}\n  , {\n    tests: tests,\n    activeTests: tests.activeTests,\n    updateTheTests: toggleTest,\n    fetchAllTests: getAllTests,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }), __jsx(Gallery // getInactiveTests={getTestsByActive}\n  , {\n    testsToRender: tests.inActiveTests,\n    updateTheTests: toggleTest,\n    fetchAllTests: getAllTests,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }\n  }), __jsx(EmailDownloadBtn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default main;","map":{"version":3,"sources":["/Users/yberfox/Documents/personal-projects/modes-muzejs-client/pages/tms/main.tsx"],"names":["Axios","React","useEffect","useState","ActiveTests","productionURL","Gallery","motion","styles","pageAppearance","PleaseWaitModal","FMLogo","checkJWT","useRouter","EmailDownloadBtn","main","router","getTestsByActive","isTestActive","tests","get","console","log","data","error","Object","keys","message","hasEverythingFetched","setHasEverythingFetched","setTests","activeTests","inActiveTests","getAllTests","serverResponse","tmpactiveTests","tmpinActiveTests","filterTests","arrToFilter","forEach","test","active","undefined","push","toggleTest","testID","tmpActive","tmpInactive","combinedTests","_id","indexOf","length","splice","MainContainer"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SAAQC,aAAR,QAA6B,4BAA7B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAAQC,MAAR,QAAqB,eAArB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,OAAOC,eAAP,MAA4B,kCAA5B;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,SAAoBC,SAApB,QAAoC,aAApC;AACA,SAAQC,gBAAR,QAA+B,mCAA/B;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACf,QAAMC,MAAkB,GAAGH,SAAS,EAApC;;AACA,QAAMI,gBAAgB,GAAG,MAAOC,YAAP,IAA+C;AACpE,QAAI;AACA,YAAMC,KAAK,GAAG,MAAMnB,KAAK,CAACoB,GAAN,CACf,kDAAiDF,YAAa,EAD/C,CAApB;AAGAG,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,IAAlB,EAAwB,gBAAxB;AACA,aAAOJ,KAAK,CAACI,IAAb;AACH,KAND,CAME,OAAOC,KAAP,EAAc;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYG,MAAM,CAACC,IAAP,CAAYF,KAAZ,CAAZ,EAAgCA,KAAK,CAACG,OAAtC;AACA,aAAO,EAAP;AACH;AACJ,GAXD;;AAYA,QAAM;AAAA,OAACC,oBAAD;AAAA,OAAuBC;AAAvB,MACF1B,QAAQ,CAAU,KAAV,CADZ;AAEA,QAAM;AAAA,OAACgB,KAAD;AAAA,OAAQW;AAAR,MAAoB3B,QAAQ,CAG/B;AACC4B,IAAAA,WAAW,EAAE,EADd;AAECC,IAAAA,aAAa,EAAE;AAFhB,GAH+B,CAAlC;;AAQA,QAAMC,WAAW,GAAG,YAAY;AAC5BJ,IAAAA,uBAAuB,CAAC,KAAD,CAAvB;;AAEA,QAAI;AACA,YAAMK,cAAc,GAAG,MAAMlC,KAAK,CAACoB,GAAN,CAAW,GAAEf,aAAc,gBAA3B,CAA7B;AACA,YAAMkB,IAAI,GAAGW,cAAc,CAACX,IAA5B;AAEAM,MAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACA,UAAIM,cAA4B,GAAG,EAAnC;AACA,UAAIC,gBAA8B,GAAG,EAArC;AACAC,MAAAA,WAAW,CAACF,cAAD,EAAiBC,gBAAjB,EAAmCb,IAAnC,CAAX;AACAO,MAAAA,QAAQ,CAAC;AACLC,QAAAA,WAAW,EAAEI,cADR;AAELH,QAAAA,aAAa,EAAEI;AAFV,OAAD,CAAR;AAIH,KAZD,CAYE,OAAOZ,KAAP,EAAc;AACZH,MAAAA,OAAO,CAACC,GAAR,CAAYG,MAAM,CAACC,IAAP,CAAYF,KAAZ,CAAZ,EAAgCA,KAAK,CAACG,OAAtC;AACH;AACJ,GAlBD;;AAoBA,QAAMU,WAAW,GAAG,CAChBN,WADgB,EAEhBC,aAFgB,EAGhBM,WAHgB,KAIf;AACDA,IAAAA,WAAW,CAACC,OAAZ,CAAqBC,IAAD,IAAiB;AACjC,UAAIA,IAAI,CAACC,MAAL,KAAgBC,SAApB,EAA+B;AAC3BF,QAAAA,IAAI,CAACC,MAAL,GAAcV,WAAW,CAACY,IAAZ,CAAiBH,IAAjB,CAAd,GAAuCR,aAAa,CAACW,IAAd,CAAmBH,IAAnB,CAAvC;AACH;AACJ,KAJD;AAKH,GAVD;;AAYA,QAAMI,UAAU,GAAIC,MAAD,IAAoB;AACnC,QAAIC,SAAS,GAAG3B,KAAK,CAACY,WAAtB;AACA,QAAIgB,WAAW,GAAG5B,KAAK,CAACa,aAAxB;AACA,QAAIgB,aAAa,GAAG,CAAC,GAAG7B,KAAK,CAACY,WAAV,EAAuB,GAAGZ,KAAK,CAACa,aAAhC,CAApB;AAEAgB,IAAAA,aAAa,CAACT,OAAd,CAAuBC,IAAD,IAAiB;AACnC,UAAIA,IAAI,CAACS,GAAL,KAAaJ,MAAjB,EAAyB;AACrB,YAAIG,aAAa,CAACE,OAAd,CAAsBV,IAAtB,IAA8BM,SAAS,CAACK,MAA5C,EAAoD;AAChDL,UAAAA,SAAS,CAACM,MAAV,CAAiBN,SAAS,CAACI,OAAV,CAAkBV,IAAlB,CAAjB,EAA0C,CAA1C;AACAO,UAAAA,WAAW,CAACJ,IAAZ,iCACOH,IADP;AAEIC,YAAAA,MAAM,EAAE,CAACD,IAAI,CAACC;AAFlB;AAIH,SAND,MAMO;AACHM,UAAAA,WAAW,CAACK,MAAZ,CAAmBL,WAAW,CAACG,OAAZ,CAAoBV,IAApB,CAAnB,EAA8C,CAA9C;AACAM,UAAAA,SAAS,CAACH,IAAV,iCACOH,IADP;AAEIC,YAAAA,MAAM,EAAE,CAACD,IAAI,CAACC;AAFlB;AAIH;AACJ;AACJ,KAhBD;AAkBAX,IAAAA,QAAQ,CAAC;AACLC,MAAAA,WAAW,EAAEe,SADR;AAELd,MAAAA,aAAa,EAAEe;AAFV,KAAD,CAAR;AAIH,GA3BD;;AA6BA7C,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA;AAEA,QAAI,CAACU,QAAQ,EAAb,EAAiB,CACb;AACH;;AACDqB,IAAAA,WAAW;AACd,GARQ,EAQN,EARM,CAAT;AAUA,SACI,MAAC,MAAD,CAAQ,GAAR;AACI,IAAA,SAAS,EAAEzB,MAAM,CAAC6C,aADtB;AAEI,IAAA,QAAQ,EAAE5C,cAFd;AAGI,IAAA,OAAO,EAAC,QAHZ;AAII,IAAA,OAAO,EAAC,SAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI;AAAK,IAAA,SAAS,EAAED,MAAM,CAACG,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CANJ,EASI,MAAC,eAAD;AAAiB,IAAA,WAAW,EAAE,CAACiB,oBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAUI,MAAC,WAAD,CACI;AADJ;AAEI,IAAA,KAAK,EAAET,KAFX;AAGI,IAAA,WAAW,EAAEA,KAAK,CAACY,WAHvB;AAII,IAAA,cAAc,EAAEa,UAJpB;AAKI,IAAA,aAAa,EAAEX,WALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAiBI,MAAC,OAAD,CACI;AADJ;AAEI,IAAA,aAAa,EAAEd,KAAK,CAACa,aAFzB;AAGI,IAAA,cAAc,EAAEY,UAHpB;AAII,IAAA,aAAa,EAAEX,WAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBJ,EAuBI,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBJ,CADJ;AA2BH,CA1HD;;AA4HA,eAAelB,IAAf","sourcesContent":["import Axios from \"axios\";\n//const jwt = document.cookie.slice(document.cookie.indexOf('=') + 1);\nimport React, {useEffect, useState} from \"react\";\nimport {ITest} from \"../../@types/test\";\nimport ActiveTests from \"../../components/ActiveTests\";\nimport {productionURL,} from \"../../components/constants\";\nimport Gallery from \"../../components/Gallery\";\nimport {motion} from \"framer-motion\";\nimport styles from \"../styles/main.module.scss\";\nimport {pageAppearance} from \"./create_test\";\nimport PleaseWaitModal from \"../../components/PleaseWaitModal\";\nimport FMLogo from \"../../components/FMlogo\";\nimport checkJWT from \"../../components/jwtChecker\";\nimport {NextRouter, useRouter} from \"next/router\";\nimport {EmailDownloadBtn} from \"../../components/EmailDownloadBtn\";\n\nconst main = () => {\n    const router: NextRouter = useRouter();\n    const getTestsByActive = async (isTestActive: boolean): Promise<any> => {\n        try {\n            const tests = await Axios.get(\n                `http://192.168.8.100:4000/tests/getTest?active=${isTestActive}`\n            );\n            console.log(tests.data, \"received tests\");\n            return tests.data as ITest[];\n        } catch (error) {\n            console.log(Object.keys(error), error.message);\n            return [];\n        }\n    };\n    const [hasEverythingFetched, setHasEverythingFetched] =\n        useState<boolean>(false);\n    const [tests, setTests] = useState<{\n        activeTests: ITest[];\n        inActiveTests: ITest[];\n    }>({\n        activeTests: [],\n        inActiveTests: [],\n    });\n\n    const getAllTests = async () => {\n        setHasEverythingFetched(false);\n\n        try {\n            const serverResponse = await Axios.get(`${productionURL}tests/allTests`);\n            const data = serverResponse.data;\n\n            setHasEverythingFetched(true);\n            let tmpactiveTests: Array<ITest> = [];\n            let tmpinActiveTests: Array<ITest> = [];\n            filterTests(tmpactiveTests, tmpinActiveTests, data);\n            setTests({\n                activeTests: tmpactiveTests,\n                inActiveTests: tmpinActiveTests,\n            });\n        } catch (error) {\n            console.log(Object.keys(error), error.message);\n        }\n    };\n\n    const filterTests = (\n        activeTests: ITest[],\n        inActiveTests: ITest[],\n        arrToFilter: ITest[]\n    ) => {\n        arrToFilter.forEach((test: ITest) => {\n            if (test.active !== undefined) {\n                test.active ? activeTests.push(test) : inActiveTests.push(test);\n            }\n        });\n    };\n\n    const toggleTest = (testID: string) => {\n        let tmpActive = tests.activeTests;\n        let tmpInactive = tests.inActiveTests;\n        let combinedTests = [...tests.activeTests, ...tests.inActiveTests];\n\n        combinedTests.forEach((test: ITest) => {\n            if (test._id === testID) {\n                if (combinedTests.indexOf(test) < tmpActive.length) {\n                    tmpActive.splice(tmpActive.indexOf(test), 1);\n                    tmpInactive.push({\n                        ...test,\n                        active: !test.active,\n                    });\n                } else {\n                    tmpInactive.splice(tmpInactive.indexOf(test), 1);\n                    tmpActive.push({\n                        ...test,\n                        active: !test.active,\n                    });\n                }\n            }\n        });\n\n        setTests({\n            activeTests: tmpActive,\n            inActiveTests: tmpInactive,\n        });\n    };\n\n    useEffect(() => {\n        // Axios.defaults.headers.common[\"Authorization\"] =\n        //   \"Bearer \" + store.get(\"jwt\");\n\n        if (!checkJWT()) {\n            // router.replace(`${productionHost}/tms/auth`);\n        }\n        getAllTests();\n    }, []);\n\n    return (\n        <motion.div\n            className={styles.MainContainer}\n            variants={pageAppearance}\n            initial=\"hidden\"\n            animate=\"visible\"\n        >\n            <div className={styles.FMLogo}>\n                <FMLogo/>\n            </div>\n            <PleaseWaitModal isDisplayed={!hasEverythingFetched}/>\n            <ActiveTests\n                // getActiveTests={getTestsByActive}\n                tests={tests}\n                activeTests={tests.activeTests}\n                updateTheTests={toggleTest}\n                fetchAllTests={getAllTests}\n            />\n            <Gallery\n                // getInactiveTests={getTestsByActive}\n                testsToRender={tests.inActiveTests}\n                updateTheTests={toggleTest}\n                fetchAllTests={getAllTests}\n            />\n            <EmailDownloadBtn/>\n        </motion.div>\n    );\n};\n\nexport default main;\n"]},"metadata":{},"sourceType":"module"}