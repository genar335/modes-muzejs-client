{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/yberfox/Documents/personal-projects/modes-muzejs-client/components/ActiveTests.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from \"react\"; // import Carousel from \"react-multi-carousel\";\n// import { Carousel } from \"primereact/carousel\";\n\nimport TestCard from \"./TestCard\";\nimport styles from \"./styles/ActiveTests.module.scss\";\nimport { useRouter } from \"next/router\";\nimport Collapsible from \"react-collapsible\";\n\nvar ActiveTests = function ActiveTests(props) {\n  _s();\n\n  var responsive = {\n    superLargeDesktop: {\n      // the naming can be any, depends on you.\n      breakpoint: {\n        max: 4000,\n        min: 3000\n      },\n      items: 5\n    },\n    desktop: {\n      breakpoint: {\n        max: 3000,\n        min: 1024\n      },\n      items: 4\n    },\n    tablet: {\n      breakpoint: {\n        max: 1024,\n        min: 464\n      },\n      items: 2\n    },\n    mobile: {\n      breakpoint: {\n        max: 464,\n        min: 0\n      },\n      items: 1\n    }\n  };\n  var router = useRouter();\n\n  var handleAddTestClick = function handleAddTestClick() {\n    // alert(\"Test addition should be happening right about now.\");\n    router.push(\"/tms/create_test\");\n  }; // const CustomRightArrow = ({ onClick, ...rest }) => {\n  //   const {\n  //     onMove,\n  //     carouselState: { currentSlide, deviceType },\n  //   } = rest;\n  //   // onMove means if dragging or swiping in progress.\n  //   return (\n  //     <button className={styles.carRightArrow} onClick={() => onClick()}>\n  //       {Arrow()}\n  //     </button>\n  //   );\n  // };\n  // const CustomLeftArrow = ({ onClick, ...rest }) => {\n  //   const {\n  //     onMove,\n  //     carouselState: { currentSlide, deviceType },\n  //   } = rest;\n  //   return (\n  //     <button onClick={() => onClick()} className={styles.carLeftArrow}>\n  //       {Arrow()}\n  //     </button>\n  //   );\n  // };\n\n\n  var Arrow = function Arrow() {\n    return __jsx(\"svg\", {\n      width: \"56\",\n      height: \"56\",\n      viewBox: \"0 0 56 56\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }\n    }, __jsx(\"circle\", {\n      cx: \"28\",\n      cy: \"28\",\n      r: \"28\",\n      fill: \"#2F4858\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }\n    }), __jsx(\"path\", {\n      d: \"M22 41L35 28L22 15\",\n      stroke: \"white\",\n      strokeWidth: \"3\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  var _useState = useState([]),\n      TestCardArray = _useState[0],\n      setTestCardArray = _useState[1];\n\n  var slideCss = {\n    width: \"min-content\",\n    height: \"min-content\",\n    position: \"relative\"\n  };\n  useEffect(function () {\n    setTestCardArray(PrepareTestCardsJSX(props, slideCss));\n  }, [props.tests]); // function isTriggerDisabled(ref) {\n  //   console.log(ref.props.triggerDisabled);\n  // }\n\n  var collapsibleRef = useRef(null);\n  return __jsx(\"div\", {\n    className: styles.ActiveTestsContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: styles.ActiveTestsHeader,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, \"\\u0410\\u043A\\u0442\\u0438\\u0432\\u043D\\u044B\\u0435 \\u0442\\u0435\\u0441\\u0442\\u044B\"), __jsx(\"div\", {\n    className: styles.CarouselContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(4, 1fr)\",\n      // gridTemplateRows: 'auto',\n      placeItems: \"center\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: slideCss,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, addATest(handleAddTestClick)), TestCardArray.slice(0, 3)), __jsx(Collapsible, {\n    ref: collapsibleRef,\n    contentInnerClassName: styles.CollapsibleContentInner,\n    contentOuterClassName: styles.CollapsibleContentOuter,\n    triggerClassName: styles.CollapsibleTrigger,\n    triggerOpenedClassName: styles.CollapsibleTriggerOpen,\n    className: styles.Collapsible,\n    openedClassName: styles.Collapsible,\n    triggerDisabled: TestCardArray.length <= 3,\n    trigger: __jsx(\"div\", {\n      style: {\n        transform: \"rotate(90deg)\" //   filter: collapsibleRef.current?.props?.triggerDisabled\n        //     ? \"brightness(0.5)\"\n        //     : \"brightness(1)\",\n\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, Arrow()),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, TestCardArray.slice(3))));\n};\n\n_s(ActiveTests, \"X8qgZ2MepvhhdMiBWdMDAb6I150=\", false, function () {\n  return [useRouter];\n});\n\n_c = ActiveTests;\nexport default ActiveTests;\n\nfunction PrepareTestCardsJSX(props, slideCss) {\n  var _this2 = this;\n\n  return props.activeTests.map(function (test, iterator) {\n    return __jsx(\"div\", {\n      id: \"carouselSlide_\".concat(iterator),\n      style: slideCss,\n      key: \"slide_\".concat(iterator),\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 5\n      }\n    }, __jsx(TestCard, {\n      key: iterator,\n      iterator: iterator,\n      colour: \"white\",\n      _id: test._id || \"NA\",\n      active: true,\n      nameInRu: test.ru.name,\n      fullTest: test,\n      updateTests: props.updateTheTests,\n      fetchAllTests: props.fetchAllTests,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 7\n      }\n    }));\n  });\n}\n\n_c2 = PrepareTestCardsJSX;\n\nfunction addATest(handleAddTestClick) {\n  return __jsx(\"div\", {\n    onClick: handleAddTestClick,\n    id: \"AddTest\",\n    className: styles.AddTestCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 5\n    }\n  }, PlusSign());\n}\n/**\n * Returns an SVG plus sign\n * @param widthHeight Width and height of the plus icon in pixels.\n */\n\n\nexport var PlusSign = function PlusSign() {\n  var widthHeight = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 150;\n  var colour = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"white\";\n  return __jsx(\"svg\", {\n    width: widthHeight,\n    height: widthHeight,\n    viewBox: \"0 0 75 75\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 3\n    }\n  }, __jsx(\"path\", {\n    d: \"M71.2495 33.7499H41.2501V3.74976C41.2501 1.68022 39.5699 0 37.4997 0C35.4301 0 33.7499 1.68022 33.7499 3.74976V33.7499H3.74976C1.68022 33.7499 0 35.4301 0 37.4997C0 39.5699 1.68022 41.2501 3.74976 41.2501H33.7499V71.2495C33.7499 73.3198 35.4301 75 37.4997 75C39.5699 75 41.2501 73.3198 41.2501 71.2495V41.2501H71.2495C73.3198 41.2501 75 39.5699 75 37.4997C75 35.4301 73.3198 33.7499 71.2495 33.7499Z\",\n    fill: colour,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 5\n    }\n  }));\n};\n_c3 = PlusSign;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"ActiveTests\");\n$RefreshReg$(_c2, \"PrepareTestCardsJSX\");\n$RefreshReg$(_c3, \"PlusSign\");","map":{"version":3,"sources":["/Users/yberfox/Documents/personal-projects/modes-muzejs-client/components/ActiveTests.tsx"],"names":["React","useEffect","useRef","useState","TestCard","styles","useRouter","Collapsible","ActiveTests","props","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","router","handleAddTestClick","push","Arrow","TestCardArray","setTestCardArray","slideCss","width","height","position","PrepareTestCardsJSX","tests","collapsibleRef","ActiveTestsContainer","ActiveTestsHeader","CarouselContainer","display","gridTemplateColumns","placeItems","addATest","slice","CollapsibleContentInner","CollapsibleContentOuter","CollapsibleTrigger","CollapsibleTriggerOpen","length","transform","activeTests","map","test","iterator","_id","ru","name","updateTheTests","fetchAllTests","AddTestCard","PlusSign","widthHeight","colour"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from \"react\";\n// import Carousel from \"react-multi-carousel\";\n// import { Carousel } from \"primereact/carousel\";\nimport TestCard from \"./TestCard\";\nimport styles from \"./styles/ActiveTests.module.scss\";\nimport { brown, white } from \"./constants\";\nimport { NextRouter, useRouter } from \"next/router\";\nimport { ITest } from \"../@types/test\";\nimport Axios from \"axios\";\nimport Test from \"../pages/client/test\";\nimport { useEmblaCarousel } from \"embla-carousel/react\";\nimport Carousel from \"react-multi-carousel\";\nimport Collapsible from \"react-collapsible\";\n\nconst ActiveTests = (props: {\n  // getActiveTests: (active: boolean) => Promise<any>;\n  activeTests: ITest[];\n  updateTheTests: (testID: string) => void;\n  fetchAllTests: () => Promise<void>;\n  tests: { activeTests: ITest[]; inActiveTests: ITest[] };\n}) => {\n  const responsive = {\n    superLargeDesktop: {\n      // the naming can be any, depends on you.\n      breakpoint: { max: 4000, min: 3000 },\n      items: 5,\n    },\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 4,\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 2,\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 1,\n    },\n  };\n\n  const router: NextRouter = useRouter();\n\n  const handleAddTestClick = () => {\n    // alert(\"Test addition should be happening right about now.\");\n    router.push(`/tms/create_test`);\n  };\n\n  // const CustomRightArrow = ({ onClick, ...rest }) => {\n  //   const {\n  //     onMove,\n  //     carouselState: { currentSlide, deviceType },\n  //   } = rest;\n  //   // onMove means if dragging or swiping in progress.\n  //   return (\n  //     <button className={styles.carRightArrow} onClick={() => onClick()}>\n  //       {Arrow()}\n  //     </button>\n  //   );\n  // };\n\n  // const CustomLeftArrow = ({ onClick, ...rest }) => {\n  //   const {\n  //     onMove,\n  //     carouselState: { currentSlide, deviceType },\n  //   } = rest;\n  //   return (\n  //     <button onClick={() => onClick()} className={styles.carLeftArrow}>\n  //       {Arrow()}\n  //     </button>\n  //   );\n  // };\n\n  const Arrow = () => (\n    <svg\n      width=\"56\"\n      height=\"56\"\n      viewBox=\"0 0 56 56\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <circle cx=\"28\" cy=\"28\" r=\"28\" fill=\"#2F4858\" />\n      <path\n        d=\"M22 41L35 28L22 15\"\n        stroke=\"white\"\n        strokeWidth=\"3\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </svg>\n  );\n\n  const [TestCardArray, setTestCardArray] = useState<Array<React.ReactNode>>(\n    []\n  );\n\n  const slideCss: React.CSSProperties = {\n    width: \"min-content\",\n    height: \"min-content\",\n    position: \"relative\",\n  };\n\n  useEffect(() => {\n    setTestCardArray(PrepareTestCardsJSX(props, slideCss));\n  }, [props.tests]);\n\n  // function isTriggerDisabled(ref) {\n  //   console.log(ref.props.triggerDisabled);\n  // }\n\n  const collapsibleRef = useRef(null);\n\n  return (\n    <div className={styles.ActiveTestsContainer}>\n      <h1 className={styles.ActiveTestsHeader}>Активные тесты</h1>\n\n      <div className={styles.CarouselContainer}>\n        <div\n          style={{\n            width: \"100%\",\n            display: \"grid\",\n            gridTemplateColumns: \"repeat(4, 1fr)\",\n            // gridTemplateRows: 'auto',\n            placeItems: \"center\",\n          }}\n        >\n          <div style={slideCss}>{addATest(handleAddTestClick)}</div>\n          {/* <Carousel\n          responsive={responsive}\n          ssr\n          containerClass={styles.Carousel}\n          itemClass={styles.Item}\n          customRightArrow={<CustomRightArrow />}\n          customLeftArrow={<CustomLeftArrow />}\n          showDots\n          // dotListClass={styles.customDotListStyle}\n        > */}\n          {TestCardArray.slice(0, 3)}\n        </div>\n        {/* <div> */}\n        <Collapsible\n          ref={collapsibleRef}\n          contentInnerClassName={styles.CollapsibleContentInner}\n          contentOuterClassName={styles.CollapsibleContentOuter}\n          triggerClassName={styles.CollapsibleTrigger}\n          triggerOpenedClassName={styles.CollapsibleTriggerOpen}\n          className={styles.Collapsible}\n          openedClassName={styles.Collapsible}\n          triggerDisabled={TestCardArray.length <= 3}\n          trigger={\n            <div\n              style={{\n                transform: \"rotate(90deg)\",\n                //   filter: collapsibleRef.current?.props?.triggerDisabled\n                //     ? \"brightness(0.5)\"\n                //     : \"brightness(1)\",\n              }}\n            >\n              {Arrow()}\n            </div>\n          }\n        >\n          {/* {PrepareTestCardsJSX(props, slideCss)} */}\n          {TestCardArray.slice(3)}\n        </Collapsible>\n        {/* </div> */}\n        {/* </Carousel> */}\n      </div>\n    </div>\n  );\n};\n\nexport default ActiveTests;\nfunction PrepareTestCardsJSX(\n  props: {\n    activeTests: ITest[];\n    updateTheTests: (testID: string) => void;\n    fetchAllTests: () => Promise<void>;\n  },\n  slideCss: React.CSSProperties\n): React.ReactNode[] {\n  return props.activeTests.map((test: ITest, iterator: number) => (\n    <div\n      id={`carouselSlide_${iterator}`}\n      style={slideCss}\n      key={`slide_${iterator}`}\n    >\n      <TestCard\n        key={iterator}\n        iterator={iterator}\n        colour=\"white\"\n        _id={test._id || \"NA\"}\n        active={true}\n        nameInRu={test.ru.name}\n        fullTest={test}\n        updateTests={props.updateTheTests}\n        fetchAllTests={props.fetchAllTests}\n      />\n    </div>\n  ));\n}\n\nfunction addATest(handleAddTestClick: () => void) {\n  return (\n    <div\n      onClick={handleAddTestClick}\n      id=\"AddTest\"\n      className={styles.AddTestCard}\n    >\n      {PlusSign()}\n    </div>\n  );\n}\n\n/**\n * Returns an SVG plus sign\n * @param widthHeight Width and height of the plus icon in pixels.\n */\nexport const PlusSign = (\n  widthHeight: number = 150,\n  colour: string = \"white\"\n): JSX.Element => (\n  <svg\n    width={widthHeight}\n    height={widthHeight}\n    viewBox=\"0 0 75 75\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M71.2495 33.7499H41.2501V3.74976C41.2501 1.68022 39.5699 0 37.4997 0C35.4301 0 33.7499 1.68022 33.7499 3.74976V33.7499H3.74976C1.68022 33.7499 0 35.4301 0 37.4997C0 39.5699 1.68022 41.2501 3.74976 41.2501H33.7499V71.2495C33.7499 73.3198 35.4301 75 37.4997 75C39.5699 75 41.2501 73.3198 41.2501 71.2495V41.2501H71.2495C73.3198 41.2501 75 39.5699 75 37.4997C75 35.4301 73.3198 33.7499 71.2495 33.7499Z\"\n      fill={colour}\n    />\n  </svg>\n);\n"]},"metadata":{},"sourceType":"module"}