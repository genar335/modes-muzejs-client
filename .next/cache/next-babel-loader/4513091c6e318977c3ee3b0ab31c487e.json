{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\n\nvar TestProgressBar = function TestProgressBar(props) {\n  var indicatorStyle = {\n    width: \"0.6rem\",\n    height: \"0.6rem\",\n    margin: \"0 0.4rem\",\n    backgroundColor: \"#c6aa96\",\n    borderRadius: \"50%\",\n    borderStyle: \"solid\",\n    borderColor: \"#c6aa96\",\n    borderWidth: \"2px\"\n  };\n  var indicatorActiveStyle = {\n    width: \"0.6rem\",\n    height: \"0.6rem\",\n    margin: \"0 0.4rem\",\n    backgroundColor: \"rgba(0, 0, 0, 0)\",\n    borderRadius: \"50%\",\n    borderStyle: \"solid\",\n    borderColor: \"#c6aa96\",\n    borderWidth: \"2px\"\n  };\n  /**\n   * Creates an array of indicators (circle shaped) with `current` one being filled in.\n   * @param amount Number of desired indicators\n   * @param current Index of the active indicator\n   */\n\n  var createIndicators = function createIndicators() {\n    var amount = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : props.numberOfPages;\n    var current = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : props.activePage;\n    var indicators = [];\n\n    for (var indicator = 0; indicator < amount; indicator++) {\n      if (indicator !== current) {\n        indicators.push(__jsx(\"div\", {\n          key: indicator,\n          style: indicatorActiveStyle\n        }));\n      } else {\n        indicators.push(__jsx(\"div\", {\n          key: indicator,\n          style: indicatorStyle\n        }));\n      }\n    }\n\n    return indicators;\n  };\n\n  return __jsx(\"div\", {\n    id: \"ProgressBarContainer\",\n    style: {\n      width: \"min-content\",\n      display: \"flex\",\n      justifyContent: \"space-evenly\"\n    }\n  }, createIndicators());\n};\n\nexport default TestProgressBar;","map":null,"metadata":{},"sourceType":"module"}