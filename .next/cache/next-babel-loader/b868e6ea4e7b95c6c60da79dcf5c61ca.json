{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/pages/TMS/create_test.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport PhotoManager from \"../../components/PhotoManager\";\nimport TestPreview from \"../../components/TestPreview\";\nimport styles from \"../styles/create_test.module.scss\";\n\nvar create_test = function create_test() {\n  _s();\n\n  var _useState = useState({\n    type: \"TT\",\n    pages: 1,\n    en: {\n      name: \"\",\n      pages: []\n    },\n    lv: {\n      name: \"\",\n      pages: []\n    },\n    ru: {\n      name: \"\",\n      pages: []\n    }\n  }),\n      test = _useState[0],\n      setTest = _useState[1];\n\n  var handleClick = function handleClick() {\n    setTest({\n      ru: {\n        name: \"imya\",\n        pages: test.ru.pages\n      },\n      lv: test.lv,\n      en: test.en,\n      pages: test.pages,\n      type: \"TT\"\n    });\n  };\n\n  var languageOptions = [{\n    value: \"ru\",\n    label: \"RU\"\n  }, {\n    value: \"en\",\n    label: \"EN\"\n  }, {\n    value: \"lv\",\n    label: \"LV\"\n  }];\n  var typeOptions = [{\n    value: \"TT\",\n    label: \"Text – Text\"\n  }, {\n    value: \"TP\",\n    label: \"Text – Photo\"\n  }, {\n    value: \"PP\",\n    label: \"Photo – Photo\"\n  }];\n  return __jsx(\"div\", {\n    className: styles.CreateTestContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.TestType,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(Select, {\n    options: typeOptions,\n    className: styles.TestTypeSelect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: styles.PageController,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    onClick: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Add page\"), __jsx(\"input\", {\n    type: \"number\",\n    name: \"pageCount\",\n    id: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })), __jsx(PhotoManager, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: styles.TestNaming,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"TestName\",\n    placeholder: \"Test name\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), __jsx(Select, {\n    onChange: function onChange(e) {\n      return console.log(e.value);\n    },\n    options: languageOptions,\n    className: styles.lgSelect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })), __jsx(TestPreview, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(create_test, \"ZIe2Sl5G4tFWpZzNz0M/5UeAXE4=\");\n\nexport default create_test;","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/pages/TMS/create_test.tsx"],"names":["React","useState","Select","PhotoManager","TestPreview","styles","create_test","type","pages","en","name","lv","ru","test","setTest","handleClick","languageOptions","value","label","typeOptions","CreateTestContainer","TestType","TestTypeSelect","PageController","TestNaming","e","console","log","lgSelect"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Select from \"react-select\";\nimport PhotoManager from \"../../components/PhotoManager\";\nimport TestPreview from \"../../components/TestPreview\";\nimport styles from \"../styles/create_test.module.scss\";\n\nconst create_test = () => {\n  const [test, setTest] = useState<ITest>({\n    type: \"TT\",\n    pages: 1,\n    en: {\n      name: \"\",\n      pages: [],\n    },\n    lv: {\n      name: \"\",\n      pages: [],\n    },\n    ru: {\n      name: \"\",\n      pages: [],\n    },\n  });\n\n  const handleClick = () => {\n    setTest({\n      ru: {\n        name: \"imya\",\n        pages: test.ru.pages,\n      },\n      lv: test.lv,\n      en: test.en,\n      pages: test.pages,\n      type: \"TT\",\n    });\n  };\n\n  const languageOptions = [\n    { value: \"ru\", label: \"RU\" },\n    { value: \"en\", label: \"EN\" },\n    { value: \"lv\", label: \"LV\" },\n  ];\n  const typeOptions = [\n    { value: \"TT\", label: \"Text – Text\" },\n    { value: \"TP\", label: \"Text – Photo\" },\n    { value: \"PP\", label: \"Photo – Photo\" },\n  ];\n\n  return (\n    <div className={styles.CreateTestContainer}>\n      <div className={styles.TestType}>\n        <Select options={typeOptions} className={styles.TestTypeSelect} />\n      </div>\n      <div className={styles.PageController}>\n        <button onClick={handleClick}>Add page</button>\n        <input type=\"number\" name=\"pageCount\" id=\"\" />\n      </div>\n      <PhotoManager />\n      <div className={styles.TestNaming}>\n        <input type=\"text\" name=\"TestName\" placeholder=\"Test name\" />\n        <Select\n          onChange={(e: any) => console.log(e.value)}\n          options={languageOptions}\n          className={styles.lgSelect}\n        />\n      </div>\n      <TestPreview />\n    </div>\n  );\n};\n\nexport default create_test;\n"]},"metadata":{},"sourceType":"module"}