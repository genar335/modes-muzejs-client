{"ast":null,"code":"var _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/LangBtnController.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport LanguageBtn from \"./LanguageBtn\";\nimport compStyle from \"./styles/LangBtnController.module.scss\";\n\nconst LangBtnController = props => {\n  const {\n    0: activeBtnPosition,\n    1: setActiveBtnPosition\n  } = useState();\n\n  const activeBtnPositionSetter = id => {\n    const tmp = flatBtns;\n    setFlatBtns(flatBtns.map((btn, index) => index === id ? btn = true : btn = false));\n    console.log(flatBtns);\n    setActiveBtnPosition(flatBtns.indexOf(true));\n    console.log(id);\n    forceUpdate();\n  };\n\n  const {\n    0: flatBtns,\n    1: setFlatBtns\n  } = useState([]);\n  const forceUpdate = React.useReducer(() => ({}), {})[1];\n\n  if (flatBtns.length !== props.BtnArray.length) {\n    const tmp = props.BtnArray.map(btn => {\n      if (btn === props.active) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n    setActiveBtnPosition(tmp.indexOf(true));\n    setFlatBtns(tmp);\n  }\n\n  function activeBtnSwitcher() {\n    console.log(flatBtns, \"in the beginnig of active button switcher\");\n    flatBtns.pop();\n\n    if (flatBtns.indexOf(true) == flatBtns.length || flatBtns.indexOf(true) === -1) {\n      flatBtns.unshift(true);\n    } else {\n      flatBtns.unshift(false);\n    }\n\n    console.log(flatBtns, \"after manipulation\"); // Btns.forEach((btn, index) => (btn[1] = flatBtns[index]));\n\n    activeBtnPositionSetter(flatBtns.indexOf(true)); // forceUpdate();\n  } // * Grabbing arrow in the modal which selects next element.\n  // * Assings a click listener to the grabbed element.\n\n\n  let arrowBtn;\n  useEffect(() => {\n    var _arrowBtn;\n\n    arrowBtn = document.getElementById(\"arrowButton\");\n    (_arrowBtn = arrowBtn) === null || _arrowBtn === void 0 ? void 0 : _arrowBtn.addEventListener(\"click\", handleArrowClick);\n    return () => {\n      var _arrowBtn2;\n\n      return (_arrowBtn2 = arrowBtn) === null || _arrowBtn2 === void 0 ? void 0 : _arrowBtn2.removeEventListener(\"click\", handleArrowClick);\n    };\n  }, []);\n\n  const handleArrowClick = () => {\n    activeBtnSwitcher();\n  }; // * Cleans other buttons from the pressed class.\n  //   useEffect(() => {\n  //     Btns.forEach((button) => {\n  //       console.log(button[0].props.btnID);\n  //       if (button[0].props.btnID !== activeBtn) {\n  //         button[1] = false;\n  //       }\n  //     });\n  //   }, []);\n\n\n  console.log(props.BtnArray[0].tu);\n  return __jsx(\"div\", {\n    className: compStyle.LangSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, props.BtnArray.map((button, key) => __jsx(LanguageBtn, {\n    btnID: button,\n    btnText: button.toUpperCase(),\n    key: key,\n    langSelect: props.langSelector,\n    inputEnabler: props.inputEnabler,\n    setActiveBtn: activeBtnPositionSetter,\n    pressed: flatBtns[key],\n    accessKey: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default LangBtnController;","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/LangBtnController.tsx"],"names":["React","useEffect","useState","LanguageBtn","compStyle","LangBtnController","props","activeBtnPosition","setActiveBtnPosition","activeBtnPositionSetter","id","tmp","flatBtns","setFlatBtns","map","btn","index","console","log","indexOf","forceUpdate","useReducer","length","BtnArray","active","activeBtnSwitcher","pop","unshift","arrowBtn","document","getElementById","addEventListener","handleArrowClick","removeEventListener","tu","LangSelect","button","key","toUpperCase","langSelector","inputEnabler"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport LanguageBtn from \"./LanguageBtn\";\nimport compStyle from \"./styles/LangBtnController.module.scss\";\n\nconst LangBtnController = (props) => {\n  type TBtnArrayWithPressedState = {\n    btns: [JSX.Element, boolean];\n  };\n\n  const [activeBtnPosition, setActiveBtnPosition] = useState<Number>();\n  const activeBtnPositionSetter = (id) => {\n    const tmp = flatBtns;\n    setFlatBtns(\n      flatBtns.map((btn, index) =>\n        index === id ? (btn = true) : (btn = false)\n      )\n    );\n    console.log(flatBtns);\n    setActiveBtnPosition(flatBtns.indexOf(true));\n    console.log(id);\n    forceUpdate();\n  };\n\n  const [flatBtns, setFlatBtns] = useState<Array<boolean>>([]);\n  const forceUpdate = React.useReducer(() => ({}), {})[1] as () => void;\n\n  if (flatBtns.length !== props.BtnArray.length) {\n    const tmp: boolean[] = props.BtnArray.map((btn) => {\n      if (btn === props.active) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n    setActiveBtnPosition(tmp.indexOf(true));\n    setFlatBtns(tmp);\n  }\n\n  function activeBtnSwitcher() {\n    console.log(flatBtns, \"in the beginnig of active button switcher\");\n    flatBtns.pop();\n    if (\n      flatBtns.indexOf(true) == flatBtns.length ||\n      flatBtns.indexOf(true) === -1\n    ) {\n      flatBtns.unshift(true);\n    } else {\n      flatBtns.unshift(false);\n    }\n    console.log(flatBtns, \"after manipulation\");\n    // Btns.forEach((btn, index) => (btn[1] = flatBtns[index]));\n    activeBtnPositionSetter(flatBtns.indexOf(true));\n    // forceUpdate();\n  }\n\n  // * Grabbing arrow in the modal which selects next element.\n  // * Assings a click listener to the grabbed element.\n  let arrowBtn: HTMLElement | null;\n  useEffect(() => {\n    arrowBtn = document.getElementById(\"arrowButton\");\n    arrowBtn?.addEventListener(\"click\", handleArrowClick);\n    return () => arrowBtn?.removeEventListener(\"click\", handleArrowClick);\n  }, []);\n\n  const handleArrowClick = (): void => {\n    activeBtnSwitcher();\n  };\n\n  // * Cleans other buttons from the pressed class.\n  //   useEffect(() => {\n  //     Btns.forEach((button) => {\n  //       console.log(button[0].props.btnID);\n  //       if (button[0].props.btnID !== activeBtn) {\n  //         button[1] = false;\n  //       }\n  //     });\n  //   }, []);\n\n  console.log(props.BtnArray[0].tu);\n  return (\n    <div className={compStyle.LangSelect}>\n      {props.BtnArray.map((button, key) => (\n        <LanguageBtn\n          btnID={button}\n          btnText={button.toUpperCase()}\n          key={key}\n          langSelect={props.langSelector}\n          inputEnabler={props.inputEnabler}\n          setActiveBtn={activeBtnPositionSetter}\n          pressed={flatBtns[key]}\n          accessKey={key}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default LangBtnController;\n"]},"metadata":{},"sourceType":"module"}