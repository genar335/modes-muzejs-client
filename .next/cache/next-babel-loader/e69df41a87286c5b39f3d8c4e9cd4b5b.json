{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/pages/TMS/create_test.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Select from \"react-select\";\nimport PagesController from \"../../components/PagesController\";\nimport PhotoManager from \"../../components/PhotoManager\";\nimport TestNamer from \"../../components/TestNamer\";\nimport TestPreview from \"../../components/TestPreview\";\nimport styles from \"../styles/create_test.module.scss\";\n\nfunction create_test() {\n  _s();\n\n  // const [currentPages, setCurrentPages] = useState<number>(1);\n  var tmpPages = 0;\n\n  var _useState = useState(),\n      pagesRendered = _useState[0],\n      setPagesRendered = _useState[1];\n\n  var _useState2 = useState({\n    pages: 3,\n    en: {\n      name: \"\",\n      pages: []\n    },\n    lv: {\n      name: \"\",\n      pages: []\n    },\n    ru: {\n      name: \"\",\n      pages: []\n    },\n    type: \"\"\n  }),\n      test = _useState2[0],\n      setTest = _useState2[1];\n\n  var saveTest = function saveTest(test) {\n    return setTest(test);\n  };\n\n  var _useState3 = useState(),\n      currentLang = _useState3[0],\n      setCurrentLang = _useState3[1];\n\n  var handleClick = function handleClick() {\n    setTest({\n      ru: {\n        name: \"imya\",\n        pages: test.ru.pages\n      },\n      lv: test.lv,\n      en: test.en,\n      pages: test.pages,\n      type: \"TP\"\n    });\n  };\n\n  var typeOptions = [{\n    value: \"TT\",\n    label: \"Text – Text\"\n  }, {\n    value: \"TP\",\n    label: \"Text – Photo\"\n  }, {\n    value: \"PP\",\n    label: \"Photo – Photo\"\n  }];\n\n  var _useState4 = useState(),\n      testType = _useState4[0],\n      setTestType = _useState4[1];\n\n  var handleTypeChange = function handleTypeChange(chosenType) {\n    return setTestType(chosenType);\n  }; // const [editEnabled, setEditEnabled] = useState<boolean>(false);\n  // useEffect(() => {\n  //   if ((currentLang && testType) != undefined) {\n  //     console.log(\"in an if\");\n  //     setEditEnabled(true);\n  //   } else {\n  //     setEditEnabled(false);\n  //   }\n  //   console.log(\"outside of if\");\n  //   console.log(currentLang, testType);\n  // }, [currentLang, testType]);\n\n\n  var handleNumberInputChange = function handleNumberInputChange(event) {\n    console.log(event.currentTarget.value);\n\n    if (Number(event.currentTarget.value) >= 2 && event.currentTarget.value != undefined && Number(event.currentTarget.value) < 50) {\n      setTest(_objectSpread(_objectSpread({}, test), {}, {\n        pages: Number(event.currentTarget.value)\n      }));\n    }\n\n    if (Number(event.currentTarget.value) === 1) {\n      event.currentTarget.value = String(2);\n    }\n  };\n\n  var removePage = function removePage(event) {\n    if (test.pages !== 1) {\n      setTest(_objectSpread(_objectSpread({}, test), {}, {\n        pages: test.pages - 1\n      }));\n    }\n  };\n\n  var addPage = function addPage(event) {\n    if (test.pages < 50) {\n      setTest(_objectSpread(_objectSpread({}, test), {}, {\n        pages: test.pages + 1\n      }));\n    }\n  };\n\n  useEffect(function () {\n    console.log(test.pages);\n\n    if (didMountRef.current) {\n      setPagesRendered(false);\n    } else {\n      setPagesRendered(true);\n    }\n  });\n  var didMountRef = useRef();\n  return __jsx(\"div\", {\n    className: styles.CreateTestContainer,\n    ref: didMountRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.TestType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }\n  }, __jsx(Select, {\n    options: typeOptions,\n    className: styles.TestTypeSelect,\n    onChange: function onChange(selected) {\n      return handleTypeChange(selected.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: styles.PageController,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: styles.AddPageCont,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, \"Pages:\"), __jsx(\"button\", {\n    disabled: pagesRendered,\n    className: styles.ChangePagesBtn,\n    onClick: removePage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, \"-\"), __jsx(\"input\", {\n    disabled: pagesRendered,\n    type: \"number\",\n    name: \"pagesNumber\",\n    id: \"pagesNumberIndicator\",\n    placeholder: test.pages.toString() // value={currentPages}\n    ,\n    onChange: handleNumberInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }), __jsx(\"button\", {\n    className: styles.ChangePagesBtn,\n    onClick: addPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, \"+\")), __jsx(PagesController, {\n    currentPages: test.pages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  })), testType === \"TT\" || testType === undefined ? null : __jsx(PhotoManager, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: styles.TestNaming,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, __jsx(TestNamer, {\n    currentLang: currentLang,\n    saveTest: saveTest,\n    currentStateOfTest: test,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  })), __jsx(TestPreview, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(create_test, \"+8rZ6xXVBsnT3AP0plDXKz/Radg=\");\n\nexport default create_test;","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/pages/TMS/create_test.tsx"],"names":["React","useEffect","useRef","useState","Select","PagesController","PhotoManager","TestNamer","TestPreview","styles","create_test","tmpPages","pagesRendered","setPagesRendered","pages","en","name","lv","ru","type","test","setTest","saveTest","currentLang","setCurrentLang","handleClick","typeOptions","value","label","testType","setTestType","handleTypeChange","chosenType","handleNumberInputChange","event","console","log","currentTarget","Number","undefined","String","removePage","addPage","didMountRef","current","CreateTestContainer","TestType","TestTypeSelect","selected","PageController","AddPageCont","ChangePagesBtn","toString","TestNaming"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport Select from \"react-select\";\nimport { ITest, TLangOption, TTestTypes } from \"../../@types/test\";\nimport PagesController from \"../../components/PagesController\";\nimport PhotoManager from \"../../components/PhotoManager\";\nimport TestNamer from \"../../components/TestNamer\";\nimport TestPreview from \"../../components/TestPreview\";\nimport styles from \"../styles/create_test.module.scss\";\n\nfunction create_test() {\n  // const [currentPages, setCurrentPages] = useState<number>(1);\n  let tmpPages: number = 0;\n  const [pagesRendered, setPagesRendered] = useState<boolean>();\n  const [test, setTest] = useState<ITest>({\n    pages: 3,\n    en: {\n      name: \"\",\n      pages: [],\n    },\n    lv: {\n      name: \"\",\n      pages: [],\n    },\n    ru: {\n      name: \"\",\n      pages: [],\n    },\n    type: \"\",\n  });\n  const saveTest = (test: ITest): void => setTest(test);\n  const [currentLang, setCurrentLang] = useState<TLangOption>();\n  const handleClick = () => {\n    setTest({\n      ru: {\n        name: \"imya\",\n        pages: test.ru.pages,\n      },\n      lv: test.lv,\n      en: test.en,\n      pages: test.pages,\n      type: \"TP\",\n    });\n  };\n\n  type TTypeOptions = {\n    value: \"TT\" | \"TP\" | \"PP\";\n    label: \"Text – Text\" | \"Text – Photo\" | \"Photo – Photo\";\n  };\n  const typeOptions: Array<TTypeOptions> = [\n    { value: \"TT\", label: \"Text – Text\" },\n    { value: \"TP\", label: \"Text – Photo\" },\n    { value: \"PP\", label: \"Photo – Photo\" },\n  ];\n\n  const [testType, setTestType] = useState<TTestTypes>();\n  const handleTypeChange = (chosenType: TTestTypes): void =>\n    setTestType(chosenType);\n\n  // const [editEnabled, setEditEnabled] = useState<boolean>(false);\n  // useEffect(() => {\n  //   if ((currentLang && testType) != undefined) {\n  //     console.log(\"in an if\");\n  //     setEditEnabled(true);\n  //   } else {\n  //     setEditEnabled(false);\n  //   }\n  //   console.log(\"outside of if\");\n  //   console.log(currentLang, testType);\n  // }, [currentLang, testType]);\n\n  const handleNumberInputChange = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    console.log(event.currentTarget.value);\n    if (\n      Number(event.currentTarget.value) >= 2 &&\n      event.currentTarget.value != undefined &&\n      Number(event.currentTarget.value) < 50\n    ) {\n      setTest({\n        ...test,\n        pages: Number(event.currentTarget.value),\n      });\n    }\n    if (Number(event.currentTarget.value) === 1) {\n      event.currentTarget.value = String(2);\n    }\n  };\n\n  const removePage = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ): void => {\n    if (test.pages !== 1) {\n      setTest({\n        ...test,\n        pages: test.pages - 1,\n      });\n    }\n  };\n\n  const addPage = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ): void => {\n    if (test.pages < 50) {\n      setTest({\n        ...test,\n        pages: test.pages + 1,\n      });\n    }\n  };\n\n  useEffect(() => {\n    console.log(test.pages);\n    if (didMountRef.current) {\n      setPagesRendered(false);\n    } else {\n      setPagesRendered(true);\n    }\n  });\n\n  const didMountRef = useRef();\n\n  return (\n    <div className={styles.CreateTestContainer} ref={didMountRef}>\n      <div className={styles.TestType}>\n        <Select\n          options={typeOptions}\n          className={styles.TestTypeSelect}\n          onChange={(selected: any): void => handleTypeChange(selected.value)}\n        />\n      </div>\n      <div className={styles.PageController}>\n        <div className={styles.AddPageCont}>\n          <span>Pages:</span>\n          <button\n            disabled={pagesRendered}\n            className={styles.ChangePagesBtn}\n            onClick={removePage}\n          >\n            -\n          </button>\n          <input\n            disabled={pagesRendered}\n            type=\"number\"\n            name=\"pagesNumber\"\n            id=\"pagesNumberIndicator\"\n            placeholder={test.pages.toString()}\n            // value={currentPages}\n            onChange={handleNumberInputChange}\n          />\n          <button className={styles.ChangePagesBtn} onClick={addPage}>\n            +\n          </button>\n        </div>\n        <PagesController currentPages={test.pages} />\n      </div>\n      {testType === ((\"TT\" as unknown) as TTestTypes) ||\n      testType === undefined ? null : (\n        <PhotoManager />\n      )}\n      <div className={styles.TestNaming}>\n        <TestNamer\n          currentLang={currentLang}\n          saveTest={saveTest}\n          currentStateOfTest={test}\n        />\n      </div>\n      <TestPreview />\n    </div>\n  );\n}\n\nexport default create_test;\n"]},"metadata":{},"sourceType":"module"}