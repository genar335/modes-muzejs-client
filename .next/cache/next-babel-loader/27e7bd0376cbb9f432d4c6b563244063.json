{"ast":null,"code":"var _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/QACard.tsx\";\nvar __jsx = React.createElement;\nimport React, { useRef, useState } from \"react\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\nimport addCompStyles from \"./styles/TestNamer.module.scss\";\nimport { closeBtn, CreateLangSwitchers } from \"./TestNamer\";\n\nconst QACard = props => {\n  const charLimit = 90;\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  console.log(props.cardContents);\n\n  const textPreviewer = text => {\n    if (text.length < 1) return __jsx(\"div\", {\n      className: compStyles.emptyText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 33\n      }\n    }, \"T\");\n\n    if (text.length > charLimit) {\n      return text.slice(0, 90) + \"...\";\n    } else {\n      return text;\n    }\n  };\n\n  function fileReading(file) {\n    const Reader = new FileReader();\n    Reader.onload = handleFile;\n    Reader.readAsDataURL(file);\n  }\n\n  function handleFile(e) {\n    console.log(e.target.result);\n    setUploadedImg(e.target.result);\n  }\n\n  const {\n    0: uploadedImg,\n    1: setUploadedImg\n  } = useState();\n\n  async function handleFileInput(event) {\n    event.preventDefault();\n\n    if (fileInput.current !== null) {\n      for (let i = 0; i < ((_fileInput$current$fi = fileInput.current.files) === null || _fileInput$current$fi === void 0 ? void 0 : _fileInput$current$fi.length); i++) {\n        var _fileInput$current$fi;\n\n        fileReading(fileInput.current.files[i]);\n      }\n    }\n  }\n\n  const fileInput = useRef(null);\n  return __jsx(\"div\", {\n    className: `${compStyles[props.cardType]}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    id: String(props.iterator),\n    className: `${addCompStyles.ModalContainerBG} ${!isOpen ? addCompStyles.Hidden : null}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: addCompStyles.ModalContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, closeBtn(setIsOpen), __jsx(\"div\", {\n    className: addCompStyles.Modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, CreateLangSwitchers(props.setSelectedLanguage, props.inputEnabler), __jsx(\"div\", {\n    className: addCompStyles.NameForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, props.cardContents === \"text\" ? props.q_a_TextEntry(props.cardType, props.iterator) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleFileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"Upload image\"), __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    accept: \"image/*\",\n    ref: fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }), __jsx(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }, \"Placeholder for image upload\"), __jsx(\"img\", {\n    src: uploadedImg,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }))))))), __jsx(\"p\", {\n    className: compStyles.QADescription,\n    onClick: e => setIsOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, props.cardContents === \"text\" ? textPreviewer(props.qna[props.cardType]) : __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"+\")));\n};\n\nexport default QACard;","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/QACard.tsx"],"names":["React","useRef","useState","compStyles","addCompStyles","closeBtn","CreateLangSwitchers","QACard","props","charLimit","isOpen","setIsOpen","console","log","cardContents","textPreviewer","text","length","emptyText","slice","fileReading","file","Reader","FileReader","onload","handleFile","readAsDataURL","e","target","result","setUploadedImg","uploadedImg","handleFileInput","event","preventDefault","fileInput","current","i","files","cardType","String","iterator","ModalContainerBG","Hidden","ModalContainer","Modal","setSelectedLanguage","inputEnabler","NameForm","q_a_TextEntry","QADescription","qna"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { IQnA, TLangOption } from \"../@types/test\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\nimport addCompStyles from \"./styles/TestNamer.module.scss\";\nimport { closeBtn, CreateLangSwitchers } from \"./TestNamer\";\nimport { read } from \"fs\";\nimport { readFile } from \"fs/promises\";\n\nconst QACard = (props: {\n  cardType: \"answer\" | \"question\";\n  cardContents: \"img\" | \"text\";\n  // saveData: (data) => void;\n  iterator: number;\n  setSelectedLanguage: (chooseLanguage: TLangOption[\"value\"]) => void;\n  inputEnabler: () => void;\n  qna: IQnA;\n  testType: any;\n  q_a_TextEntry: (type: \"answer\" | \"question\", id: number) => JSX.Element;\n}) => {\n  const charLimit = 90;\n  const [isOpen, setIsOpen] = useState(false);\n  console.log(props.cardContents);\n  const textPreviewer = (text: string) => {\n    if (text.length < 1) return <div className={compStyles.emptyText}>T</div>;\n    if (text.length > charLimit) {\n      return text.slice(0, 90) + \"...\";\n    } else {\n      return text;\n    }\n  };\n\n  function fileReading(file: Blob) {\n    const Reader = new FileReader();\n    Reader.onload = handleFile;\n    Reader.readAsDataURL(file);\n  }\n  function handleFile(e: ProgressEvent<FileReader>) {\n    console.log(e.target!.result)\n    setUploadedImg(e.target!.result);\n  }\n\n  const [uploadedImg, setUploadedImg] = useState();\n  async function handleFileInput(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    if (fileInput.current !== null) {\n      for (let i = 0; i < fileInput.current.files?.length; i++)\n        fileReading(fileInput.current!.files[i]);\n    }\n  }\n  const fileInput = useRef<HTMLInputElement>(null);\n\n  return (\n    <div className={`${compStyles[props.cardType]}`}>\n      <div\n        id={String(props.iterator)}\n        className={`${addCompStyles.ModalContainerBG} ${\n          !isOpen ? addCompStyles.Hidden : null\n        }`}\n      >\n        <div className={addCompStyles.ModalContainer}>\n          {closeBtn(setIsOpen)}\n          <div className={addCompStyles.Modal}>\n            {CreateLangSwitchers(props.setSelectedLanguage, props.inputEnabler)}\n            <div className={addCompStyles.NameForm}>\n              {props.cardContents === \"text\" ? (\n                props.q_a_TextEntry(props.cardType, props.iterator)\n              ) : (\n                <div>\n                  <form onSubmit={handleFileInput}>\n                    <label>Upload image</label>\n                    <input\n                      type=\"file\"\n                      multiple\n                      accept=\"image/*\"\n                      ref={fileInput}\n                    />\n                    <input type=\"submit\" value=\"Submit\" />\n                    <p>Placeholder for image upload</p>\n                    <img src={uploadedImg} alt=\"\" />\n                  </form>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      <p className={compStyles.QADescription} onClick={(e) => setIsOpen(true)}>\n        {props.cardContents === \"text\" ? (\n          textPreviewer(props.qna[props.cardType])\n        ) : (\n          <p>+</p>\n        )}\n      </p>\n    </div>\n  );\n};\nexport default QACard;\n"]},"metadata":{},"sourceType":"module"}