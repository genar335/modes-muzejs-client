{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/TestPreview.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport styles from \"../pages/styles/create_test.module.scss\";\nimport FMLogo from \"./FMlogo\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\n\nvar TestPreview = function TestPreview(props) {\n  function handleTextAreaQuestionChange(event) {\n    // let tmpArray =\n    //   props.currentTestState[props.currentLanguage!].pages[props.activePage]\n    //     .QnAPairs;\n    // console.log(\"tmp\", tmpArray);\n    // tmpArray.forEach((ele) => console.log(ele));\n    var tmpArray = props.currentTestState[props.currentLanguage].pages;\n    console.log(tmpArray);\n    console.log(tmpArray[props.activePage]);\n    console.log(tmpArray[props.activePage].QnAPairs[event.currentTarget.id]);\n    tmpArray[props.activePage].QnAPairs[event.currentTarget.id].question = event.currentTarget.value;\n    console.log(tmpArray);\n    props.saveChanges(_objectSpread(_objectSpread({}, props.currentTestState), {}, _defineProperty({}, props.currentLanguage, _objectSpread(_objectSpread({}, props.currentTestState[props.currentLanguage]), {}, {\n      pages: tmpArray\n    }))));\n  }\n\n  function questionRenderController(currentItem) {\n    switch (props.currentTestState.type) {\n      case \"TT\":\n        return __jsx(\"textarea\", {\n          id: String(currentItem),\n          onChange: handleTextAreaQuestionChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }\n        }, \" \");\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  var pageBody = function pageBody() {\n    return __jsx(\"div\", {\n      className: compStyles.pageBody,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, props.currentTestState[props.currentLanguage || \"ru\"].pages[props.activePage].QnAPairs.map(function (qnaPair, index) {\n      return __jsx(\"div\", {\n        className: compStyles.qnaPair,\n        id: String(index),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: compStyles.Question,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, questionRenderController(index)), __jsx(\"div\", {\n        className: compStyles.Answer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }\n      }, \"Answer: \", qnaPair.answer));\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: styles.TestPreview,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Page: \", props.activePage + 1), __jsx(\"div\", {\n    className: compStyles.TestBGContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, __jsx(FMLogo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }), pageBody()));\n};\n\n_c = TestPreview;\nexport default TestPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestPreview\");","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/TestPreview.tsx"],"names":["React","styles","FMLogo","compStyles","TestPreview","props","handleTextAreaQuestionChange","event","tmpArray","currentTestState","currentLanguage","pages","console","log","activePage","QnAPairs","currentTarget","id","question","value","saveChanges","questionRenderController","currentItem","type","String","pageBody","map","qnaPair","index","Question","Answer","answer","TestBGContainer"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n  IQnA,\n  IQnAPairs,\n  ITest,\n  TLangOption,\n  TTestTypes,\n} from \"../@types/test\";\nimport styles from \"../pages/styles/create_test.module.scss\";\nimport FMLogo from \"./FMlogo\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\n\nconst TestPreview = (props: {\n  activePage: number;\n  currentLanguage: TLangOption[\"value\"] | undefined;\n  currentTestState: ITest;\n  saveChanges: (test: ITest) => void;\n}) => {\n  function handleTextAreaQuestionChange(\n    event: React.ChangeEvent<HTMLTextAreaElement>\n  ) {\n    // let tmpArray =\n    //   props.currentTestState[props.currentLanguage!].pages[props.activePage]\n    //     .QnAPairs;\n    // console.log(\"tmp\", tmpArray);\n    // tmpArray.forEach((ele) => console.log(ele));\n    const tmpArray = props.currentTestState[props.currentLanguage!].pages;\n    console.log(tmpArray);\n    console.log(tmpArray[props.activePage]);\n    console.log(tmpArray[props.activePage].QnAPairs[event.currentTarget.id]);\n    tmpArray[props.activePage].QnAPairs[event.currentTarget.id].question =\n      event.currentTarget.value;\n    console.log(tmpArray);\n    props.saveChanges({\n      ...props.currentTestState,\n      [props.currentLanguage!]: {\n        ...props.currentTestState[props.currentLanguage!],\n        pages: tmpArray,\n      },\n    });\n  }\n\n  function questionRenderController(currentItem: number) {\n    switch (props.currentTestState.type) {\n      case \"TT\":\n        return (\n          <textarea\n            id={String(currentItem)}\n            onChange={handleTextAreaQuestionChange}\n          >\n            {\" \"}\n          </textarea>\n        );\n        break;\n\n      default:\n        break;\n    }\n  }\n  const pageBody = () => {\n    return (\n      <div className={compStyles.pageBody}>\n        {props.currentTestState[props.currentLanguage || \"ru\"].pages[\n          props.activePage\n        ].QnAPairs.map((qnaPair: IQnA, index: number) => (\n          <div className={compStyles.qnaPair} id={String(index)}>\n            <div className={compStyles.Question}>\n              {questionRenderController(index)}\n            </div>\n            <div className={compStyles.Answer}>Answer: {qnaPair.answer}</div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div className={styles.TestPreview}>\n      <h3>Page: {props.activePage + 1}</h3>\n      <div className={compStyles.TestBGContainer}>\n        <FMLogo />\n        {pageBody()}\n      </div>\n    </div>\n  );\n};\n\nexport default TestPreview;\n"]},"metadata":{},"sourceType":"module"}