{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/QACard.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\nimport addCompStyles from \"./styles/TestNamer.module.scss\";\nimport { closeBtn, CreateLangSwitchers } from \"./TestNamer\";\n\nvar QACard = function QACard(props) {\n  _s();\n\n  var charLimit = 90;\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  var textPreviewer = function textPreviewer(text) {\n    console.log(text);\n    if (text.length < 1) return __jsx(\"div\", {\n      className: compStyles.emptyText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 33\n      }\n    }, \"T\");\n    if (text.length > charLimit) return text.slice(0, 90) + \"...\";\n  };\n\n  return __jsx(\"div\", {\n    className: \"\".concat(compStyles[props.cardType]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    id: String(props.iterator),\n    className: \"\".concat(addCompStyles.ModalContainerBG, \" \").concat(!isOpen ? addCompStyles.Hidden : null),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: addCompStyles.ModalContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, closeBtn(setIsOpen), __jsx(\"div\", {\n    className: addCompStyles.Modal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, CreateLangSwitchers(props.setSelectedLanguage, props.inputEnabler), __jsx(\"div\", {\n    className: addCompStyles.NameForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, props.testType === \"TT\" ? props.q_a_TextEntry(props.cardType, props.iterator) : null)))), __jsx(\"p\", {\n    className: compStyles.QADescription,\n    onClick: function onClick(e) {\n      return setIsOpen(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, textPreviewer(props.qna[props.cardType])));\n};\n\n_s(QACard, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = QACard;\nexport default QACard;\n\nvar _c;\n\n$RefreshReg$(_c, \"QACard\");","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/QACard.tsx"],"names":["React","useState","compStyles","addCompStyles","closeBtn","CreateLangSwitchers","QACard","props","charLimit","isOpen","setIsOpen","textPreviewer","text","console","log","length","emptyText","slice","cardType","String","iterator","ModalContainerBG","Hidden","ModalContainer","Modal","setSelectedLanguage","inputEnabler","NameForm","testType","q_a_TextEntry","QADescription","e","qna"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,SAASC,QAAT,EAAmBC,mBAAnB,QAA8C,aAA9C;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAUT;AAAA;;AACJ,MAAMC,SAAS,GAAG,EAAlB;;AADI,kBAEwBP,QAAQ,CAAC,KAAD,CAFhC;AAAA,MAEGQ,MAFH;AAAA,MAEWC,SAFX;;AAGJ,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAkB;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,QAAIA,IAAI,CAACG,MAAL,GAAc,CAAlB,EAAqB,OAAO;AAAK,MAAA,SAAS,EAAEb,UAAU,CAACc,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACrB,QAAIJ,IAAI,CAACG,MAAL,GAAcP,SAAlB,EAA6B,OAAOI,IAAI,CAACK,KAAL,CAAW,CAAX,EAAc,EAAd,IAAoB,KAA3B;AAC9B,GAJD;;AAKA,SACE;AAAK,IAAA,SAAS,YAAKf,UAAU,CAACK,KAAK,CAACW,QAAP,CAAf,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,EAAE,EAAEC,MAAM,CAACZ,KAAK,CAACa,QAAP,CADZ;AAEE,IAAA,SAAS,YAAKjB,aAAa,CAACkB,gBAAnB,cACP,CAACZ,MAAD,GAAUN,aAAa,CAACmB,MAAxB,GAAiC,IAD1B,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAK,IAAA,SAAS,EAAEnB,aAAa,CAACoB,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,QAAQ,CAACM,SAAD,CADX,EAEE;AAAK,IAAA,SAAS,EAAEP,aAAa,CAACqB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGnB,mBAAmB,CAACE,KAAK,CAACkB,mBAAP,EAA4BlB,KAAK,CAACmB,YAAlC,CADtB,EAEE;AAAK,IAAA,SAAS,EAAEvB,aAAa,CAACwB,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGpB,KAAK,CAACqB,QAAN,KAAmB,IAAnB,GACGrB,KAAK,CAACsB,aAAN,CAAoBtB,KAAK,CAACW,QAA1B,EAAoCX,KAAK,CAACa,QAA1C,CADH,GAEG,IAHN,CAFF,CAFF,CANF,CADF,EAmBE;AAAG,IAAA,SAAS,EAAElB,UAAU,CAAC4B,aAAzB;AAAwC,IAAA,OAAO,EAAE,iBAACC,CAAD;AAAA,aAAOrB,SAAS,CAAC,IAAD,CAAhB;AAAA,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,aAAa,CAACJ,KAAK,CAACyB,GAAN,CAAUzB,KAAK,CAACW,QAAhB,CAAD,CADhB,CAnBF,CADF;AAyBD,CA3CD;;GAAMZ,M;;KAAAA,M;AA4CN,eAAeA,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { IQnA, TLangOption } from \"../@types/test\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\nimport addCompStyles from \"./styles/TestNamer.module.scss\";\nimport { closeBtn, CreateLangSwitchers } from \"./TestNamer\";\nimport { AnyTxtRecord } from \"dns\";\nconst QACard = (props: {\n  cardType: \"answer\" | \"question\";\n  cardContents: \"img\" | \"text\";\n  // saveData: (data) => void;\n  iterator: number;\n  setSelectedLanguage: (chooseLanguage: TLangOption[\"value\"]) => void;\n  inputEnabler: () => void;\n  qna: IQnA;\n  testType: any;\n  q_a_TextEntry: (type: \"answer\" | \"question\", id: number) => JSX.Element;\n}) => {\n  const charLimit = 90;\n  const [isOpen, setIsOpen] = useState(false);\n  const textPreviewer = (text: string) => {\n    console.log(text);\n    if (text.length < 1) return <div className={compStyles.emptyText}>T</div>;\n    if (text.length > charLimit) return text.slice(0, 90) + \"...\";\n  };\n  return (\n    <div className={`${compStyles[props.cardType]}`}>\n      <div\n        id={String(props.iterator)}\n        className={`${addCompStyles.ModalContainerBG} ${\n          !isOpen ? addCompStyles.Hidden : null\n        }`}\n      >\n        <div className={addCompStyles.ModalContainer}>\n          {closeBtn(setIsOpen)}\n          <div className={addCompStyles.Modal}>\n            {CreateLangSwitchers(props.setSelectedLanguage, props.inputEnabler)}\n            <div className={addCompStyles.NameForm}>\n              {props.testType === \"TT\"\n                ? props.q_a_TextEntry(props.cardType, props.iterator)\n                : null}\n            </div>\n          </div>\n        </div>\n      </div>\n      <p className={compStyles.QADescription} onClick={(e) => setIsOpen(true)}>\n        {textPreviewer(props.qna[props.cardType])}\n      </p>\n    </div>\n  );\n};\nexport default QACard;\n"]},"metadata":{},"sourceType":"module"}