{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/QACard.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport compStyles from './styles/TestPreview.module.scss';\nimport addCompStyles from \"./styles/TestNamer.module.scss\";\nimport { closeBtn, CreateLangSwitchers } from \"./TestNamer\";\n\nvar QACard = function QACard(props) {\n  _s();\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  var textPreviewer = function textPreviewer(text) {\n    return text.slice(0, 90) + \"...\";\n  };\n\n  return __jsx(\"div\", {\n    className: \"tmpContainer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    id: String(iterator),\n    className: \"\".concat(addCompStyles.ModalContainerBG, \" \").concat(!isOpen ? addCompStyles.Hidden : null),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: addCompStyles.ModalContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, closeBtn(setIsOpen), __jsx(\"div\", {\n    className: addCompStyles.Modal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  }, CreateLangSwitchers(setSelectedLanguage, inputEnabler), __jsx(\"div\", {\n    className: addCompStyles.NameForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, props.testType === \"TT\" ? q_a_TextEntry(\"answer\", iterator) : null)))), __jsx(\"span\", {\n    className: compStyles.answer,\n    onClick: function onClick(e) {\n      return setisOpen(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, textPreviewer(qna.answer)));\n};\n\n_s(QACard, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = QACard;\nexport default QACard;\n\nvar _c;\n\n$RefreshReg$(_c, \"QACard\");","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/QACard.tsx"],"names":["React","useState","compStyles","addCompStyles","closeBtn","CreateLangSwitchers","QACard","props","isOpen","setIsOpen","textPreviewer","text","slice","String","iterator","ModalContainerBG","Hidden","ModalContainer","Modal","setSelectedLanguage","inputEnabler","NameForm","testType","q_a_TextEntry","answer","e","setisOpen","qna"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,SAASC,QAAT,EAAmBC,mBAAnB,QAA8C,aAA9C;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAIT;AAAA;;AAAA,kBAC0BN,QAAQ,CAAC,KAAD,CADlC;AAAA,MACKO,MADL;AAAA,MACaC,SADb;;AAEF,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAkB;AACtC,WAAOA,IAAI,CAACC,KAAL,CAAW,CAAX,EAAc,EAAd,IAAoB,KAA3B;AACD,GAFD;;AAGA,SACA;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM;AACE,IAAA,EAAE,EAAEC,MAAM,CAACC,QAAD,CADZ;AAEE,IAAA,SAAS,YAAKX,aAAa,CAACY,gBAAnB,cACP,CAACP,MAAD,GAAUL,aAAa,CAACa,MAAxB,GAAiC,IAD1B,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAK,IAAA,SAAS,EAAEb,aAAa,CAACc,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,QAAQ,CAACK,SAAD,CADX,EAEE;AAAK,IAAA,SAAS,EAAEN,aAAa,CAACe,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,mBAAmB,CAACc,mBAAD,EAAsBC,YAAtB,CADtB,EAEE;AAAK,IAAA,SAAS,EAAEjB,aAAa,CAACkB,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,KAAK,CAACe,QAAN,KAAmB,IAAnB,GACGC,aAAa,CAAC,QAAD,EAAWT,QAAX,CADhB,GAEG,IAHN,CAFF,CAFF,CANF,CADN,EAmBM;AAAM,IAAA,SAAS,EAAEZ,UAAU,CAACsB,MAA5B;AAAoC,IAAA,OAAO,EAAE,iBAACC,CAAD;AAAA,aAAOC,SAAS,CAAC,IAAD,CAAhB;AAAA,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,aAAa,CAACiB,GAAG,CAACH,MAAL,CADhB,CAnBN,CADA;AAyBH,CAlCD;;GAAMlB,M;;KAAAA,M;AAmCN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react'\nimport { IQnA } from '../@types/test'\nimport compStyles from './styles/TestPreview.module.scss'\nimport addCompStyles from \"./styles/TestNamer.module.scss\";\nimport { closeBtn, CreateLangSwitchers } from \"./TestNamer\";\nconst QACard = (props: {\n    cardType: 'answer' | 'question';\n    cardContents: 'img' | 'text';\n    // saveData: (data) => void;\n}) => {\n    const [isOpen, setIsOpen] = useState(false)\n    const textPreviewer = (text: string) => {\n      return text.slice(0, 90) + \"...\";\n    };\n    return (\n    <div className=\"tmpContainer\">\n          <div\n            id={String(iterator)}\n            className={`${addCompStyles.ModalContainerBG} ${\n              !isOpen ? addCompStyles.Hidden : null\n            }`}\n          >\n            <div className={addCompStyles.ModalContainer}>\n              {closeBtn(setIsOpen)}\n              <div className={addCompStyles.Modal}>\n                {CreateLangSwitchers(setSelectedLanguage, inputEnabler)}\n                <div className={addCompStyles.NameForm}>\n                  {props.testType === \"TT\"\n                    ? q_a_TextEntry(\"answer\", iterator)\n                    : null}\n                </div>\n              </div>\n            </div>\n          </div>\n          <span className={compStyles.answer} onClick={(e) => setisOpen(true)}>\n            {textPreviewer(qna.answer)}\n          </span>\n        </div>\n    )\n}\nexport default QACard;"]},"metadata":{},"sourceType":"module"}