{"ast":null,"code":"var _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/LangBtnController.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport LanguageBtn from \"./LanguageBtn\";\nimport compStyle from \"./styles/LangBtnController.module.scss\";\n\nconst LangBtnController = props => {\n  const {\n    0: activeBtn,\n    1: setActiveBtn\n  } = useState(props.active);\n  /**\n   * Sets currently active button.\n   * @param id of a button\n   */\n\n  const activeBtnSetter = id => setActiveBtn(id);\n\n  useEffect(() => {\n    Btns.forEach(button => {\n      if (!button[0].props.btnID === activeBtn) {\n        console.log(activeBtn);\n      }\n    });\n  }, [activeBtn]);\n  const Btns = props.BtnArray.map((button, key) => {\n    return [__jsx(LanguageBtn, {\n      btnID: button,\n      btnText: button.toUpperCase(),\n      handleBtnClick: props.clickHandler,\n      inputEnabler: props.setIsNameEntryEnabled,\n      pressed: button === activeBtn ? true : false,\n      key: key,\n      langSelect: props.langSelector,\n      setActiveBtn: activeBtnSetter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }), button === activeBtn ? true : false];\n  });\n\n  const ChangeBtnState = btnID => {\n    Btns.forEach(element => {\n      console.log(element[1]);\n      if (element[1]) props.inputEnabler(true);\n    });\n  };\n\n  console.log(Btns);\n  ChangeBtnState(Btns);\n  return __jsx(\"div\", {\n    className: compStyle.LangSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, Btns.map(ele => {\n    return ele;\n  }));\n};\n\nexport default LangBtnController;","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/LangBtnController.tsx"],"names":["React","useState","LanguageBtn","compStyle","LangBtnController","props","activeBtn","setActiveBtn","active","activeBtnSetter","id","useEffect","Btns","forEach","button","btnID","console","log","BtnArray","map","key","toUpperCase","clickHandler","setIsNameEntryEnabled","langSelector","ChangeBtnState","element","inputEnabler","LangSelect","ele"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,SAAP,MAAsB,wCAAtB;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAKnC,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BN,QAAQ,CAASI,KAAK,CAACG,MAAf,CAA1C;AACA;;;;;AAIA,QAAMC,eAAe,GAAIC,EAAD,IAAgBH,YAAY,CAACG,EAAD,CAApD;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,IAAI,CAACC,OAAL,CAAcC,MAAD,IAAY;AACvB,UAAI,CAACA,MAAM,CAAC,CAAD,CAAN,CAAUT,KAAV,CAAgBU,KAAjB,KAA2BT,SAA/B,EAA0C;AACxCU,QAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ;AACD;AACF,KAJD;AAKD,GANQ,EAMN,CAACA,SAAD,CANM,CAAT;AAQA,QAAMM,IAAsC,GAAGP,KAAK,CAACa,QAAN,CAAeC,GAAf,CAC7C,CAACL,MAAD,EAASM,GAAT,KAAiB;AACf,WAAO,CACL,MAAC,WAAD;AACE,MAAA,KAAK,EAAEN,MADT;AAEE,MAAA,OAAO,EAAEA,MAAM,CAACO,WAAP,EAFX;AAGE,MAAA,cAAc,EAAEhB,KAAK,CAACiB,YAHxB;AAIE,MAAA,YAAY,EAAEjB,KAAK,CAACkB,qBAJtB;AAKE,MAAA,OAAO,EAAET,MAAM,KAAKR,SAAX,GAAuB,IAAvB,GAA8B,KALzC;AAME,MAAA,GAAG,EAAEc,GANP;AAOE,MAAA,UAAU,EAAEf,KAAK,CAACmB,YAPpB;AAQE,MAAA,YAAY,EAAEf,eARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,EAWLK,MAAM,KAAKR,SAAX,GAAuB,IAAvB,GAA8B,KAXzB,CAAP;AAaD,GAf4C,CAA/C;;AAiBA,QAAMmB,cAAc,GAAIV,KAAD,IAAW;AAChCH,IAAAA,IAAI,CAACC,OAAL,CAAca,OAAD,IAAkB;AAC7BV,MAAAA,OAAO,CAACC,GAAR,CAAYS,OAAO,CAAC,CAAD,CAAnB;AACA,UAAIA,OAAO,CAAC,CAAD,CAAX,EAAgBrB,KAAK,CAACsB,YAAN,CAAmB,IAAnB;AACjB,KAHD;AAID,GALD;;AAMAX,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAa,EAAAA,cAAc,CAACb,IAAD,CAAd;AACA,SACE;AAAK,IAAA,SAAS,EAAET,SAAS,CAACyB,UAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGhB,IAAI,CAACO,GAAL,CAAUU,GAAD,IAAc;AACtB,WAAOA,GAAP;AACD,GAFA,CADH,CADF;AAOD,CApDD;;AAsDA,eAAezB,iBAAf","sourcesContent":["import React, { useState } from \"react\";\nimport LanguageBtn from \"./LanguageBtn\";\nimport compStyle from \"./styles/LangBtnController.module.scss\";\n\nconst LangBtnController = (props) => {\n  type TBtnArrayWithPressedState = {\n    btns: [JSX.Element, boolean];\n  };\n\n  const [activeBtn, setActiveBtn] = useState<string>(props.active);\n  /**\n   * Sets currently active button.\n   * @param id of a button\n   */\n  const activeBtnSetter = (id: string) => setActiveBtn(id);\n\n  useEffect(() => {\n    Btns.forEach((button) => {\n      if (!button[0].props.btnID === activeBtn) {\n        console.log(activeBtn);\n      }\n    });\n  }, [activeBtn]);\n\n  const Btns: Array<TBtnArrayWithPressedState> = props.BtnArray.map(\n    (button, key) => {\n      return [\n        <LanguageBtn\n          btnID={button}\n          btnText={button.toUpperCase()}\n          handleBtnClick={props.clickHandler}\n          inputEnabler={props.setIsNameEntryEnabled}\n          pressed={button === activeBtn ? true : false}\n          key={key}\n          langSelect={props.langSelector}\n          setActiveBtn={activeBtnSetter}\n        />,\n        button === activeBtn ? true : false,\n      ];\n    }\n  );\n  const ChangeBtnState = (btnID) => {\n    Btns.forEach((element: any) => {\n      console.log(element[1]);\n      if (element[1]) props.inputEnabler(true);\n    });\n  };\n  console.log(Btns);\n  ChangeBtnState(Btns);\n  return (\n    <div className={compStyle.LangSelect}>\n      {Btns.map((ele: any) => {\n        return ele;\n      })}\n    </div>\n  );\n};\n\nexport default LangBtnController;\n"]},"metadata":{},"sourceType":"module"}