{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from \"react\"; // import Carousel from \"react-multi-carousel\";\n// import { Carousel } from \"primereact/carousel\";\n\nimport TestCard from \"./TestCard\";\nimport styles from \"./styles/ActiveTests.module.scss\";\nimport { useRouter } from \"next/router\";\nimport Collapsible from \"react-collapsible\";\n\nvar ActiveTests = function ActiveTests(props) {\n  var responsive = {\n    superLargeDesktop: {\n      // the naming can be any, depends on you.\n      breakpoint: {\n        max: 4000,\n        min: 3000\n      },\n      items: 5\n    },\n    desktop: {\n      breakpoint: {\n        max: 3000,\n        min: 1024\n      },\n      items: 4\n    },\n    tablet: {\n      breakpoint: {\n        max: 1024,\n        min: 464\n      },\n      items: 2\n    },\n    mobile: {\n      breakpoint: {\n        max: 464,\n        min: 0\n      },\n      items: 1\n    }\n  };\n  var router = useRouter();\n\n  var handleAddTestClick = function handleAddTestClick() {\n    // alert(\"Test addition should be happening right about now.\");\n    router.push(\"/tms/create_test\");\n  }; // const CustomRightArrow = ({ onClick, ...rest }) => {\n  //   const {\n  //     onMove,\n  //     carouselState: { currentSlide, deviceType },\n  //   } = rest;\n  //   // onMove means if dragging or swiping in progress.\n  //   return (\n  //     <button className={styles.carRightArrow} onClick={() => onClick()}>\n  //       {Arrow()}\n  //     </button>\n  //   );\n  // };\n  // const CustomLeftArrow = ({ onClick, ...rest }) => {\n  //   const {\n  //     onMove,\n  //     carouselState: { currentSlide, deviceType },\n  //   } = rest;\n  //   return (\n  //     <button onClick={() => onClick()} className={styles.carLeftArrow}>\n  //       {Arrow()}\n  //     </button>\n  //   );\n  // };\n\n\n  var Arrow = function Arrow() {\n    return __jsx(\"svg\", {\n      width: \"56\",\n      height: \"56\",\n      viewBox: \"0 0 56 56\",\n      fill: \"none\",\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }, __jsx(\"circle\", {\n      cx: \"28\",\n      cy: \"28\",\n      r: \"28\",\n      fill: \"#2F4858\"\n    }), __jsx(\"path\", {\n      d: \"M22 41L35 28L22 15\",\n      stroke: \"white\",\n      strokeWidth: \"3\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\"\n    }));\n  };\n\n  var _useState = useState([]),\n      TestCardArray = _useState[0],\n      setTestCardArray = _useState[1];\n\n  var slideCss = {\n    width: \"min-content\",\n    height: \"min-content\",\n    position: \"relative\"\n  };\n  useEffect(function () {\n    setTestCardArray(PrepareTestCardsJSX(props, slideCss));\n  }, [props.tests]); // function isTriggerDisabled(ref) {\n  //   console.log(ref.props.triggerDisabled);\n  // }\n\n  var collapsibleRef = useRef(null);\n  return __jsx(\"div\", {\n    className: styles.ActiveTestsContainer\n  }, __jsx(\"h1\", {\n    className: styles.ActiveTestsHeader\n  }, \"\\u0410\\u043A\\u0442\\u0438\\u0432\\u043D\\u044B\\u0435 \\u0442\\u0435\\u0441\\u0442\\u044B\"), __jsx(\"div\", {\n    className: styles.CarouselContainer\n  }, __jsx(\"div\", {\n    style: {\n      width: \"100%\",\n      display: \"grid\",\n      gridTemplateColumns: \"repeat(4, 1fr)\",\n      // gridTemplateRows: 'auto',\n      placeItems: \"center\"\n    }\n  }, __jsx(\"div\", {\n    style: slideCss\n  }, addATest(handleAddTestClick)), TestCardArray.slice(0, 3)), __jsx(Collapsible, {\n    ref: collapsibleRef,\n    contentInnerClassName: styles.CollapsibleContentInner,\n    contentOuterClassName: styles.CollapsibleContentOuter,\n    triggerClassName: styles.CollapsibleTrigger,\n    triggerOpenedClassName: styles.CollapsibleTriggerOpen,\n    className: styles.Collapsible,\n    openedClassName: styles.Collapsible,\n    triggerDisabled: TestCardArray.length <= 3,\n    trigger: __jsx(\"div\", {\n      style: {\n        transform: \"rotate(90deg)\" //   filter: collapsibleRef.current?.props?.triggerDisabled\n        //     ? \"brightness(0.5)\"\n        //     : \"brightness(1)\",\n\n      }\n    }, Arrow())\n  }, TestCardArray.slice(3))));\n};\n\nexport default ActiveTests;\n\nfunction PrepareTestCardsJSX(props, slideCss) {\n  return props.activeTests.map(function (test, iterator) {\n    return __jsx(\"div\", {\n      id: \"carouselSlide_\".concat(iterator),\n      style: slideCss,\n      key: \"slide_\".concat(iterator)\n    }, __jsx(TestCard, {\n      key: iterator,\n      iterator: iterator,\n      colour: \"white\",\n      _id: test._id || \"NA\",\n      active: true,\n      nameInRu: test.ru.name,\n      fullTest: test,\n      updateTests: props.updateTheTests,\n      fetchAllTests: props.fetchAllTests\n    }));\n  });\n}\n\nfunction addATest(handleAddTestClick) {\n  return __jsx(\"div\", {\n    onClick: handleAddTestClick,\n    id: \"AddTest\",\n    className: styles.AddTestCard\n  }, PlusSign());\n}\n/**\n * Returns an SVG plus sign\n * @param widthHeight Width and height of the plus icon in pixels.\n */\n\n\nexport var PlusSign = function PlusSign() {\n  var widthHeight = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 150;\n  var colour = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"white\";\n  return __jsx(\"svg\", {\n    width: widthHeight,\n    height: widthHeight,\n    viewBox: \"0 0 75 75\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\"\n  }, __jsx(\"path\", {\n    d: \"M71.2495 33.7499H41.2501V3.74976C41.2501 1.68022 39.5699 0 37.4997 0C35.4301 0 33.7499 1.68022 33.7499 3.74976V33.7499H3.74976C1.68022 33.7499 0 35.4301 0 37.4997C0 39.5699 1.68022 41.2501 3.74976 41.2501H33.7499V71.2495C33.7499 73.3198 35.4301 75 37.4997 75C39.5699 75 41.2501 73.3198 41.2501 71.2495V41.2501H71.2495C73.3198 41.2501 75 39.5699 75 37.4997C75 35.4301 73.3198 33.7499 71.2495 33.7499Z\",\n    fill: colour\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}