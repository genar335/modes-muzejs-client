{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/LangBtnController.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport LanguageBtn from \"./LanguageBtn\";\nimport compStyle from \"./styles/LangBtnController.module.scss\";\n\nvar LangBtnController = function LangBtnController(props) {\n  _s();\n\n  var _useState = useState(),\n      activeBtnPosition = _useState[0],\n      setActiveBtnPosition = _useState[1];\n\n  var activeBtnPositionSetter = function activeBtnPositionSetter(id) {\n    setActiveBtnPosition(id);\n    console.log(id);\n  };\n\n  var _useState2 = useState([]),\n      flatBtns = _useState2[0],\n      setFlatBtns = _useState2[1];\n\n  var forceUpdate = React.useReducer(function () {\n    return {};\n  }, {})[1];\n\n  if (flatBtns.length !== props.BtnArray.length) {\n    var tmp = props.BtnArray.map(function (btn) {\n      if (btn === props.active) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n    setActiveBtnPosition(tmp.indexOf(true));\n    setFlatBtns(tmp);\n  }\n\n  function activeBtnSwitcher() {\n    flatBtns.pop();\n\n    if (activeBtnPosition == flatBtns.length) {\n      flatBtns.unshift(true);\n    } else {\n      flatBtns.unshift(false);\n    }\n\n    console.log(flatBtns, \"after manipulation\"); // Btns.forEach((btn, index) => (btn[1] = flatBtns[index]));\n\n    setActiveBtnPosition(flatBtns.indexOf(true));\n    forceUpdate();\n  } // * Grabbing arrow in the modal which selects next element.\n  // * Assings a click listener to the grabbed element.\n\n\n  var arrowBtn;\n  useEffect(function () {\n    var _arrowBtn;\n\n    arrowBtn = document.getElementById(\"arrowButton\");\n    (_arrowBtn = arrowBtn) === null || _arrowBtn === void 0 ? void 0 : _arrowBtn.addEventListener(\"click\", handleArrowClick);\n    return function () {\n      var _arrowBtn2;\n\n      return (_arrowBtn2 = arrowBtn) === null || _arrowBtn2 === void 0 ? void 0 : _arrowBtn2.removeEventListener(\"click\", handleArrowClick);\n    };\n  }, []);\n\n  var handleArrowClick = function handleArrowClick() {\n    activeBtnSwitcher();\n  }; // * Cleans other buttons from the pressed class.\n  //   useEffect(() => {\n  //     Btns.forEach((button) => {\n  //       console.log(button[0].props.btnID);\n  //       if (button[0].props.btnID !== activeBtn) {\n  //         button[1] = false;\n  //       }\n  //     });\n  //   }, []);\n\n\n  console.log(props.BtnArray[0].tu);\n  return __jsx(\"div\", {\n    className: compStyle.LangSelect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, props.BtnArray.map(function (button, key) {\n    return __jsx(LanguageBtn, {\n      btnID: button,\n      btnText: button.toUpperCase(),\n      key: key,\n      langSelect: props.langSelector,\n      inputEnabler: props.inputEnabler,\n      setActiveBtn: activeBtnPositionSetter,\n      pressed: flatBtns[key],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    });\n  }));\n};\n\n_s(LangBtnController, \"KR1Z8ozEBLEZW753IuNTBNXCUmw=\");\n\n_c = LangBtnController;\nexport default LangBtnController;\n\nvar _c;\n\n$RefreshReg$(_c, \"LangBtnController\");","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/LangBtnController.tsx"],"names":["React","useEffect","useState","LanguageBtn","compStyle","LangBtnController","props","activeBtnPosition","setActiveBtnPosition","activeBtnPositionSetter","id","console","log","flatBtns","setFlatBtns","forceUpdate","useReducer","length","BtnArray","tmp","map","btn","active","indexOf","activeBtnSwitcher","pop","unshift","arrowBtn","document","getElementById","addEventListener","handleArrowClick","removeEventListener","tu","LangSelect","button","key","toUpperCase","langSelector","inputEnabler"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport LanguageBtn from \"./LanguageBtn\";\nimport compStyle from \"./styles/LangBtnController.module.scss\";\n\nconst LangBtnController = (props) => {\n  type TBtnArrayWithPressedState = {\n    btns: [JSX.Element, boolean];\n  };\n\n  const [activeBtnPosition, setActiveBtnPosition] = useState<Number>();\n  const activeBtnPositionSetter = (id) => {\n    setActiveBtnPosition(id);\n    console.log(id);\n  };\n\n  const [flatBtns, setFlatBtns] = useState<Array<boolean>>([]);\n  const forceUpdate = React.useReducer(() => ({}), {})[1] as () => void;\n\n  if (flatBtns.length !== props.BtnArray.length) {\n    const tmp: boolean[] = props.BtnArray.map((btn) => {\n      if (btn === props.active) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n    setActiveBtnPosition(tmp.indexOf(true));\n    setFlatBtns(tmp);\n  }\n\n  function activeBtnSwitcher() {\n    flatBtns.pop();\n    if (activeBtnPosition == flatBtns.length) {\n      flatBtns.unshift(true);\n    } else {\n      flatBtns.unshift(false);\n    }\n    console.log(flatBtns, \"after manipulation\");\n    // Btns.forEach((btn, index) => (btn[1] = flatBtns[index]));\n    setActiveBtnPosition(flatBtns.indexOf(true));\n    forceUpdate();\n  }\n\n  // * Grabbing arrow in the modal which selects next element.\n  // * Assings a click listener to the grabbed element.\n  let arrowBtn: HTMLElement | null;\n  useEffect(() => {\n    arrowBtn = document.getElementById(\"arrowButton\");\n    arrowBtn?.addEventListener(\"click\", handleArrowClick);\n    return () => arrowBtn?.removeEventListener(\"click\", handleArrowClick);\n  }, []);\n\n  const handleArrowClick = (): void => {\n    activeBtnSwitcher();\n  };\n\n  // * Cleans other buttons from the pressed class.\n  //   useEffect(() => {\n  //     Btns.forEach((button) => {\n  //       console.log(button[0].props.btnID);\n  //       if (button[0].props.btnID !== activeBtn) {\n  //         button[1] = false;\n  //       }\n  //     });\n  //   }, []);\n\n  console.log(props.BtnArray[0].tu);\n  return (\n    <div className={compStyle.LangSelect}>\n      {props.BtnArray.map((button, key) => (\n        <LanguageBtn\n          btnID={button}\n          btnText={button.toUpperCase()}\n          key={key}\n          langSelect={props.langSelector}\n          inputEnabler={props.inputEnabler}\n          setActiveBtn={activeBtnPositionSetter}\n          pressed={flatBtns[key]}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default LangBtnController;\n"]},"metadata":{},"sourceType":"module"}