{"ast":null,"code":"var _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/ActiveTests.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport Carousel from \"react-multi-carousel\";\nimport styles from \"./styles/ActiveTests.module.scss\";\nimport { useRouter } from \"next/router\";\nimport Axios from \"axios\";\n\nconst ActiveTests = props => {\n  const createTestToRender = async () => {\n    return await props.getActiveTests(false);\n  };\n\n  const {\n    0: recievedTests,\n    1: setRecievedTests\n  } = useState();\n  useEffect(() => {\n    const getTest = async () => {\n      try {\n        const rTests = await Axios.get(`http://localhost:4000/tests/getTest?active=${false}`);\n        console.log(rTests);\n        setRecievedTests(rTests);\n      } catch (error) {\n        alert(error);\n      }\n    };\n  }, []);\n  const responsive = {\n    superLargeDesktop: {\n      // the naming can be any, depends on you.\n      breakpoint: {\n        max: 4000,\n        min: 3000\n      },\n      items: 5\n    },\n    desktop: {\n      breakpoint: {\n        max: 3000,\n        min: 1024\n      },\n      items: 4\n    },\n    tablet: {\n      breakpoint: {\n        max: 1024,\n        min: 464\n      },\n      items: 2\n    },\n    mobile: {\n      breakpoint: {\n        max: 464,\n        min: 0\n      },\n      items: 1\n    }\n  };\n  const router = useRouter();\n\n  const handleAddTestClick = () => {\n    alert(\"Test addition should be happening right about now.\");\n    router.push(`/TMS/create_test`);\n  };\n\n  return __jsx(\"div\", {\n    className: styles.ActiveTestsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Active tests\"), __jsx(Carousel, {\n    responsive: responsive,\n    ssr: true,\n    className: styles.Carousel,\n    showDots: true,\n    dotListClass: styles.customDotListStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, addATest(handleAddTestClick)));\n};\n\nexport default ActiveTests;\n\nfunction addATest(handleAddTestClick) {\n  return __jsx(\"div\", {\n    onClick: handleAddTestClick,\n    id: \"AddTest\",\n    className: styles.AddTestCard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"+\"));\n}","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/ActiveTests.tsx"],"names":["React","useEffect","useState","Carousel","styles","useRouter","Axios","ActiveTests","props","createTestToRender","getActiveTests","recievedTests","setRecievedTests","getTest","rTests","get","console","log","error","alert","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","router","handleAddTestClick","push","ActiveTestsContainer","customDotListStyle","addATest","AddTestCard"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Carousel from \"react-multi-carousel\";\nimport TestCard from \"./TestCard\";\nimport styles from \"./styles/ActiveTests.module.scss\";\nimport { brown } from \"./constants\";\nimport { NextRouter, useRouter } from \"next/router\";\nimport { NextApiHandler } from \"next\";\nimport { ITest } from \"../@types/test\";\nimport Axios from \"axios\";\n\nconst ActiveTests = (props: {\n  getActiveTests: (active: boolean) => Promise<any>;\n}) => {\n  const createTestToRender = async () => {\n    return await props.getActiveTests(false);\n  };\n\n  const [recievedTests, setRecievedTests] = useState();\n\n  useEffect(() => {\n    const getTest = async () => {\n      try {\n        const rTests = await Axios.get(`http://localhost:4000/tests/getTest?active=${false}`)\n        console.log(rTests);\n        setRecievedTests(rTests)\n      } catch (error) {\n        alert(error)\n      }\n    };\n  }, []);\n\n  const responsive = {\n    superLargeDesktop: {\n      // the naming can be any, depends on you.\n      breakpoint: { max: 4000, min: 3000 },\n      items: 5,\n    },\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 4,\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 2,\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 1,\n    },\n  };\n\n  const router: NextRouter = useRouter();\n\n  const handleAddTestClick = () => {\n    alert(\"Test addition should be happening right about now.\");\n    router.push(`/TMS/create_test`);\n  };\n\n  return (\n    <div className={styles.ActiveTestsContainer}>\n      <h1>Active tests</h1>\n      <Carousel\n        responsive={responsive}\n        ssr={true}\n        className={styles.Carousel}\n        showDots={true}\n        dotListClass={styles.customDotListStyle}\n      >\n        {addATest(handleAddTestClick)}\n      </Carousel>\n    </div>\n  );\n};\n\nexport default ActiveTests;\nfunction addATest(handleAddTestClick: () => void) {\n  return (\n    <div\n      onClick={handleAddTestClick}\n      id=\"AddTest\"\n      className={styles.AddTestCard}\n    >\n      <span>+</span>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}