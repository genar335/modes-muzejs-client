{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/LangBtnController.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport compStyle from \"./styles/LangBtnController.module.scss\";\n\nvar LangBtnController = function LangBtnController(props) {\n  _s();\n\n  var _useState = useState(),\n      activeBtnPosition = _useState[0],\n      setActiveBtnPosition = _useState[1];\n\n  var _useState2 = useState([]),\n      flatBtns = _useState2[0],\n      setFlatBtns = _useState2[1];\n\n  var forceUpdate = React.useReducer(function () {\n    return {};\n  }, {})[1];\n\n  if (flatBtns.lenght !== props.BtnArray.length) {}\n\n  function activeBtnSwitcher(Btns) {\n    setActiveBtnPosition(flatBtns.indexOf(true));\n    flatBtns.pop();\n\n    if (activeBtnPosition == flatBtns.length) {\n      flatBtns.unshift(true);\n    } else {\n      flatBtns.unshift(false);\n    }\n\n    console.log(flatBtns, \"after manipulation\");\n    Btns.forEach(function (btn, index) {\n      return btn[1] = flatBtns[index];\n    });\n    forceUpdate();\n  }\n\n  var _useState3 = useState(props.active),\n      activeBtn = _useState3[0],\n      setActiveBtn = _useState3[1];\n  /**\n   * Sets currently active button.\n   * @param id of a button\n   */\n\n\n  var activeBtnSetter = function activeBtnSetter(id) {\n    return setActiveBtn(id);\n  }; // * Grabbing arrow in the modal which selects next element.\n  // * Assings a click listener to the grabbed element.\n\n\n  var arrowBtn;\n  useEffect(function () {\n    var _arrowBtn;\n\n    console.log(document.getElementById(\"arrowButton\"), \"found it\");\n    arrowBtn = document.getElementById(\"arrowButton\");\n    (_arrowBtn = arrowBtn) === null || _arrowBtn === void 0 ? void 0 : _arrowBtn.addEventListener(\"click\", handleArrowClick);\n    return function () {\n      var _arrowBtn2;\n\n      return (_arrowBtn2 = arrowBtn) === null || _arrowBtn2 === void 0 ? void 0 : _arrowBtn2.removeEventListener(\"click\", handleArrowClick);\n    };\n  }); // * Cleans other buttons from the pressed class.\n\n  useEffect(function () {\n    Btns.forEach(function (button) {\n      console.log(button[0].props.btnID);\n\n      if (button[0].props.btnID !== activeBtn) {\n        button[1] = false;\n      }\n    });\n  }, []);\n  return __jsx(\"div\", {\n    className: compStyle.LangSelect,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, Btns.map(function (ele) {\n    return ele;\n  }));\n};\n\n_s(LangBtnController, \"BeNr1hEMw6Uret9Tdz8WRaCZl+0=\");\n\n_c = LangBtnController;\nexport default LangBtnController;\n\nvar _c;\n\n$RefreshReg$(_c, \"LangBtnController\");","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/LangBtnController.tsx"],"names":["React","useEffect","useState","compStyle","LangBtnController","props","activeBtnPosition","setActiveBtnPosition","flatBtns","setFlatBtns","forceUpdate","useReducer","lenght","BtnArray","length","activeBtnSwitcher","Btns","indexOf","pop","unshift","console","log","forEach","btn","index","active","activeBtn","setActiveBtn","activeBtnSetter","id","arrowBtn","document","getElementById","addEventListener","handleArrowClick","removeEventListener","button","btnID","LangSelect","map","ele"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport LanguageBtn from \"./LanguageBtn\";\nimport compStyle from \"./styles/LangBtnController.module.scss\";\n\nconst LangBtnController = (props) => {\n  type TBtnArrayWithPressedState = {\n    btns: [JSX.Element, boolean];\n  };\n\n  const [activeBtnPosition, setActiveBtnPosition] = useState<Number>();\n  const [flatBtns, setFlatBtns] = useState<Array<boolean>>([]);\n  const forceUpdate = React.useReducer(() => ({}), {})[1] as () => void;\n\n  if (flatBtns.lenght !== props.BtnArray.length) {\n    \n  }\n\n  function activeBtnSwitcher(Btns: { btns: [JSX.Element, boolean] }[]) {\n    setActiveBtnPosition(flatBtns.indexOf(true));\n    flatBtns.pop();\n    if (activeBtnPosition == flatBtns.length) {\n      flatBtns.unshift(true);\n    } else {\n      flatBtns.unshift(false);\n    }\n    console.log(flatBtns, \"after manipulation\");\n    Btns.forEach((btn, index) => (btn[1] = flatBtns[index]));\n    forceUpdate();\n  }\n\n  const [activeBtn, setActiveBtn] = useState<string>(props.active);\n  /**\n   * Sets currently active button.\n   * @param id of a button\n   */\n  const activeBtnSetter = (id: string) => setActiveBtn(id);\n\n  // * Grabbing arrow in the modal which selects next element.\n  // * Assings a click listener to the grabbed element.\n  let arrowBtn: HTMLElement | null;\n  useEffect(() => {\n    console.log(document.getElementById(\"arrowButton\"), \"found it\");\n    arrowBtn = document.getElementById(\"arrowButton\");\n    arrowBtn?.addEventListener(\"click\", handleArrowClick);\n    return () => arrowBtn?.removeEventListener(\"click\", handleArrowClick);\n  });\n\n  // * Cleans other buttons from the pressed class.\n  useEffect(() => {\n    Btns.forEach((button) => {\n      console.log(button[0].props.btnID);\n      if (button[0].props.btnID !== activeBtn) {\n        button[1] = false;\n      }\n    });\n  }, []);\n\n  return (\n    <div className={compStyle.LangSelect}>{Btns.map((ele: any) => ele)}</div>\n  );\n};\n\nexport default LangBtnController;\n"]},"metadata":{},"sourceType":"module"}