{"ast":null,"code":"var _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/PagesController.tsx\";\nvar __jsx = React.createElement;\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useEmblaCarousel } from \"embla-carousel/react\";\nimport FMLogo from \"./FMlogo\"; // import \"react-multi-carousel/lib/styles.css\";\n\nimport compStyle from \"./styles/PagesController.module.scss\";\n\nconst PagesController = props => {\n  const {\n    0: pagesAmount,\n    1: setPagesAmount\n  } = useState([...Array(props.currentPages).keys()]);\n  useEffect(() => {\n    setPagesAmount([...Array(props.currentPages).keys()]); // if (didMountRef.current) {\n    //   console.log(\"component mounted\");\n    // } else {\n    //   console.log(\"componenet updated\");\n    // }\n  }, [props.currentPages]); //* Effect for setting the border to the first page when there are no other pages.\n\n  useEffect(() => {\n    if (document.getElementsByClassName(compStyle.Page).length <= 1) {\n      var _document$getElementB;\n\n      (_document$getElementB = document.getElementById(\"0\")) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.classList.add(compStyle.Selected);\n    }\n  });\n  const didMountRef = useRef();\n\n  const CustomRightArrow = (_ref) => {\n    let {\n      onClick\n    } = _ref,\n        rest = _objectWithoutProperties(_ref, [\"onClick\"]);\n\n    const {\n      onMove,\n      carouselState: {\n        currentSlide,\n        deviceType\n      }\n    } = rest; // onMove means if dragging or swiping in progress.\n\n    return __jsx(\"button\", {\n      className: compStyle.carRightArrow,\n      onClick: () => onClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, Arrow());\n  };\n\n  const CustomLeftArrow = (_ref2) => {\n    let {\n      onClick\n    } = _ref2,\n        rest = _objectWithoutProperties(_ref2, [\"onClick\"]);\n\n    const {\n      onMove,\n      carouselState: {\n        currentSlide,\n        deviceType\n      }\n    } = rest;\n    return __jsx(\"button\", {\n      onClick: () => onClick(),\n      className: compStyle.carLeftArrow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, Arrow());\n  };\n\n  const handlePageClick = (e, indexOfActivePage) => {\n    console.log(\"clicked on a page\", e.currentTarget.id);\n    const pagesArray = getAllPages();\n    setActivePage(pagesArray, indexOfActivePage, props);\n  };\n\n  const viewportCss = {\n    overflow: \"hidden\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  };\n  const containerCss = {\n    display: \"flex\",\n    justifyContent: \"center\",\n    // height: \"100%\",\n    alignItems: \"center\",\n    height: \"100%\"\n  };\n  const slideCss = {\n    position: \"relative\",\n    // minWidth: \"100%\",\n    background: \"rgb(4, 10, 23)\"\n  };\n  const [emblaRef, embla] = useEmblaCarousel({\n    loop: false,\n    slidesToScroll: 2,\n    draggable: false\n  });\n  const scrollPrev = useCallback(() => embla && embla.scrollPrev(), [embla]);\n  const scrollNext = useCallback(() => embla && embla.scrollNext(), [embla]);\n  return __jsx(\"div\", {\n    className: compStyle.Wrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: compStyle.BGContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    className: compStyle.BtnPrev,\n    onClick: scrollPrev,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, Arrow()), __jsx(\"div\", {\n    style: viewportCss,\n    ref: emblaRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: containerCss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, pagesAmount.map(page => {\n    return __jsx(\"div\", {\n      key: page,\n      index: page,\n      id: String(page),\n      onClick: e => handlePageClick(e, page) // className={`${compStyle.Page}`}\n      ,\n      style: slideCss,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }\n    }, __jsx(FMLogo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, page + 1)));\n  }))), __jsx(\"button\", {\n    className: compStyle.BtnNext,\n    onClick: scrollNext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, Arrow())));\n};\n\nconst Arrow = () => __jsx(\"svg\", {\n  width: \"15\",\n  height: \"26\",\n  viewBox: \"0 0 15 26\",\n  fill: \"none\",\n  xmlns: \"http://www.w3.org/2000/svg\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 3\n  }\n}, __jsx(\"path\", {\n  d: \"M2 24L13 13L2 2\",\n  stroke: \"#2F4858\",\n  \"stroke-width\": \"3\",\n  \"stroke-linecap\": \"round\",\n  \"stroke-linejoin\": \"round\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }\n}));\n\nexport default PagesController;\n\nfunction getAllPages() {\n  return Array.from(document.getElementsByClassName(compStyle.Page));\n}\n\nfunction setActivePage(pagesArray, indexOfActivePage, props) {\n  // console.log(\"setting the green border\");\n  pagesArray.forEach((page, index) => {\n    index === indexOfActivePage ? page.classList.add(compStyle.Selected) : page.classList.remove(compStyle.Selected);\n  });\n  props.setActivePage(indexOfActivePage);\n}","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/PagesController.tsx"],"names":["React","useCallback","useEffect","useRef","useState","useEmblaCarousel","FMLogo","compStyle","PagesController","props","pagesAmount","setPagesAmount","Array","currentPages","keys","document","getElementsByClassName","Page","length","getElementById","classList","add","Selected","didMountRef","CustomRightArrow","onClick","rest","onMove","carouselState","currentSlide","deviceType","carRightArrow","Arrow","CustomLeftArrow","carLeftArrow","handlePageClick","e","indexOfActivePage","console","log","currentTarget","id","pagesArray","getAllPages","setActivePage","viewportCss","overflow","justifyContent","alignItems","containerCss","display","height","slideCss","position","background","emblaRef","embla","loop","slidesToScroll","draggable","scrollPrev","scrollNext","Wrapper","BGContainer","BtnPrev","map","page","String","BtnNext","from","forEach","index","remove"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport emblaCarousel, { useEmblaCarousel } from \"embla-carousel/react\";\nimport { responsive } from \"./constants\";\nimport FMLogo from \"./FMlogo\";\n// import \"react-multi-carousel/lib/styles.css\";\n\nimport compStyle from \"./styles/PagesController.module.scss\";\nimport { __DirectiveLocation } from \"graphql\";\n\nconst PagesController = (props: {\n  activePage: number;\n  setActivePage: (index: number) => void;\n  currentPages: number;\n}) => {\n  const [pagesAmount, setPagesAmount] = useState<Array<number>>([\n    ...Array(props.currentPages).keys(),\n  ]);\n\n  useEffect(() => {\n    setPagesAmount([...Array(props.currentPages).keys()]);\n    // if (didMountRef.current) {\n    //   console.log(\"component mounted\");\n    // } else {\n    //   console.log(\"componenet updated\");\n    // }\n  }, [props.currentPages]);\n  //* Effect for setting the border to the first page when there are no other pages.\n  useEffect(() => {\n    if (document.getElementsByClassName(compStyle.Page).length <= 1) {\n      document.getElementById(\"0\")?.classList.add(compStyle.Selected);\n    }\n  });\n\n  const didMountRef = useRef();\n\n  const CustomRightArrow = ({ onClick, ...rest }) => {\n    const {\n      onMove,\n      carouselState: { currentSlide, deviceType },\n    } = rest;\n    // onMove means if dragging or swiping in progress.\n    return (\n      <button className={compStyle.carRightArrow} onClick={() => onClick()}>\n        {Arrow()}\n      </button>\n    );\n  };\n\n  const CustomLeftArrow = ({ onClick, ...rest }) => {\n    const {\n      onMove,\n      carouselState: { currentSlide, deviceType },\n    } = rest;\n    return (\n      <button onClick={() => onClick()} className={compStyle.carLeftArrow}>\n        {Arrow()}\n      </button>\n    );\n  };\n\n  const handlePageClick = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    indexOfActivePage: number\n  ) => {\n    console.log(\"clicked on a page\", e.currentTarget.id);\n    const pagesArray = getAllPages();\n    setActivePage(pagesArray, indexOfActivePage, props);\n  };\n\n  const viewportCss = {\n    overflow: \"hidden\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  };\n  const containerCss = {\n    display: \"flex\",\n    justifyContent: \"center\", // height: \"100%\",\n    alignItems: \"center\",\n    height: \"100%\",\n  };\n  const slideCss = {\n    position: \"relative\",\n    // minWidth: \"100%\",\n    background: \"rgb(4, 10, 23)\",\n  };\n\n  const [emblaRef, embla] = useEmblaCarousel({\n    loop: false,\n    slidesToScroll: 2,\n    draggable: false,\n  });\n\n  const scrollPrev = useCallback(() => embla && embla.scrollPrev(), [embla]);\n  const scrollNext = useCallback(() => embla && embla.scrollNext(), [embla]);\n\n  return (\n    <div className={compStyle.Wrapper}>\n      <div className={compStyle.BGContainer}>\n        {/* <Carousel\n          containerClass={compStyle.Carousel}\n          itemClass={compStyle.Item}\n          responsive={responsive}\n          customRightArrow={<CustomRightArrow />}\n          customLeftArrow={<CustomLeftArrow />}\n          showDots\n          // ssr\n        > */}\n\n        <button className={compStyle.BtnPrev} onClick={scrollPrev}>\n          {Arrow()}\n        </button>\n\n        <div style={viewportCss} ref={emblaRef}>\n          <div style={containerCss}>\n            {pagesAmount.map((page) => {\n              return (\n                <div\n                  key={page}\n                  index={page}\n                  id={String(page)}\n                  onClick={(e) => handlePageClick(e, page)}\n                  // className={`${compStyle.Page}`}\n                  style={slideCss}\n                >\n                  <div>\n                    <FMLogo />\n                    <span>{page + 1}</span>\n                  </div>\n                </div>\n              );\n            })}\n            {/* </Carousel> */}\n          </div>\n        </div>\n        <button className={compStyle.BtnNext} onClick={scrollNext}>\n          {Arrow()}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst Arrow = () => (\n  <svg\n    width=\"15\"\n    height=\"26\"\n    viewBox=\"0 0 15 26\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M2 24L13 13L2 2\"\n      stroke=\"#2F4858\"\n      stroke-width=\"3\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n);\n\nexport default PagesController;\n\nfunction getAllPages() {\n  return Array.from(document.getElementsByClassName(compStyle.Page));\n}\n\nfunction setActivePage(\n  pagesArray: Element[],\n  indexOfActivePage: number,\n  props: {\n    activePage: number;\n    setActivePage: (index: number) => void;\n    currentPages: number;\n  }\n) {\n  // console.log(\"setting the green border\");\n  pagesArray.forEach((page, index) => {\n    index === indexOfActivePage\n      ? page.classList.add(compStyle.Selected)\n      : page.classList.remove(compStyle.Selected);\n  });\n  props.setActivePage(indexOfActivePage);\n}\n"]},"metadata":{},"sourceType":"module"}