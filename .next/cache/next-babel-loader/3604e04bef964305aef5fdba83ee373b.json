{"ast":null,"code":"var _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/TestPreview.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport styles from \"../pages/styles/create_test.module.scss\";\nimport FMLogo from \"./FMlogo\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\n\nconst TestPreview = props => {\n  function handleTextAreaQuestionChange(event) {\n    // let tmpArray =\n    //   props.currentTestState[props.currentLanguage!].pages[props.activePage]\n    //     .QnAPairs;\n    // console.log(\"tmp\", tmpArray);\n    // tmpArray.forEach((ele) => console.log(ele));\n    console.log(props.currentTestState[props.currentLanguage].pages);\n  }\n\n  function questionRenderController(currentItem) {\n    switch (props.currentTestState.type) {\n      case \"TT\":\n        return __jsx(\"textarea\", {\n          id: String(currentItem),\n          onChange: handleTextAreaQuestionChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }\n        }, \" \");\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  const pageBody = () => {\n    return __jsx(\"div\", {\n      className: compStyles.pageBody,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, props.currentTestState[props.currentLanguage || \"ru\"].pages[props.activePage].QnAPairs.map((qnaPair, index) => __jsx(\"div\", {\n      className: compStyles.qnaPair,\n      id: String(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: compStyles.Question,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, questionRenderController(index)), __jsx(\"div\", {\n      className: compStyles.Answer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, \"Answer: \", qnaPair.answer))));\n  };\n\n  return __jsx(\"div\", {\n    className: styles.TestPreview,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, \"Page: \", props.activePage + 1), __jsx(\"div\", {\n    className: compStyles.TestBGContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, __jsx(FMLogo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), pageBody()));\n};\n\nexport default TestPreview;","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/TestPreview.tsx"],"names":["React","styles","FMLogo","compStyles","TestPreview","props","handleTextAreaQuestionChange","event","console","log","currentTestState","currentLanguage","pages","questionRenderController","currentItem","type","String","pageBody","activePage","QnAPairs","map","qnaPair","index","Question","Answer","answer","TestBGContainer"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAQA,OAAOC,MAAP,MAAmB,yCAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAKd;AACJ,WAASC,4BAAT,CACEC,KADF,EAEE;AACA;AACA;AACA;AACA;AACA;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,gBAAN,CAAuBL,KAAK,CAACM,eAA7B,EAA+CC,KAA3D;AACD;;AAED,WAASC,wBAAT,CAAkCC,WAAlC,EAAuD;AACrD,YAAQT,KAAK,CAACK,gBAAN,CAAuBK,IAA/B;AACE,WAAK,IAAL;AACE,eACE;AACE,UAAA,EAAE,EAAEC,MAAM,CAACF,WAAD,CADZ;AAEE,UAAA,QAAQ,EAAER,4BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIG,GAJH,CADF;AAQA;;AAEF;AACE;AAbJ;AAeD;;AACD,QAAMW,QAAQ,GAAG,MAAM;AACrB,WACE;AAAK,MAAA,SAAS,EAAEd,UAAU,CAACc,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGZ,KAAK,CAACK,gBAAN,CAAuBL,KAAK,CAACM,eAAN,IAAyB,IAAhD,EAAsDC,KAAtD,CACCP,KAAK,CAACa,UADP,EAECC,QAFD,CAEUC,GAFV,CAEc,CAACC,OAAD,EAAgBC,KAAhB,KACb;AAAK,MAAA,SAAS,EAAEnB,UAAU,CAACkB,OAA3B;AAAoC,MAAA,EAAE,EAAEL,MAAM,CAACM,KAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAEnB,UAAU,CAACoB,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGV,wBAAwB,CAACS,KAAD,CAD3B,CADF,EAIE;AAAK,MAAA,SAAS,EAAEnB,UAAU,CAACqB,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAA4CH,OAAO,CAACI,MAApD,CAJF,CAHD,CADH,CADF;AAcD,GAfD;;AAiBA,SACE;AAAK,IAAA,SAAS,EAAExB,MAAM,CAACG,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWC,KAAK,CAACa,UAAN,GAAmB,CAA9B,CADF,EAEE;AAAK,IAAA,SAAS,EAAEf,UAAU,CAACuB,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGT,QAAQ,EAFX,CAFF,CADF;AASD,CA7DD;;AA+DA,eAAeb,WAAf","sourcesContent":["import React from \"react\";\nimport {\n  IQnA,\n  IQnAPairs,\n  ITest,\n  TLangOption,\n  TTestTypes,\n} from \"../@types/test\";\nimport styles from \"../pages/styles/create_test.module.scss\";\nimport FMLogo from \"./FMlogo\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\n\nconst TestPreview = (props: {\n  activePage: number;\n  currentLanguage: TLangOption[\"value\"] | undefined;\n  currentTestState: ITest;\n  // saveChanges: (test: ITest) => void;\n}) => {\n  function handleTextAreaQuestionChange(\n    event: React.ChangeEvent<HTMLTextAreaElement>\n  ) {\n    // let tmpArray =\n    //   props.currentTestState[props.currentLanguage!].pages[props.activePage]\n    //     .QnAPairs;\n    // console.log(\"tmp\", tmpArray);\n    // tmpArray.forEach((ele) => console.log(ele));\n\n    console.log(props.currentTestState[props.currentLanguage!].pages);\n  }\n\n  function questionRenderController(currentItem: number) {\n    switch (props.currentTestState.type) {\n      case \"TT\":\n        return (\n          <textarea\n            id={String(currentItem)}\n            onChange={handleTextAreaQuestionChange}\n          >\n            {\" \"}\n          </textarea>\n        );\n        break;\n\n      default:\n        break;\n    }\n  }\n  const pageBody = () => {\n    return (\n      <div className={compStyles.pageBody}>\n        {props.currentTestState[props.currentLanguage || \"ru\"].pages[\n          props.activePage\n        ].QnAPairs.map((qnaPair: IQnA, index: number) => (\n          <div className={compStyles.qnaPair} id={String(index)}>\n            <div className={compStyles.Question}>\n              {questionRenderController(index)}\n            </div>\n            <div className={compStyles.Answer}>Answer: {qnaPair.answer}</div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div className={styles.TestPreview}>\n      <h3>Page: {props.activePage + 1}</h3>\n      <div className={compStyles.TestBGContainer}>\n        <FMLogo />\n        {pageBody()}\n      </div>\n    </div>\n  );\n};\n\nexport default TestPreview;\n"]},"metadata":{},"sourceType":"module"}