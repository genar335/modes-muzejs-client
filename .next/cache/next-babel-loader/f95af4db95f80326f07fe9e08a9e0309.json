{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/PhotoManager.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useRef, useState } from \"react\";\nimport stylish from \"./styles/PhotoManager.module.scss\";\nimport uploadIcon from \"../GAssets/upload_data.svg\";\nimport Carousel from \"react-multi-carousel\";\nimport { responsive } from \"./constants\";\nimport Axios from \"axios\";\n\nvar PhotoManager = function PhotoManager(props) {\n  _s();\n\n  var tmpPage = props.pageToRender;\n\n  function readUploadedIMG(_x) {\n    return _readUploadedIMG.apply(this, arguments);\n  }\n\n  function _readUploadedIMG() {\n    _readUploadedIMG = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(inputFile) {\n      var tmpFileReader;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              tmpFileReader = new FileReader();\n              return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                tmpFileReader.onerror = function () {\n                  tmpFileReader.abort();\n                  reject(new DOMException(\"Problem parsing input file.\"));\n                };\n\n                tmpFileReader.onload = function () {\n                  resolve(tmpFileReader.result);\n                };\n\n                tmpFileReader.readAsDataURL(inputFile);\n              }));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _readUploadedIMG.apply(this, arguments);\n  }\n\n  var _useState = useState([]),\n      upIMGs = _useState[0],\n      setUpIMGs = _useState[1];\n\n  var _useState2 = useState([]),\n      recievedIMGLocations = _useState2[0],\n      setRecievedIMGLocation = _useState2[1];\n  /**\n   * Loads the file from the clients computer into the browser and saves the array into the state.\n   * @param event\n   */\n\n\n  function handleFileInput(_x2) {\n    return _handleFileInput.apply(this, arguments);\n  }\n\n  function _handleFileInput() {\n    _handleFileInput = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event) {\n      var tmp, fileIndex, _fileInput$current$fi, fileContents;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              event.preventDefault();\n              tmp = [];\n\n              if (!(fileInput.current !== null && fileInput.current.files !== null)) {\n                _context2.next = 19;\n                break;\n              }\n\n              fileIndex = 0;\n\n            case 4:\n              if (!(fileIndex < ((_fileInput$current$fi = fileInput.current.files) === null || _fileInput$current$fi === void 0 ? void 0 : _fileInput$current$fi.length))) {\n                _context2.next = 18;\n                break;\n              }\n\n              _context2.prev = 5;\n              _context2.next = 8;\n              return readUploadedIMG(fileInput.current.files[fileIndex]);\n\n            case 8:\n              fileContents = _context2.sent;\n              tmp.push(fileContents); // setUploadedImg(fileContents);\n\n              _context2.next = 15;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](5);\n              alert(_context2.t0);\n\n            case 15:\n              fileIndex++;\n              _context2.next = 4;\n              break;\n\n            case 18:\n              setUpIMGs(tmp);\n\n            case 19:\n              sendTheDataToTheServer(upIMGs, setRecievedIMGLocation);\n\n            case 20:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[5, 12]]);\n    }));\n    return _handleFileInput.apply(this, arguments);\n  }\n\n  var fileInput = useRef(null);\n\n  var CustomRightArrow = function CustomRightArrow(_ref) {\n    var _onClick = _ref.onClick,\n        rest = _objectWithoutProperties(_ref, [\"onClick\"]);\n\n    var onMove = rest.onMove,\n        _rest$carouselState = rest.carouselState,\n        currentSlide = _rest$carouselState.currentSlide,\n        deviceType = _rest$carouselState.deviceType; // onMove means if dragging or swiping in progress.\n\n    return __jsx(\"button\", {\n      className: stylish.carRightArrow,\n      onClick: function onClick() {\n        return _onClick();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }, Arrow());\n  };\n\n  var CustomLeftArrow = function CustomLeftArrow(_ref2) {\n    var _onClick2 = _ref2.onClick,\n        rest = _objectWithoutProperties(_ref2, [\"onClick\"]);\n\n    var onMove = rest.onMove,\n        _rest$carouselState2 = rest.carouselState,\n        currentSlide = _rest$carouselState2.currentSlide,\n        deviceType = _rest$carouselState2.deviceType;\n    return __jsx(\"button\", {\n      onClick: function onClick() {\n        return _onClick2();\n      },\n      className: stylish.carLeftArrow,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, Arrow());\n  };\n  /**\n   * Sets the image for the card that has been clicked inside of the test. preview component, as well as saves the changese to state of the current page.\n   * @param event Event for a mouse click.\n   */\n\n\n  var handleIMGClick = function handleIMGClick(event) {\n    if (props.currentCard !== null || props.currentCard !== undefined) {\n      var _props$currentCard;\n\n      //* console.log(\"hello from\", event.currentTarget.id);\n      console.log((_props$currentCard = props.currentCard) === null || _props$currentCard === void 0 ? void 0 : _props$currentCard.current, \"current card\");\n      var tmp = props.currentCard;\n      tmp.current.src = event.currentTarget.src; //* console.log(tmp?.current.id);\n\n      var cardData = tmp === null || tmp === void 0 ? void 0 : tmp.current.id.split(\"_\"); //* console.log(cardData);\n\n      if (tmpPage) {\n        tmpPage[cardData[1]][cardData[0]] = String(tmp === null || tmp === void 0 ? void 0 : tmp.current.src);\n      } //* console.log(tmpPage);\n      // props.setCurrentCard(tmp);\n      //! Applying a border\n\n\n      event.currentTarget.classList.toggle(stylish.selectedIMG); //!\n\n      props.saveChanges(tmpPage);\n    }\n  };\n\n  useEffect(function () {\n    var _props$currentCard2, _props$currentCard2$c, _props$currentCard3;\n\n    console.log(\"Displayed card\", (_props$currentCard2 = props.currentCard) === null || _props$currentCard2 === void 0 ? void 0 : (_props$currentCard2$c = _props$currentCard2.current) === null || _props$currentCard2$c === void 0 ? void 0 : _props$currentCard2$c.src);\n    console.log(\"Upper image\", upperIMG);\n    console.log(\"Lower image\", lowerIMG);\n\n    if ((_props$currentCard3 = props.currentCard) === null || _props$currentCard3 === void 0 ? void 0 : _props$currentCard3.current.src.match(/uploads/)) {\n      console.log(\"It has an image\");\n      renderedImagesArray.forEach(function (imgDiv) {\n        // console.log(img.props.children);\n        imgDiv.props.children.forEach(function (child) {\n          var _child$props, _child$props2, _props$currentCard4, _props$currentCard4$c;\n\n          console.log((_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.src);\n\n          if (((_child$props2 = child.props) === null || _child$props2 === void 0 ? void 0 : _child$props2.src) == ((_props$currentCard4 = props.currentCard) === null || _props$currentCard4 === void 0 ? void 0 : (_props$currentCard4$c = _props$currentCard4.current) === null || _props$currentCard4$c === void 0 ? void 0 : _props$currentCard4$c.src)) {\n            console.log(\"sources of current cad an img are the same\");\n            console.log(child.props.classList);\n          }\n        });\n      });\n    }\n  }, [props.displayed]);\n  var upperIMG = useRef(null);\n  var lowerIMG = useRef(null);\n  /**\n   * Renders images in groups of two.\n   * @param recievedIMGLocations An array of strings representing the location of images on the server.\n   */\n\n  var renderedImagesArray = [];\n\n  function renderSelectedImages(recievedIMGLocations) {\n    console.log(renderedImagesArray.length);\n\n    if (recievedIMGLocations.length !== 0) {\n      for (var i = 0; i < recievedIMGLocations.length; i++) {\n        renderedImagesArray.push(__jsx(\"div\", {\n          className: stylish.imgContainer,\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 11\n          }\n        }, __jsx(\"img\", {\n          key: i,\n          id: \"img_\".concat(i),\n          className: \"\".concat(stylish.tmpIMG),\n          src: recievedIMGLocations[i],\n          alt: \"Here be the image\",\n          onClick: handleIMGClick,\n          ref: upperIMG,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }\n        }), recievedIMGLocations[i + 1] != undefined && __jsx(\"img\", {\n          key: i + 1,\n          id: \"img_\".concat(i + 1),\n          src: recievedIMGLocations[i + 1],\n          alt: \"here be the second one\",\n          className: \"\".concat(stylish.tmpIMG),\n          onClick: handleIMGClick,\n          ref: lowerIMG,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }\n        })));\n        i++; // console.log(renderedImagesArray[i], \"Jeloo there\");\n      }\n\n      console.log(renderedImagesArray);\n      return renderedImagesArray.map(function (el) {\n        return el;\n      });\n    }\n  }\n\n  return __jsx(\"div\", {\n    className: \"\".concat(stylish.PhotosContainer, \" \").concat(!props.displayed ? undefined : stylish.Hidden),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    onClick: function onClick(e) {\n      return props.togglePhotoManager(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }\n  }, \"\\u274C\"), __jsx(\"div\", {\n    className: stylish.Contents,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: stylish.headerIconContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 11\n    }\n  }, \"Uploaded photos\"), __jsx(\"label\", {\n    htmlFor: \"photoUpload\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"photoUpload\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }\n  }), __jsx(\"img\", {\n    src: uploadIcon,\n    alt: \"Upload\",\n    className: stylish.uploadIcon,\n    onClick: function onClick(e) {\n      return console.log(e);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 13\n    }\n  }))), __jsx(\"div\", {\n    className: stylish.IMGPreview,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleFileInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, \"Upload image\"), __jsx(\"input\", {\n    name: \"testio\",\n    type: \"file\",\n    multiple: true,\n    accept: \"image/*\",\n    ref: fileInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, \"Placeholder for image upload\"), __jsx(Carousel, {\n    containerClass: stylish.Carousel,\n    itemClass: stylish.Item,\n    responsive: responsive,\n    showDots: true,\n    sliderClass: stylish.Slider,\n    customRightArrow: __jsx(CustomRightArrow, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 33\n      }\n    }),\n    customLeftArrow: __jsx(CustomLeftArrow, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 32\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, recievedIMGLocations.length !== 0 && renderSelectedImages(recievedIMGLocations))))));\n};\n\n_s(PhotoManager, \"iIZFmhx4Ja7ks1c6iytQYl6aP/k=\");\n\n_c = PhotoManager;\nexport default PhotoManager;\n\nvar Arrow = function Arrow() {\n  return __jsx(\"svg\", {\n    width: \"15\",\n    height: \"26\",\n    viewBox: \"0 0 15 26\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 3\n    }\n  }, __jsx(\"path\", {\n    d: \"M2 24L13 13L2 2\",\n    stroke: \"#2F4858\",\n    \"stroke-width\": \"3\",\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 5\n    }\n  }));\n};\n/**\n * Sends an array of files to the server to be saved there.\n * @param upIMGs Array of uploaded images to be sent to the server.\n * @param setRecievedIMGLocation Array of paths to the images on the server. saved to a state.\n */\n\n\n_c2 = Arrow;\n\nfunction sendTheDataToTheServer(upIMGs, setRecievedIMGLocation) {\n  Axios.post(\"http://localhost:4000/tests/testIMG\", upIMGs).then(function (response) {\n    console.log(response.data);\n    setRecievedIMGLocation(response.data);\n  })[\"catch\"](function (error) {\n    console.log(error);\n  });\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PhotoManager\");\n$RefreshReg$(_c2, \"Arrow\");","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/PhotoManager.tsx"],"names":["React","useEffect","useRef","useState","stylish","uploadIcon","Carousel","responsive","Axios","PhotoManager","props","tmpPage","pageToRender","readUploadedIMG","inputFile","tmpFileReader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","result","readAsDataURL","upIMGs","setUpIMGs","recievedIMGLocations","setRecievedIMGLocation","handleFileInput","event","preventDefault","tmp","fileInput","current","files","fileIndex","length","fileContents","push","alert","sendTheDataToTheServer","CustomRightArrow","onClick","rest","onMove","carouselState","currentSlide","deviceType","carRightArrow","Arrow","CustomLeftArrow","carLeftArrow","handleIMGClick","currentCard","undefined","console","log","src","currentTarget","cardData","id","split","String","classList","toggle","selectedIMG","saveChanges","upperIMG","lowerIMG","match","renderedImagesArray","forEach","imgDiv","children","child","displayed","renderSelectedImages","i","imgContainer","tmpIMG","map","el","PhotosContainer","Hidden","e","togglePhotoManager","Contents","headerIconContainer","IMGPreview","Item","Slider","post","then","response","data","error"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport styles from \"../pages/styles/create_test.module.scss\";\nimport stylish from \"./styles/PhotoManager.module.scss\";\nimport uploadIcon from \"../GAssets/upload_data.svg\";\nimport Carousel from \"react-multi-carousel\";\nimport { responsive } from \"./constants\";\nimport Axios from \"axios\";\nimport { IQnA } from \"../@types/test\";\n\nconst PhotoManager = (props: {\n  displayed: boolean;\n  togglePhotoManager: (toggle: boolean, cardID: string) => void;\n  currentCard: React.MutableRefObject<null> | undefined;\n  setCurrentCard: React.Dispatch<\n    React.SetStateAction<React.MutableRefObject<null> | undefined>\n  >;\n  pageToRender: IQnA[];\n  saveChanges: (page: any) => void;\n}) => {\n  let tmpPage = props.pageToRender;\n  async function readUploadedIMG(inputFile: Blob) {\n    const tmpFileReader = new FileReader();\n\n    return new Promise((resolve, reject) => {\n      tmpFileReader.onerror = () => {\n        tmpFileReader.abort();\n        reject(new DOMException(\"Problem parsing input file.\"));\n      };\n\n      tmpFileReader.onload = () => {\n        resolve(tmpFileReader.result);\n      };\n      tmpFileReader.readAsDataURL(inputFile);\n    });\n  }\n\n  const [upIMGs, setUpIMGs] = useState<Array<any>>([]);\n\n  const [recievedIMGLocations, setRecievedIMGLocation] = useState<\n    Array<string>\n  >([]);\n\n  /**\n   * Loads the file from the clients computer into the browser and saves the array into the state.\n   * @param event\n   */\n  async function handleFileInput(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    let tmp = [];\n    if (fileInput.current !== null && fileInput.current.files !== null) {\n      for (\n        let fileIndex = 0;\n        fileIndex < fileInput.current.files?.length;\n        fileIndex++\n      ) {\n        try {\n          const fileContents = await readUploadedIMG(\n            fileInput.current.files[fileIndex]\n          );\n          tmp.push(fileContents);\n          // setUploadedImg(fileContents);\n        } catch (error) {\n          alert(error);\n        }\n      }\n      setUpIMGs(tmp);\n    }\n    sendTheDataToTheServer(upIMGs, setRecievedIMGLocation);\n  }\n  const fileInput = useRef<HTMLInputElement>(null);\n\n  const CustomRightArrow = ({ onClick, ...rest }) => {\n    const {\n      onMove,\n      carouselState: { currentSlide, deviceType },\n    } = rest;\n    // onMove means if dragging or swiping in progress.\n    return (\n      <button className={stylish.carRightArrow} onClick={() => onClick()}>\n        {Arrow()}\n      </button>\n    );\n  };\n\n  const CustomLeftArrow = ({ onClick, ...rest }) => {\n    const {\n      onMove,\n      carouselState: { currentSlide, deviceType },\n    } = rest;\n    return (\n      <button onClick={() => onClick()} className={stylish.carLeftArrow}>\n        {Arrow()}\n      </button>\n    );\n  };\n\n  /**\n   * Sets the image for the card that has been clicked inside of the test. preview component, as well as saves the changese to state of the current page.\n   * @param event Event for a mouse click.\n   */\n  const handleIMGClick = (\n    event: React.MouseEvent<HTMLImageElement, MouseEvent>\n  ) => {\n    if (props.currentCard !== null || props.currentCard !== undefined) {\n      //* console.log(\"hello from\", event.currentTarget.id);\n      console.log(props.currentCard?.current, \"current card\");\n\n      let tmp = props.currentCard;\n      tmp!.current!.src = event.currentTarget.src;\n      //* console.log(tmp?.current.id);\n      const cardData = tmp?.current.id.split(\"_\");\n      //* console.log(cardData);\n      if (tmpPage) {\n        tmpPage[cardData[1]][cardData[0]] = String(tmp?.current.src);\n      }\n      //* console.log(tmpPage);\n      // props.setCurrentCard(tmp);\n\n      //! Applying a border\n      event.currentTarget.classList.toggle(stylish.selectedIMG);\n      //!\n      props.saveChanges(tmpPage);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Displayed card\", props.currentCard?.current?.src);\n    console.log(\"Upper image\", upperIMG);\n    console.log(\"Lower image\", lowerIMG);\n    if (props.currentCard?.current.src.match(/uploads/)) {\n      console.log(\"It has an image\");\n      renderedImagesArray.forEach((imgDiv: JSX.Element) => {\n        // console.log(img.props.children);\n        imgDiv.props.children.forEach((child: JSX.Element) => {\n          console.log(child.props?.src);\n          if (child.props?.src == props.currentCard?.current?.src) {\n            console.log(\"sources of current cad an img are the same\");\n            console.log(child.props.classList);\n          }\n        });\n      });\n    }\n  }, [props.displayed]);\n\n  const upperIMG = useRef(null);\n  const lowerIMG = useRef(null);\n\n  /**\n   * Renders images in groups of two.\n   * @param recievedIMGLocations An array of strings representing the location of images on the server.\n   */\n  let renderedImagesArray: JSX.Element[] = [];\n  function renderSelectedImages(recievedIMGLocations: string[]): any {\n    console.log(renderedImagesArray.length);\n    if (recievedIMGLocations.length !== 0) {\n      for (let i = 0; i < recievedIMGLocations.length; i++) {\n        renderedImagesArray.push(\n          <div className={stylish.imgContainer} key={i}>\n            <img\n              key={i}\n              id={`img_${i}`}\n              className={`${stylish.tmpIMG}`}\n              src={recievedIMGLocations[i]}\n              alt=\"Here be the image\"\n              onClick={handleIMGClick}\n              ref={upperIMG}\n            />\n            {/* Conditionlay render the second image */}\n            {recievedIMGLocations[i + 1] != undefined && (\n              <img\n                key={i + 1}\n                id={`img_${i + 1}`}\n                src={recievedIMGLocations[i + 1]}\n                alt=\"here be the second one\"\n                className={`${stylish.tmpIMG}`}\n                onClick={handleIMGClick}\n                ref={lowerIMG}\n              />\n            )}\n          </div>\n        );\n        i++;\n        // console.log(renderedImagesArray[i], \"Jeloo there\");\n      }\n      console.log(renderedImagesArray);\n      return renderedImagesArray.map((el) => el);\n    }\n  }\n\n  return (\n    <div\n      className={`${stylish.PhotosContainer} ${\n        !props.displayed ? undefined : stylish.Hidden\n      }`}\n    >\n      <span onClick={(e) => props.togglePhotoManager(true)}>❌</span>\n      <div className={stylish.Contents}>\n        <div className={stylish.headerIconContainer}>\n          <h3>Uploaded photos</h3>\n          <label htmlFor=\"photoUpload\">\n            <input type=\"file\" name=\"photoUpload\" />\n            <img\n              src={uploadIcon}\n              alt=\"Upload\"\n              className={stylish.uploadIcon}\n              onClick={(e) => console.log(e)}\n            />\n          </label>\n        </div>\n        <div className={stylish.IMGPreview}>\n          <form onSubmit={handleFileInput}>\n            <label>Upload image</label>\n            <input\n              name=\"testio\"\n              type=\"file\"\n              multiple\n              accept=\"image/*\"\n              ref={fileInput}\n            />\n            <input type=\"submit\" value=\"Submit\" />\n            <p>Placeholder for image upload</p>\n            <Carousel\n              containerClass={stylish.Carousel}\n              itemClass={stylish.Item}\n              responsive={responsive}\n              showDots\n              sliderClass={stylish.Slider}\n              customRightArrow={<CustomRightArrow />}\n              customLeftArrow={<CustomLeftArrow />}\n            >\n              {recievedIMGLocations.length !== 0 &&\n                renderSelectedImages(recievedIMGLocations)}\n            </Carousel>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PhotoManager;\nconst Arrow = () => (\n  <svg\n    width=\"15\"\n    height=\"26\"\n    viewBox=\"0 0 15 26\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M2 24L13 13L2 2\"\n      stroke=\"#2F4858\"\n      stroke-width=\"3\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n);\n\n/**\n * Sends an array of files to the server to be saved there.\n * @param upIMGs Array of uploaded images to be sent to the server.\n * @param setRecievedIMGLocation Array of paths to the images on the server. saved to a state.\n */\nfunction sendTheDataToTheServer(\n  upIMGs: any[],\n  setRecievedIMGLocation: React.Dispatch<React.SetStateAction<string[]>>\n) {\n  Axios.post(\"http://localhost:4000/tests/testIMG\", upIMGs)\n    .then(function (response) {\n      console.log(response.data);\n      setRecievedIMGLocation(response.data);\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n}\n"]},"metadata":{},"sourceType":"module"}