{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/PagesController.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { useEmblaCarousel } from \"embla-carousel/react\";\nimport FMLogo from \"./FMlogo\"; // import \"react-multi-carousel/lib/styles.css\";\n\nimport compStyle from \"./styles/PagesController.module.scss\";\n\nvar PagesController = function PagesController(props) {\n  _s();\n\n  var _useState = useState(_toConsumableArray(Array(props.currentPages).keys())),\n      pagesAmount = _useState[0],\n      setPagesAmount = _useState[1];\n\n  useEffect(function () {\n    setPagesAmount(_toConsumableArray(Array(props.currentPages).keys())); // if (didMountRef.current) {\n    //   console.log(\"component mounted\");\n    // } else {\n    //   console.log(\"componenet updated\");\n    // }\n  }, [props.currentPages]); //* Effect for setting the border to the first page when there are no other pages.\n\n  useEffect(function () {\n    if (document.getElementsByClassName(compStyle.Page).length <= 1) {\n      var _document$getElementB;\n\n      (_document$getElementB = document.getElementById(\"0\")) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.classList.add(compStyle.Selected);\n    }\n  });\n  var didMountRef = useRef();\n\n  var CustomRightArrow = function CustomRightArrow(_ref) {\n    var _onClick = _ref.onClick,\n        rest = _objectWithoutProperties(_ref, [\"onClick\"]);\n\n    var onMove = rest.onMove,\n        _rest$carouselState = rest.carouselState,\n        currentSlide = _rest$carouselState.currentSlide,\n        deviceType = _rest$carouselState.deviceType; // onMove means if dragging or swiping in progress.\n\n    return __jsx(\"button\", {\n      className: compStyle.carRightArrow,\n      onClick: function onClick() {\n        return _onClick();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, Arrow());\n  };\n\n  var CustomLeftArrow = function CustomLeftArrow(_ref2) {\n    var _onClick2 = _ref2.onClick,\n        rest = _objectWithoutProperties(_ref2, [\"onClick\"]);\n\n    var onMove = rest.onMove,\n        _rest$carouselState2 = rest.carouselState,\n        currentSlide = _rest$carouselState2.currentSlide,\n        deviceType = _rest$carouselState2.deviceType;\n    return __jsx(\"button\", {\n      onClick: function onClick() {\n        return _onClick2();\n      },\n      className: compStyle.carLeftArrow,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, Arrow());\n  };\n\n  var handlePageClick = function handlePageClick(e, indexOfActivePage) {\n    console.log(\"clicked on a page\", e.currentTarget.id);\n    var pagesArray = getAllPages();\n    setActivePage(pagesArray, indexOfActivePage, props);\n  };\n\n  var viewportCss = {\n    overflow: \"hidden\"\n  };\n  var containerCss = {\n    display: \"flex\"\n  };\n  var slideCss = {\n    position: \"relative\" // minWidth: \"100%\",\n\n  };\n\n  var _useEmblaCarousel = useEmblaCarousel({\n    loop: false,\n    slidesToScroll: 2,\n    draggable: false\n  }),\n      _useEmblaCarousel2 = _slicedToArray(_useEmblaCarousel, 2),\n      emblaRef = _useEmblaCarousel2[0],\n      embla = _useEmblaCarousel2[1];\n\n  var scrollPrev = useCallback(function () {\n    return embla && embla.scrollPrev();\n  }, [embla]);\n  var scrollNext = useCallback(function () {\n    return embla && embla.scrollNext();\n  }, [embla]);\n  return __jsx(\"div\", {\n    className: compStyle.Wrapper,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: compStyle.BGContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    style: viewportCss,\n    ref: emblaRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    style: containerCss,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, pagesAmount.map(function (page) {\n    return __jsx(\"div\", {\n      key: page,\n      index: page,\n      id: String(page),\n      onClick: function onClick(e) {\n        return handlePageClick(e, page);\n      } // className={`${compStyle.Page}`}\n      ,\n      style: slideCss,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 19\n      }\n    }, __jsx(FMLogo, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }), __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, page + 1)));\n  }))), __jsx(\"button\", {\n    className: compStyle.BtnNext,\n    onClick: scrollNext,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, Arrow()), __jsx(\"button\", {\n    onClick: scrollPrev,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, Arrow())));\n};\n\n_s(PagesController, \"5WvT3VJU1r3R2mV+IYeP46r09+A=\", false, function () {\n  return [useEmblaCarousel];\n});\n\n_c = PagesController;\n\nvar Arrow = function Arrow() {\n  return __jsx(\"svg\", {\n    width: \"15\",\n    height: \"26\",\n    viewBox: \"0 0 15 26\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 3\n    }\n  }, __jsx(\"path\", {\n    d: \"M2 24L13 13L2 2\",\n    stroke: \"#2F4858\",\n    \"stroke-width\": \"3\",\n    \"stroke-linecap\": \"round\",\n    \"stroke-linejoin\": \"round\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }\n  }));\n};\n\n_c2 = Arrow;\nexport default PagesController;\n\nfunction getAllPages() {\n  return Array.from(document.getElementsByClassName(compStyle.Page));\n}\n\nfunction setActivePage(pagesArray, indexOfActivePage, props) {\n  // console.log(\"setting the green border\");\n  pagesArray.forEach(function (page, index) {\n    index === indexOfActivePage ? page.classList.add(compStyle.Selected) : page.classList.remove(compStyle.Selected);\n  });\n  props.setActivePage(indexOfActivePage);\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PagesController\");\n$RefreshReg$(_c2, \"Arrow\");","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/PagesController.tsx"],"names":["React","useCallback","useEffect","useRef","useState","useEmblaCarousel","FMLogo","compStyle","PagesController","props","Array","currentPages","keys","pagesAmount","setPagesAmount","document","getElementsByClassName","Page","length","getElementById","classList","add","Selected","didMountRef","CustomRightArrow","onClick","rest","onMove","carouselState","currentSlide","deviceType","carRightArrow","Arrow","CustomLeftArrow","carLeftArrow","handlePageClick","e","indexOfActivePage","console","log","currentTarget","id","pagesArray","getAllPages","setActivePage","viewportCss","overflow","containerCss","display","slideCss","position","loop","slidesToScroll","draggable","emblaRef","embla","scrollPrev","scrollNext","Wrapper","BGContainer","map","page","String","BtnNext","from","forEach","index","remove"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport emblaCarousel, { useEmblaCarousel } from \"embla-carousel/react\";\nimport { responsive } from \"./constants\";\nimport FMLogo from \"./FMlogo\";\n// import \"react-multi-carousel/lib/styles.css\";\n\nimport compStyle from \"./styles/PagesController.module.scss\";\nimport { __DirectiveLocation } from \"graphql\";\n\nconst PagesController = (props: {\n  activePage: number;\n  setActivePage: (index: number) => void;\n  currentPages: number;\n}) => {\n  const [pagesAmount, setPagesAmount] = useState<Array<number>>([\n    ...Array(props.currentPages).keys(),\n  ]);\n\n  useEffect(() => {\n    setPagesAmount([...Array(props.currentPages).keys()]);\n    // if (didMountRef.current) {\n    //   console.log(\"component mounted\");\n    // } else {\n    //   console.log(\"componenet updated\");\n    // }\n  }, [props.currentPages]);\n  //* Effect for setting the border to the first page when there are no other pages.\n  useEffect(() => {\n    if (document.getElementsByClassName(compStyle.Page).length <= 1) {\n      document.getElementById(\"0\")?.classList.add(compStyle.Selected);\n    }\n  });\n\n  const didMountRef = useRef();\n\n  const CustomRightArrow = ({ onClick, ...rest }) => {\n    const {\n      onMove,\n      carouselState: { currentSlide, deviceType },\n    } = rest;\n    // onMove means if dragging or swiping in progress.\n    return (\n      <button className={compStyle.carRightArrow} onClick={() => onClick()}>\n        {Arrow()}\n      </button>\n    );\n  };\n\n  const CustomLeftArrow = ({ onClick, ...rest }) => {\n    const {\n      onMove,\n      carouselState: { currentSlide, deviceType },\n    } = rest;\n    return (\n      <button onClick={() => onClick()} className={compStyle.carLeftArrow}>\n        {Arrow()}\n      </button>\n    );\n  };\n\n  const handlePageClick = (\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\n    indexOfActivePage: number\n  ) => {\n    console.log(\"clicked on a page\", e.currentTarget.id);\n    const pagesArray = getAllPages();\n    setActivePage(pagesArray, indexOfActivePage, props);\n  };\n\n  const viewportCss = {\n    overflow: \"hidden\",\n  };\n  const containerCss = {\n    display: \"flex\",\n  };\n  const slideCss = {\n    position: \"relative\",\n    // minWidth: \"100%\",\n  };\n\n  const [emblaRef, embla] = useEmblaCarousel({\n    loop: false,\n    slidesToScroll: 2,\n    draggable: false,\n  });\n\n  const scrollPrev = useCallback(() => embla && embla.scrollPrev(), [embla]);\n  const scrollNext = useCallback(() => embla && embla.scrollNext(), [embla]);\n\n  return (\n    <div className={compStyle.Wrapper}>\n      <div className={compStyle.BGContainer}>\n        {/* <Carousel\n          containerClass={compStyle.Carousel}\n          itemClass={compStyle.Item}\n          responsive={responsive}\n          customRightArrow={<CustomRightArrow />}\n          customLeftArrow={<CustomLeftArrow />}\n          showDots\n          // ssr\n        > */}\n\n        <div style={viewportCss} ref={emblaRef}>\n          <div style={containerCss}>\n            {pagesAmount.map((page) => {\n              return (\n                <div\n                  key={page}\n                  index={page}\n                  id={String(page)}\n                  onClick={(e) => handlePageClick(e, page)}\n                  // className={`${compStyle.Page}`}\n                  style={slideCss}\n                >\n                  <div>\n                    <FMLogo />\n                    <span>{page + 1}</span>\n                  </div>\n                </div>\n              );\n            })}\n            {/* </Carousel> */}\n          </div>\n        </div>\n        <button className={compStyle.BtnNext} onClick={scrollNext}>\n          {Arrow()}\n        </button>\n        <button onClick={scrollPrev}>{Arrow()}</button>\n      </div>\n    </div>\n  );\n};\n\nconst Arrow = () => (\n  <svg\n    width=\"15\"\n    height=\"26\"\n    viewBox=\"0 0 15 26\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M2 24L13 13L2 2\"\n      stroke=\"#2F4858\"\n      stroke-width=\"3\"\n      stroke-linecap=\"round\"\n      stroke-linejoin=\"round\"\n    />\n  </svg>\n);\n\nexport default PagesController;\n\nfunction getAllPages() {\n  return Array.from(document.getElementsByClassName(compStyle.Page));\n}\n\nfunction setActivePage(\n  pagesArray: Element[],\n  indexOfActivePage: number,\n  props: {\n    activePage: number;\n    setActivePage: (index: number) => void;\n    currentPages: number;\n  }\n) {\n  // console.log(\"setting the green border\");\n  pagesArray.forEach((page, index) => {\n    index === indexOfActivePage\n      ? page.classList.add(compStyle.Selected)\n      : page.classList.remove(compStyle.Selected);\n  });\n  props.setActivePage(indexOfActivePage);\n}\n"]},"metadata":{},"sourceType":"module"}