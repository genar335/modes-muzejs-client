{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/TestPreview.tsx\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport styles from \"../pages/styles/create_test.module.scss\";\nimport FMLogo from \"./FMlogo\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\n\nvar TestPreview = function TestPreview(props) {\n  function handleTextAreaQuestionChange(event) {\n    console.log(event.currentTarget.value);\n    props.saveChanges(_objectSpread(_objectSpread({}, props.currentTestState), {}, _defineProperty({}, props.currentLanguage, _objectSpread(_objectSpread({}, props.currentTestState[props.currentLanguage]), {}, {\n      pages: [].concat(_toConsumableArray(props.currentTestState[props.currentLanguage].pages), [{\n        QnAPairs: []\n      }])\n    }))));\n  }\n\n  function questionRenderController(currentItem) {\n    switch (props.currentTestState.type) {\n      case \"TT\":\n        return __jsx(\"textarea\", {\n          value: props.currentTestState[props.currentLanguage].pages[props.activePage].QnAPairs[currentItem].question,\n          onChange: handleTextAreaQuestionChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }\n        }, \" \");\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  var pageBody = function pageBody() {\n    return __jsx(\"div\", {\n      className: compStyles.pageBody,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, props.currentTestState[props.currentLanguage || \"ru\"].pages[props.activePage].QnAPairs.map(function (qnaPair, index) {\n      return __jsx(\"div\", {\n        className: compStyles.qnaPair,\n        id: String(index),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: compStyles.Question,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, questionRenderController(index)), __jsx(\"div\", {\n        className: compStyles.Answer,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, \"Answer: \", qnaPair.answer));\n    }));\n  };\n\n  return __jsx(\"div\", {\n    className: styles.TestPreview,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }\n  }, __jsx(\"h3\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, \"Page: \", props.activePage + 1), __jsx(\"div\", {\n    className: compStyles.TestBGContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, __jsx(FMLogo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), pageBody()));\n};\n\n_c = TestPreview;\nexport default TestPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"TestPreview\");","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/TestPreview.tsx"],"names":["React","styles","FMLogo","compStyles","TestPreview","props","handleTextAreaQuestionChange","event","console","log","currentTarget","value","saveChanges","currentTestState","currentLanguage","pages","QnAPairs","questionRenderController","currentItem","type","activePage","question","pageBody","map","qnaPair","index","String","Question","Answer","answer","TestBGContainer"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,yCAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAKd;AACJ,WAASC,4BAAT,CAAsCC,KAAtC,EAA6C;AAC3CC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,aAAN,CAAoBC,KAAhC;AACAN,IAAAA,KAAK,CAACO,WAAN,iCACKP,KAAK,CAACQ,gBADX,2BAEGR,KAAK,CAACS,eAFT,kCAGOT,KAAK,CAACQ,gBAAN,CAAuBR,KAAK,CAACS,eAA7B,CAHP;AAIIC,MAAAA,KAAK,+BACAV,KAAK,CAACQ,gBAAN,CAAuBR,KAAK,CAACS,eAA7B,EAA+CC,KAD/C,IAEH;AACEC,QAAAA,QAAQ,EAAE;AADZ,OAFG;AAJT;AAcD;;AACD,WAASC,wBAAT,CAAkCC,WAAlC,EAAuD;AACrD,YAAQb,KAAK,CAACQ,gBAAN,CAAuBM,IAA/B;AACE,WAAK,IAAL;AACE,eACE;AACE,UAAA,KAAK,EACHd,KAAK,CAACQ,gBAAN,CAAuBR,KAAK,CAACS,eAA7B,EAA+CC,KAA/C,CACEV,KAAK,CAACe,UADR,EAEEJ,QAFF,CAEWE,WAFX,EAEwBG,QAJ5B;AAME,UAAA,QAAQ,EAAEf,4BANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAQG,GARH,CADF;AAYA;;AAEF;AACE;AAjBJ;AAmBD;;AACD,MAAMgB,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrB,WACE;AAAK,MAAA,SAAS,EAAEnB,UAAU,CAACmB,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGjB,KAAK,CAACQ,gBAAN,CAAuBR,KAAK,CAACS,eAAN,IAAyB,IAAhD,EAAsDC,KAAtD,CACCV,KAAK,CAACe,UADP,EAECJ,QAFD,CAEUO,GAFV,CAEc,UAACC,OAAD,EAAgBC,KAAhB;AAAA,aACb;AAAK,QAAA,SAAS,EAAEtB,UAAU,CAACqB,OAA3B;AAAoC,QAAA,EAAE,EAAEE,MAAM,CAACD,KAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAEtB,UAAU,CAACwB,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGV,wBAAwB,CAACQ,KAAD,CAD3B,CADF,EAIE;AAAK,QAAA,SAAS,EAAEtB,UAAU,CAACyB,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA4CJ,OAAO,CAACK,MAApD,CAJF,CADa;AAAA,KAFd,CADH,CADF;AAcD,GAfD;;AAiBA,SACE;AAAK,IAAA,SAAS,EAAE5B,MAAM,CAACG,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWC,KAAK,CAACe,UAAN,GAAmB,CAA9B,CADF,EAEE;AAAK,IAAA,SAAS,EAAEjB,UAAU,CAAC2B,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGR,QAAQ,EAFX,CAFF,CADF;AASD,CAtED;;KAAMlB,W;AAwEN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport { IQnA, ITest, TLangOption, TTestTypes } from \"../@types/test\";\nimport styles from \"../pages/styles/create_test.module.scss\";\nimport FMLogo from \"./FMlogo\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\n\nconst TestPreview = (props: {\n  activePage: number;\n  currentLanguage: TLangOption[\"value\"] | undefined;\n  currentTestState: ITest;\n  saveChanges: (test: ITest) => void;\n}) => {\n  function handleTextAreaQuestionChange(event) {\n    console.log(event.currentTarget.value);\n    props.saveChanges({\n      ...props.currentTestState,\n      [props.currentLanguage!]: {\n        ...props.currentTestState[props.currentLanguage!],\n        pages: [\n          ...props.currentTestState[props.currentLanguage!].pages,\n          {\n            QnAPairs: []\n          }\n        ]\n\n      }\n      \n    })\n  }\n  function questionRenderController(currentItem: number) {\n    switch (props.currentTestState.type) {\n      case \"TT\":\n        return (\n          <textarea\n            value={\n              props.currentTestState[props.currentLanguage!].pages[\n                props.activePage\n              ].QnAPairs[currentItem].question\n            }\n            onChange={handleTextAreaQuestionChange}\n          >\n            {\" \"}\n          </textarea>\n        );\n        break;\n\n      default:\n        break;\n    }\n  }\n  const pageBody = () => {\n    return (\n      <div className={compStyles.pageBody}>\n        {props.currentTestState[props.currentLanguage || \"ru\"].pages[\n          props.activePage\n        ].QnAPairs.map((qnaPair: IQnA, index: number) => (\n          <div className={compStyles.qnaPair} id={String(index)}>\n            <div className={compStyles.Question}>\n              {questionRenderController(index)}\n            </div>\n            <div className={compStyles.Answer}>Answer: {qnaPair.answer}</div>\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div className={styles.TestPreview}>\n      <h3>Page: {props.activePage + 1}</h3>\n      <div className={compStyles.TestBGContainer}>\n        <FMLogo />\n        {pageBody()}\n      </div>\n    </div>\n  );\n};\n\nexport default TestPreview;\n"]},"metadata":{},"sourceType":"module"}