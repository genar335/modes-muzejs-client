{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/QACard.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useRef, useState } from \"react\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\nimport addCompStyles from \"./styles/TestNamer.module.scss\";\nimport { closeBtn, CreateLangSwitchers } from \"./TestNamer\";\n\nvar QACard = function QACard(props) {\n  _s();\n\n  var charLimit = 90;\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  console.log(props.cardContents);\n\n  var textPreviewer = function textPreviewer(text) {\n    if (text.length < 1) return __jsx(\"div\", {\n      className: compStyles.emptyText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 33\n      }\n    }, \"T\");\n\n    if (text.length > charLimit) {\n      return text.slice(0, 90) + \"...\";\n    } else {\n      return text;\n    }\n  };\n\n  var _useState2 = useState(),\n      uploadedImg = _useState2[0],\n      setUploadedImg = _useState2[1];\n\n  function handleFileInput(event) {\n    event.preventDefault();\n\n    if (fileInput.current !== null) {\n      var reader = new FileReader();\n      console.log(fileInput.current.files[0]);\n      reader.readAsDataURL(fileInput.current.files[0]);\n      var readFile;\n\n      reader.onload = function () {\n        return setUploadedImg(reader.result);\n      };\n\n      return __jsx(\"img\", {\n        src: readFile,\n        alt: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 14\n        }\n      });\n    }\n  }\n\n  var fileInput = useRef(null);\n  return __jsx(\"div\", {\n    className: \"\".concat(compStyles[props.cardType]),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    id: String(props.iterator),\n    className: \"\".concat(addCompStyles.ModalContainerBG, \" \").concat(!isOpen ? addCompStyles.Hidden : null),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: addCompStyles.ModalContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, closeBtn(setIsOpen), __jsx(\"div\", {\n    className: addCompStyles.Modal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, CreateLangSwitchers(props.setSelectedLanguage, props.inputEnabler), __jsx(\"div\", {\n    className: addCompStyles.NameForm,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, props.cardContents === \"text\" ? props.q_a_TextEntry(props.cardType, props.iterator) : __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleFileInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, \"Upload image\"), __jsx(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    ref: fileInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 21\n    }\n  }), __jsx(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 21\n    }\n  }), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, \"Placeholder for image upload\"), __jsx(\"img\", {\n    src: uploadedImg,\n    alt: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }))))))), __jsx(\"p\", {\n    className: compStyles.QADescription,\n    onClick: function onClick(e) {\n      return setIsOpen(true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, props.cardContents === \"text\" ? textPreviewer(props.qna[props.cardType]) : __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"+\")));\n};\n\n_s(QACard, \"RHxPmEDCBgMWEPznHNkXItaYhms=\");\n\n_c = QACard;\nexport default QACard;\n\nvar _c;\n\n$RefreshReg$(_c, \"QACard\");","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/components/QACard.tsx"],"names":["React","useRef","useState","compStyles","addCompStyles","closeBtn","CreateLangSwitchers","QACard","props","charLimit","isOpen","setIsOpen","console","log","cardContents","textPreviewer","text","length","emptyText","slice","uploadedImg","setUploadedImg","handleFileInput","event","preventDefault","fileInput","current","reader","FileReader","files","readAsDataURL","readFile","onload","result","cardType","String","iterator","ModalContainerBG","Hidden","ModalContainer","Modal","setSelectedLanguage","inputEnabler","NameForm","q_a_TextEntry","QADescription","e","qna"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { IQnA, TLangOption } from \"../@types/test\";\nimport compStyles from \"./styles/TestPreview.module.scss\";\nimport addCompStyles from \"./styles/TestNamer.module.scss\";\nimport { closeBtn, CreateLangSwitchers } from \"./TestNamer\";\nimport { read } from \"fs\";\nimport { readFile } from \"fs/promises\";\n\nconst QACard = (props: {\n  cardType: \"answer\" | \"question\";\n  cardContents: \"img\" | \"text\";\n  // saveData: (data) => void;\n  iterator: number;\n  setSelectedLanguage: (chooseLanguage: TLangOption[\"value\"]) => void;\n  inputEnabler: () => void;\n  qna: IQnA;\n  testType: any;\n  q_a_TextEntry: (type: \"answer\" | \"question\", id: number) => JSX.Element;\n}) => {\n  const charLimit = 90;\n  const [isOpen, setIsOpen] = useState(false);\n  console.log(props.cardContents);\n  const textPreviewer = (text: string) => {\n    if (text.length < 1) return <div className={compStyles.emptyText}>T</div>;\n    if (text.length > charLimit) {\n      return text.slice(0, 90) + \"...\";\n    } else {\n      return text;\n    }\n  };\n\n  const [uploadedImg, setUploadedImg] = useState();\n  function handleFileInput(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n    if (fileInput.current !== null) {\n      const reader = new FileReader();\n      console.log(fileInput.current.files![0]);\n      reader.readAsDataURL(fileInput.current.files![0]);\n      let readFile;\n      reader.onload = () => setUploadedImg(reader.result);\n      return <img src={readFile} alt=\"\" />;\n    }\n  }\n  const fileInput = useRef<HTMLInputElement>(null);\n  return (\n    <div className={`${compStyles[props.cardType]}`}>\n      <div\n        id={String(props.iterator)}\n        className={`${addCompStyles.ModalContainerBG} ${\n          !isOpen ? addCompStyles.Hidden : null\n        }`}\n      >\n        <div className={addCompStyles.ModalContainer}>\n          {closeBtn(setIsOpen)}\n          <div className={addCompStyles.Modal}>\n            {CreateLangSwitchers(props.setSelectedLanguage, props.inputEnabler)}\n            <div className={addCompStyles.NameForm}>\n              {props.cardContents === \"text\" ? (\n                props.q_a_TextEntry(props.cardType, props.iterator)\n              ) : (\n                <div>\n                  <form onSubmit={handleFileInput}>\n                    <label>Upload image</label>\n                    <input type=\"file\" accept=\"image/*\" ref={fileInput} />\n                    <input type=\"submit\" value=\"Submit\" />\n                    <p>Placeholder for image upload</p>\n                    <img src={uploadedImg} alt=\"\" />\n                  </form>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n      <p className={compStyles.QADescription} onClick={(e) => setIsOpen(true)}>\n        {props.cardContents === \"text\" ? (\n          textPreviewer(props.qna[props.cardType])\n        ) : (\n          <p>+</p>\n        )}\n      </p>\n    </div>\n  );\n};\nexport default QACard;\n"]},"metadata":{},"sourceType":"module"}