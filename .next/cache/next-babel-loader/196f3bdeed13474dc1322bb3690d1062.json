{"ast":null,"code":"var _jsxFileName = \"/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/pages/TMS/create_test.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport Select from \"react-select\";\nimport PhotoManager from \"../../components/PhotoManager\";\nimport TestPreview from \"../../components/TestPreview\";\nimport styles from \"../styles/create_test.module.scss\";\n\nfunction create_test() {\n  _s();\n\n  var _useState = useState({\n    pages: 1,\n    en: {\n      name: \"\",\n      pages: []\n    },\n    lv: {\n      name: \"\",\n      pages: []\n    },\n    ru: {\n      name: \"\",\n      pages: []\n    },\n    type: \"\"\n  }),\n      test = _useState[0],\n      setTest = _useState[1];\n\n  var _useState2 = useState(),\n      currentLang = _useState2[0],\n      setCurrentLang = _useState2[1];\n\n  var handleLangChange = function handleLangChange(chosenLang) {\n    setCurrentLang(chosenLang);\n  };\n\n  var handleClick = function handleClick() {\n    setTest({\n      ru: {\n        name: \"imya\",\n        pages: test.ru.pages\n      },\n      lv: test.lv,\n      en: test.en,\n      pages: test.pages,\n      type: \"TP\"\n    });\n  };\n\n  var languageOptions = [{\n    value: \"ru\",\n    label: \"RU\"\n  }, {\n    value: \"en\",\n    label: \"EN\"\n  }, {\n    value: \"lv\",\n    label: \"LV\"\n  }];\n  var typeOptions = [{\n    value: \"TT\",\n    label: \"Text – Text\"\n  }, {\n    value: \"TP\",\n    label: \"Text – Photo\"\n  }, {\n    value: \"PP\",\n    label: \"Photo – Photo\"\n  }];\n\n  var _useState3 = useState(),\n      testType = _useState3[0],\n      setTestType = _useState3[1];\n\n  var handleTypeChange = function handleTypeChange(chosenType) {\n    return setTestType(chosenType);\n  };\n\n  var _useState4 = useState(false),\n      editEnabled = _useState4[0],\n      setEditEnabled = _useState4[1];\n\n  var editingEnabler = function editingEnabler(currentLang, testType) {\n    setEditEnabled(true);\n  };\n\n  useEffect(function () {\n    if ((currentLang && testType) != undefined) {\n      console.log(\"in an if\");\n      setEditEnabled(true);\n    } else {\n      setEditEnabled(false);\n    }\n\n    console.log(\"outside of if\");\n    console.log(currentLang, testType);\n  }, [currentLang, testType]);\n  return __jsx(\"div\", {\n    className: styles.CreateTestContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.TestType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, __jsx(Select, {\n    options: typeOptions,\n    className: styles.TestTypeSelect,\n    onChange: function onChange(selected) {\n      return handleTypeChange(selected.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    className: styles.PageController,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, \"Add page\"), __jsx(\"input\", {\n    type: \"number\",\n    name: \"pageCount\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  })), testType, __jsx(PhotoManager, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: styles.TestNaming,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    disabled: !editEnabled,\n    type: \"text\",\n    name: \"TestName\",\n    placeholder: \"Test name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }), __jsx(Select // TODO: Need to figure out types for the @selected parameter\n  , {\n    onChange: function onChange(selected) {\n      return handleLangChange(selected.value || \"\");\n    },\n    options: languageOptions,\n    className: styles.lgSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  })), __jsx(TestPreview, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(create_test, \"4Ql6slzQQhhpN4RoCT5hJQdoCG8=\");\n\nexport default create_test;","map":{"version":3,"sources":["/Users/yberfox228/Documents/itlemonade/f-museum/tech/CS/modes-muzejs-client/pages/TMS/create_test.tsx"],"names":["React","useEffect","useState","Select","PhotoManager","TestPreview","styles","create_test","pages","en","name","lv","ru","type","test","setTest","currentLang","setCurrentLang","handleLangChange","chosenLang","handleClick","languageOptions","value","label","typeOptions","testType","setTestType","handleTypeChange","chosenType","editEnabled","setEditEnabled","editingEnabler","undefined","console","log","CreateTestContainer","TestType","TestTypeSelect","selected","PageController","TestNaming","lgSelect"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Select from \"react-select\";\nimport { ITest, TLangOption, TTestTypes } from \"../../@types/test\";\nimport PhotoManager from \"../../components/PhotoManager\";\nimport TestPreview from \"../../components/TestPreview\";\nimport styles from \"../styles/create_test.module.scss\";\n\nfunction create_test() {\n  const [test, setTest] = useState<ITest>({\n    pages: 1,\n    en: {\n      name: \"\",\n      pages: [],\n    },\n    lv: {\n      name: \"\",\n      pages: [],\n    },\n    ru: {\n      name: \"\",\n      pages: [],\n    },\n    type: \"\",\n  });\n\n  const [currentLang, setCurrentLang] = useState<TLangOption>();\n  const handleLangChange = (chosenLang: TLangOption) => {\n    setCurrentLang(chosenLang);\n  };\n\n  const handleClick = () => {\n    setTest({\n      ru: {\n        name: \"imya\",\n        pages: test.ru.pages,\n      },\n      lv: test.lv,\n      en: test.en,\n      pages: test.pages,\n      type: \"TP\",\n    });\n  };\n\n  const languageOptions: Array<TLangOption> = [\n    { value: \"ru\", label: \"RU\" },\n    { value: \"en\", label: \"EN\" },\n    { value: \"lv\", label: \"LV\" },\n  ];\n\n  type TTypeOptions = {\n    value: \"TT\" | \"TP\" | \"PP\";\n    label: \"Text – Text\" | \"Text – Photo\" | \"Photo – Photo\";\n  };\n  const typeOptions: Array<TTypeOptions> = [\n    { value: \"TT\", label: \"Text – Text\" },\n    { value: \"TP\", label: \"Text – Photo\" },\n    { value: \"PP\", label: \"Photo – Photo\" },\n  ];\n\n  const [testType, setTestType] = useState<TTestTypes>();\n  const handleTypeChange = (chosenType: TTestTypes): void =>\n    setTestType(chosenType);\n\n  const [editEnabled, setEditEnabled] = useState<boolean>(false);\n  const editingEnabler = (currentLang: string, testType: string) => {\n    setEditEnabled(true);\n  };\n\n  useEffect(() => {\n    if ((currentLang && testType) != undefined) {\n      console.log(\"in an if\");\n      setEditEnabled(true);\n    } else {\n      setEditEnabled(false);\n    }\n    console.log(\"outside of if\");\n    console.log(currentLang, testType);\n  }, [currentLang, testType]);\n\n  return (\n    <div className={styles.CreateTestContainer}>\n      <div className={styles.TestType}>\n        <Select\n          options={typeOptions}\n          className={styles.TestTypeSelect}\n          onChange={(selected: any): void => handleTypeChange(selected.value)}\n        />\n      </div>\n      <div className={styles.PageController}>\n        <button onClick={handleClick}>Add page</button>\n        <input type=\"number\" name=\"pageCount\" />\n      </div>\n      {testType}\n      <PhotoManager />\n      <div className={styles.TestNaming}>\n        <input\n          disabled={!editEnabled}\n          type=\"text\"\n          name=\"TestName\"\n          placeholder=\"Test name\"\n        />\n        <Select\n          // TODO: Need to figure out types for the @selected parameter\n          onChange={(selected: any): void =>\n            handleLangChange(selected.value || \"\")\n          }\n          options={languageOptions}\n          className={styles.lgSelect}\n        />\n      </div>\n      <TestPreview />\n    </div>\n  );\n}\n\nexport default create_test;\n"]},"metadata":{},"sourceType":"module"}